import { requireContext } from '../../../tests/helpers';
import { theories } from '../../../tests/utils';
import { mutateMappingPath } from '../helpers';

requireContext();

theories(mutateMappingPath, [
  {
    name: 'Select formatted on base table',
    in: [
      {
        index: 0,
        parentTableName: 'CollectionObject',
        currentTableName: undefined,
        newValue: '-formatted',
        isRelationship: false,
        newTableName: 'CollectionObject',
        mappingPath: ['0'],
        ignoreToMany: true,
      },
    ],
    out: ['-formatted'],
  },
  {
    name: 'Change formatted to field on base table',
    in: [
      {
        index: 0,
        parentTableName: 'CollectionObject',
        currentTableName: 'CollectionObject',
        newValue: 'catalogNumber',
        isRelationship: false,
        newTableName: undefined,
        mappingPath: ['-formatted'],
        ignoreToMany: true,
      },
    ],
    out: ['catalogNumber'],
  },
  {
    name: 'Unset field on base table',
    in: [
      {
        index: 0,
        parentTableName: 'CollectionObject',
        currentTableName: undefined,
        newValue: '0',
        isRelationship: false,
        newTableName: undefined,
        mappingPath: ['catalogNumber'],
        ignoreToMany: true,
      },
    ],
    out: ['0'],
  },
  {
    name: 'Pick -to-one on base table',
    in: [
      {
        index: 0,
        parentTableName: 'CollectionObject',
        currentTableName: undefined,
        newValue: 'accession',
        isRelationship: true,
        newTableName: 'Accession',
        mappingPath: ['0'],
        ignoreToMany: true,
      },
    ],
    out: ['accession', '0'],
  },
  {
    name: 'Pick cycle in a -to-many',
    in: [
      {
        index: 1,
        parentTableName: 'CollectionObjectCitation',
        currentTableName: undefined,
        newValue: 'collectionObject',
        isRelationship: true,
        newTableName: 'CollectionObject',
        mappingPath: ['collectionObjectCitations', '#1', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['collectionObjectCitations', '#1', 'collectionObject', '0'],
  },
  {
    name: 'Pick tree in a -to-many',
    in: [
      {
        index: 1,
        parentTableName: 'Determination',
        currentTableName: undefined,
        newValue: 'taxon',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['determinations', '#1', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['determinations', '#1', 'taxon', '0'],
  },
  {
    name: 'Change rank in -to-many',
    in: [
      {
        index: 2,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: '$Class',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['determinations', '#1', 'taxon', '$Phylum', 'fullName'],
        ignoreToMany: true,
      },
    ],
    out: ['determinations', '#1', 'taxon', '$Class', 'fullName'],
  },
  {
    name: 'Pick a -to-many tree',
    in: [
      {
        index: 0,
        parentTableName: 'TaxonAttribute',
        currentTableName: undefined,
        newValue: 'taxons',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['0'],
        ignoreToMany: true,
      },
    ],
    out: ['taxons', '#1', '0'],
  },
  {
    name: 'Pick rank in -to-many tree',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: '$-any',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['taxons', '#1', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['taxons', '#1', '$-any', '0'],
  },
  {
    name: 'Change rank in -to-many tree',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: '$Kingdom',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['taxons', '#1', '$-any', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['taxons', '#1', '$Kingdom', '0'],
  },
  {
    name: "Don't preserve fields to right on change from any rank",
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: '$Kingdom',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: [
          'taxons',
          '#1',
          '$-any',
          'determinations',
          '#1',
          'preferredTaxon',
          '$Class',
          'fullName',
        ],
        ignoreToMany: true,
      },
    ],
    out: ['taxons', '#1', '$Kingdom', '0'],
  },
  {
    name: 'Preserve fields to right on change to any rank',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: '$-any',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['taxons', '#1', '$Kingdom', 'fullName'],
        ignoreToMany: true,
      },
    ],
    out: ['taxons', '#1', '$-any', 'fullName'],
  },
  {
    name: 'Preserve fields to right on change to same table',
    in: [
      {
        index: 0,
        parentTableName: 'TaxonAttribute',
        currentTableName: 'Agent',
        newValue: 'createdByAgent',
        isRelationship: true,
        newTableName: 'Agent',
        mappingPath: ['modifiedByAgent', 'dateOfBirth-fullDate'],
        ignoreToMany: true,
      },
    ],
    out: ['createdByAgent', 'dateOfBirth-fullDate'],
  },
  {
    name: "Don't preserve fields to right on change from non-tree to tree",
    in: [
      {
        index: 0,
        parentTableName: 'TaxonAttribute',
        currentTableName: 'Agent',
        newValue: 'taxons',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['modifiedByAgent', 'agentType'],
        ignoreToMany: true,
      },
    ],
    out: ['taxons', '#1', '0'],
  },
  {
    name: "Don't preserve field to right on change between different tables",
    in: [
      {
        index: 0,
        parentTableName: 'CollectionObject',
        currentTableName: 'CollectionObjectAttribute',
        newValue: 'collection',
        isRelationship: true,
        newTableName: 'Collection',
        mappingPath: ['collectionObjectAttribute', 'text14'],
        ignoreToMany: true,
      },
    ],
    out: ['collection', '0'],
  },
  {
    name: 'Tree query change rank',
    in: [
      {
        index: 0,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: '$Phylum',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['$Order', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['$Phylum', '0'],
  },
  {
    name: 'Tree query change rank (with fields to right)',
    in: [
      {
        index: 0,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: '$Order',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['$Genus', 'taxonId'],
        ignoreToMany: true,
      },
    ],
    out: ['$Order', 'taxonId'],
  },
  {
    name: 'Tree query change field in a rank',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: 'fullName',
        isRelationship: false,
        newTableName: undefined,
        mappingPath: ['$Genus', 'author'],
        ignoreToMany: true,
      },
    ],
    out: ['$Genus', 'fullName'],
  },
  {
    name: 'Tree query unset field in a rank',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: '0',
        isRelationship: false,
        newTableName: undefined,
        mappingPath: ['$Genus', 'fullName'],
        ignoreToMany: true,
      },
    ],
    out: ['$Genus', '0'],
  },
  {
    name: 'Tree query set a field in a rank',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: 'taxonId',
        isRelationship: false,
        newTableName: 'Taxon',
        mappingPath: ['$Genus', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['$Genus', 'taxonId'],
  },
  {
    name: 'Longer tree query set a field in a rank',
    in: [
      {
        index: 3,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: 'author',
        isRelationship: false,
        newTableName: undefined,
        mappingPath: ['$-any', 'children', '#1', '$Kingdom', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['$-any', 'children', '#1', '$Kingdom', 'author'],
  },
  {
    name: 'Pick any rank formatted',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: '-formatted',
        isRelationship: false,
        newTableName: 'Taxon',
        mappingPath: ['$-any', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['$-any', '-formatted'],
  },
  {
    name: 'Change any rank formatted to author',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: 'author',
        isRelationship: false,
        newTableName: undefined,
        mappingPath: ['$-any', '-formatted'],
        ignoreToMany: true,
      },
    ],
    out: ['$-any', 'author'],
  },
  {
    name: 'Any tree rank formatted to child taxa',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: 'children',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['$-any', '-formatted'],
        ignoreToMany: true,
      },
    ],
    out: ['$-any', 'children', '#1', '0'],
  },
  {
    name: 'Pick -to-many in tree',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: 'Taxon',
        newValue: 'determinations',
        isRelationship: true,
        newTableName: 'Determination',
        mappingPath: ['$-any', 'children', '#1', '$Kingdom', 'author'],
        ignoreToMany: true,
      },
    ],
    out: ['$-any', 'determinations', '#1', '0'],
  },
  {
    name: 'Pick aggregated in tree in -to-many',
    in: [
      {
        index: 2,
        parentTableName: 'Determination',
        currentTableName: undefined,
        newValue: '-formatted',
        isRelationship: false,
        newTableName: 'Determination',
        mappingPath: ['$-any', 'determinations', '#1', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['$-any', 'determinations', '#1', '-formatted'],
  },
  {
    name: 'Pick nested -to-many in any tree rank',
    in: [
      {
        index: 3,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: '$-any',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['$-any', 'determinations', '#1', 'preferredTaxon', '0'],
        ignoreToMany: true,
      },
    ],
    out: ['$-any', 'determinations', '#1', 'preferredTaxon', '$-any', '0'],
  },
  {
    name: 'Pick field in nested any tree rank',
    in: [
      {
        index: 4,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: 'citesStatus',
        isRelationship: false,
        newTableName: undefined,
        mappingPath: [
          '$-any',
          'determinations',
          '#1',
          'preferredTaxon',
          '$-any',
          '0',
        ],
        ignoreToMany: true,
      },
    ],
    out: [
      '$-any',
      'determinations',
      '#1',
      'preferredTaxon',
      '$-any',
      'citesStatus',
    ],
  },
  {
    name: 'Nested any in nested -to-many',
    in: [
      {
        index: 4,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: 'taxonAttachments',
        isRelationship: true,
        newTableName: 'TaxonAttachment',
        mappingPath: [
          '$-any',
          'determinations',
          '#1',
          'preferredTaxon',
          '$-any',
          'citesStatus',
        ],
        ignoreToMany: true,
      },
    ],
    out: [
      '$-any',
      'determinations',
      '#1',
      'preferredTaxon',
      '$-any',
      'taxonAttachments',
      '#1',
      '0',
    ],
  },
  {
    name: 'Aggregated in nested any with nested -to-many',
    in: [
      {
        index: 5,
        parentTableName: 'TaxonAttachment',
        currentTableName: undefined,
        newValue: '-formatted',
        isRelationship: false,
        newTableName: 'TaxonAttachment',
        mappingPath: [
          '$-any',
          'determinations',
          '#1',
          'preferredTaxon',
          '$-any',
          'taxonAttachments',
          '#1',
          '0',
        ],
        ignoreToMany: true,
      },
    ],
    out: [
      '$-any',
      'determinations',
      '#1',
      'preferredTaxon',
      '$-any',
      'taxonAttachments',
      '#1',
      '-formatted',
    ],
  },
  {
    name: 'Changing -to-many index preserves content to the right',
    in: [
      {
        index: 1,
        parentTableName: 'CollectionRelationship',
        currentTableName: 'CollectionRelationship',
        newValue: '#2',
        isRelationship: true,
        newTableName: 'CollectionRelationship',
        mappingPath: [
          'rightSideRels',
          '#1',
          'leftSide',
          'accession',
          'accessionNumber',
        ],
      },
    ],
    out: ['rightSideRels', '#2', 'leftSide', 'accession', 'accessionNumber'],
  },
  {
    name: 'Can have nested -to-many',
    in: [
      {
        index: 5,
        parentTableName: 'AccessionAgent',
        currentTableName: undefined,
        newValue: '#1',
        isRelationship: true,
        newTableName: 'AccessionAgent',
        mappingPath: [
          'rightSideRels',
          '#2',
          'leftSide',
          'accession',
          'accessionAgents',
          '0',
        ],
      },
    ],
    out: [
      'rightSideRels',
      '#2',
      'leftSide',
      'accession',
      'accessionAgents',
      '#1',
      '0',
    ],
  },
  {
    name: 'Can ignore both -to-many and tree ranks',
    in: [
      {
        index: 0,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: 'children',
        isRelationship: true,
        newTableName: 'Taxon',
        mappingPath: ['$-any', 'source'],
        ignoreToMany: true,
        ignoreTreeRanks: true,
      },
    ],
    out: ['$-any', 'children', '#1', '$-any', '0'],
  },
  {
    name: 'Ignoring -to-many works when ignoring tree ranks',
    in: [
      {
        index: 1,
        parentTableName: 'Taxon',
        currentTableName: undefined,
        newValue: 'determinations',
        isRelationship: true,
        newTableName: 'Determination',
        mappingPath: ['$-any', 'hybridParent1', '$-any', '0'],
        ignoreToMany: true,
        ignoreTreeRanks: true,
      },
    ],
    out: ['$-any', 'hybridParent1', '$-any', 'determinations', '#1', '0'],
  },
]);
