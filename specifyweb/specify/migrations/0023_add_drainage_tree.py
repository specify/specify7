# Generated by Django 3.2.15 on 2025-01-17 02:10

from django.apps import apps as specify_apps
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from specifyweb.specify.models import protect_with_blockers

from specifyweb.specify.migration_utils.update_schema_config import revert_table_field_schema_config, revert_table_schema_config, update_table_field_schema_config_with_defaults, update_table_schema_config_with_defaults
from specifyweb.specify.migration_utils.sp7_schemaconfig import MIGRATION_0023_TABLES as SCHEMA_CONFIG_TABLES, MIGRATION_0023_FIELDS as SCHEMA_CONFIG_MOD_TABLE_FIELDS

def add_drainage_to_schema_config(apps):
    Discipline = apps.get_model('specify', 'Discipline')
    for discipline in Discipline.objects.all():
        for table, desc in SCHEMA_CONFIG_TABLES:
            update_table_schema_config_with_defaults(table, discipline.id, desc, apps)

        for table, fields in SCHEMA_CONFIG_MOD_TABLE_FIELDS.items():
            for field in fields:
                update_table_field_schema_config_with_defaults(
                    table, discipline.id, field, apps)


def remove_drainage_to_schema_config(apps):
    for table, fields in SCHEMA_CONFIG_MOD_TABLE_FIELDS.items():
        for table, _ in SCHEMA_CONFIG_TABLES:
            revert_table_schema_config(table, apps)
        for field in fields:
            revert_table_field_schema_config(table, field, apps)

class Migration(migrations.Migration):

    dependencies = [
        ('specify', '0022_ensure_default_cots'),
    ]

    def apply_migration(apps, schema_editor):
        add_drainage_to_schema_config(apps)

    def revert_migration(apps, schema_editor):
        remove_drainage_to_schema_config(apps)

    operations = [

        migrations.CreateModel(
            name='Drainagetreedef',
            fields=[
                ('id', models.AutoField(db_column='drainagetreedefid', primary_key=True, serialize=False)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', default=0, null=True)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', null=True, on_delete=protect_with_blockers, related_name='drainagetreedefs', to='specify.discipline')),
            ],
            options={
                'db_table': 'drainagetreedef',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Drainagetreedefitem',
            fields=[
                ('id', models.AutoField(db_column='drainagetreedefitemid', primary_key=True, serialize=False)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=255, null=True)),
                ('isenforced', models.BooleanField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.BooleanField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('rankid', models.IntegerField(blank=True, db_column='RankID', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=255, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentItemID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='specify.drainagetreedefitem')),
                ('treedef', models.ForeignKey(db_column='DrainageTreeDefID', null=True, on_delete=protect_with_blockers, related_name='treedefitems', to='specify.drainagetreedef')),
            ],
            options={
                'db_table': 'drainagetreedefitem',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Drainage',
            fields=[
                ('id', models.AutoField(db_column='drainageid', primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.BooleanField(db_column='IsAccepted', default=False)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('accepteddrainage', models.ForeignKey(db_column='AcceptedID', null=True, on_delete=protect_with_blockers, related_name='acceptedchildren', to='specify.drainage')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('definition', models.ForeignKey(db_column='DrainageTreeDefID', null=True, on_delete=protect_with_blockers, related_name='treeentries', to='specify.drainagetreedef')),
                ('definitionitem', models.ForeignKey(db_column='DrainageTreeDefItemID', null=True, on_delete=protect_with_blockers, related_name='treeentries', to='specify.drainagetreedefitem')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='specify.drainage')),
            ],
            options={
                'db_table': 'drainage',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='discipline',
            name='drainagetreedef',
            field=models.ForeignKey(db_column='DrainageTreeDefID', null=True, on_delete=protect_with_blockers, related_name='disciplines', to='specify.drainagetreedef'),
        ),

        migrations.RunPython(apply_migration, revert_migration, atomic=True),
    ]
