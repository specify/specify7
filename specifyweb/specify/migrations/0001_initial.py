# Generated by Django 3.2.15 on 2024-06-13 20:57
# Run `INSERT INTO django_migrations (app, name, applied) VALUES ('specify', '0001_initial', NOW());`
# This migration is just a reflection of the current database schema state.
# So the migration needs be manually added to the django_migrations table.

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import specifyweb.specify.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Specifyuser',
            fields=[
                ('id', models.AutoField(db_column='specifyuserid', primary_key=True, serialize=False)),
                ('accumminloggedin', models.BigIntegerField(blank=True, db_column='AccumMinLoggedIn', null=True)),
                ('email', models.CharField(blank=True, db_column='EMail', max_length=64, null=True)),
                ('isloggedin', models.BooleanField(db_column='IsLoggedIn', default=False)),
                ('isloggedinreport', models.BooleanField(db_column='IsLoggedInReport', default=False)),
                ('logincollectionname', models.CharField(blank=True, db_column='LoginCollectionName', max_length=64, null=True)),
                ('logindisciplinename', models.CharField(blank=True, db_column='LoginDisciplineName', max_length=64, null=True)),
                ('loginouttime', models.DateTimeField(blank=True, db_column='LoginOutTime', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=255)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=32, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
            ],
            options={
                'db_table': 'specifyuser',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Accession',
            fields=[
                ('id', models.AutoField(db_column='accessionid', primary_key=True, serialize=False)),
                ('accessioncondition', models.CharField(blank=True, db_column='AccessionCondition', max_length=255, null=True)),
                ('accessionnumber', models.CharField(db_column='AccessionNumber', max_length=60)),
                ('dateaccessioned', models.DateTimeField(blank=True, db_column='DateAccessioned', null=True)),
                ('dateacknowledged', models.DateTimeField(blank=True, db_column='DateAcknowledged', null=True)),
                ('datereceived', models.DateTimeField(blank=True, db_column='DateReceived', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('totalvalue', models.DecimalField(blank=True, db_column='TotalValue', decimal_places=10, max_digits=22, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('verbatimdate', models.CharField(blank=True, db_column='VerbatimDate', max_length=50, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
            ],
            options={
                'db_table': 'accession',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(db_column='addressid', primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=255, null=True)),
                ('address3', models.CharField(blank=True, db_column='Address3', max_length=255, null=True)),
                ('address4', models.CharField(blank=True, db_column='Address4', max_length=255, null=True)),
                ('address5', models.CharField(blank=True, db_column='Address5', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=64, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=64, null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=50, null=True)),
                ('iscurrent', models.BooleanField(blank=True, db_column='IsCurrent', null=True)),
                ('isprimary', models.BooleanField(blank=True, db_column='IsPrimary', null=True)),
                ('isshipping', models.BooleanField(blank=True, db_column='IsShipping', null=True)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('phone1', models.CharField(blank=True, db_column='Phone1', max_length=50, null=True)),
                ('phone2', models.CharField(blank=True, db_column='Phone2', max_length=50, null=True)),
                ('positionheld', models.CharField(blank=True, db_column='PositionHeld', max_length=32, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=32, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('roomorbuilding', models.CharField(blank=True, db_column='RoomOrBuilding', max_length=50, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('typeofaddr', models.CharField(blank=True, db_column='TypeOfAddr', max_length=32, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
            ],
            options={
                'db_table': 'address',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Addressofrecord',
            fields=[
                ('id', models.AutoField(db_column='addressofrecordid', primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=64, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=64, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=32, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
            ],
            options={
                'db_table': 'addressofrecord',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(db_column='agentid', primary_key=True, serialize=False)),
                ('abbreviation', models.CharField(blank=True, db_column='Abbreviation', max_length=50, null=True)),
                ('agenttype', models.SmallIntegerField(db_column='AgentType')),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.SmallIntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('dateofbirth', models.DateTimeField(blank=True, db_column='DateOfBirth', null=True)),
                ('dateofbirthprecision', models.SmallIntegerField(blank=True, db_column='DateOfBirthPrecision', null=True)),
                ('dateofdeath', models.DateTimeField(blank=True, db_column='DateOfDeath', null=True)),
                ('dateofdeathprecision', models.SmallIntegerField(blank=True, db_column='DateOfDeathPrecision', null=True)),
                ('datetype', models.SmallIntegerField(blank=True, db_column='DateType', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', max_length=50, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('initials', models.CharField(blank=True, db_column='Initials', max_length=8, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('interests', models.CharField(blank=True, db_column='Interests', max_length=255, null=True)),
                ('jobtitle', models.CharField(blank=True, db_column='JobTitle', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=256, null=True)),
                ('middleinitial', models.CharField(blank=True, db_column='MiddleInitial', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('suffix', models.CharField(blank=True, db_column='Suffix', max_length=50, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=50, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=1024, null=True)),
                ('verbatimdate1', models.CharField(blank=True, db_column='VerbatimDate1', max_length=128, null=True)),
                ('verbatimdate2', models.CharField(blank=True, db_column='VerbatimDate2', max_length=128, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
            ],
            options={
                'db_table': 'agent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.AutoField(db_column='appraisalid', primary_key=True, serialize=False)),
                ('appraisaldate', models.DateTimeField(db_column='AppraisalDate')),
                ('appraisalnumber', models.CharField(db_column='AppraisalNumber', max_length=64, unique=True)),
                ('appraisalvalue', models.DecimalField(blank=True, db_column='AppraisalValue', decimal_places=10, max_digits=22, null=True)),
                ('monetaryunittype', models.CharField(blank=True, db_column='MonetaryUnitType', max_length=8, null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('accession', models.ForeignKey(db_column='AccessionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='appraisals', to='specify.accession')),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'appraisal',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(db_column='attachmentid', primary_key=True, serialize=False)),
                ('attachmentlocation', models.CharField(blank=True, db_column='AttachmentLocation', max_length=128, null=True)),
                ('attachmentstorageconfig', models.TextField(blank=True, db_column='AttachmentStorageConfig', null=True)),
                ('capturedevice', models.CharField(blank=True, db_column='CaptureDevice', max_length=128, null=True)),
                ('copyrightdate', models.CharField(blank=True, db_column='CopyrightDate', max_length=64, null=True)),
                ('copyrightholder', models.CharField(blank=True, db_column='CopyrightHolder', max_length=64, null=True)),
                ('credit', models.CharField(blank=True, db_column='Credit', max_length=64, null=True)),
                ('dateimaged', models.CharField(blank=True, db_column='DateImaged', max_length=64, null=True)),
                ('filecreateddate', models.DateTimeField(blank=True, db_column='FileCreatedDate', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('ispublic', models.BooleanField(db_column='IsPublic', default=False)),
                ('license', models.CharField(blank=True, db_column='License', max_length=64, null=True)),
                ('licenselogourl', models.CharField(blank=True, db_column='LicenseLogoUrl', max_length=256, null=True)),
                ('metadatatext', models.CharField(blank=True, db_column='MetadataText', max_length=256, null=True)),
                ('mimetype', models.CharField(blank=True, db_column='MimeType', max_length=1024, null=True)),
                ('origfilename', models.TextField(db_column='OrigFilename')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('scopeid', models.IntegerField(blank=True, db_column='ScopeID', null=True)),
                ('scopetype', models.SmallIntegerField(blank=True, db_column='ScopeType', null=True)),
                ('subjectorientation', models.CharField(blank=True, db_column='SubjectOrientation', max_length=64, null=True)),
                ('subtype', models.CharField(blank=True, db_column='Subtype', max_length=64, null=True)),
                ('tableid', models.SmallIntegerField(db_column='TableID')),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=255, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('visibility', models.SmallIntegerField(blank=True, db_column='Visibility', null=True)),
            ],
            options={
                'db_table': 'attachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Attributedef',
            fields=[
                ('id', models.AutoField(db_column='attributedefid', primary_key=True, serialize=False)),
                ('datatype', models.SmallIntegerField(blank=True, db_column='DataType', null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=32, null=True)),
                ('tabletype', models.SmallIntegerField(blank=True, db_column='TableType', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'attributedef',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.AutoField(db_column='borrowid', primary_key=True, serialize=False)),
                ('borrowdate', models.DateTimeField(blank=True, db_column='BorrowDate', null=True)),
                ('borrowdateprecision', models.SmallIntegerField(blank=True, db_column='BorrowDatePrecision', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('currentduedate', models.DateTimeField(blank=True, db_column='CurrentDueDate', null=True)),
                ('dateclosed', models.DateTimeField(blank=True, db_column='DateClosed', null=True)),
                ('invoicenumber', models.CharField(db_column='InvoiceNumber', max_length=50)),
                ('isclosed', models.BooleanField(blank=True, db_column='IsClosed', null=True)),
                ('isfinancialresponsibility', models.BooleanField(blank=True, db_column='IsFinancialResponsibility', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('numberofitemsborrowed', models.IntegerField(blank=True, db_column='NumberOfItemsBorrowed', null=True)),
                ('originalduedate', models.DateTimeField(blank=True, db_column='OriginalDueDate', null=True)),
                ('receiveddate', models.DateTimeField(blank=True, db_column='ReceivedDate', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('addressofrecord', models.ForeignKey(db_column='AddressOfRecordID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.addressofrecord')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'borrow',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Borrowmaterial',
            fields=[
                ('id', models.AutoField(db_column='borrowmaterialid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=250, null=True)),
                ('incomments', models.TextField(blank=True, db_column='InComments', null=True)),
                ('materialnumber', models.CharField(db_column='MaterialNumber', max_length=50)),
                ('outcomments', models.TextField(blank=True, db_column='OutComments', null=True)),
                ('quantity', models.SmallIntegerField(blank=True, db_column='Quantity', null=True)),
                ('quantityresolved', models.SmallIntegerField(blank=True, db_column='QuantityResolved', null=True)),
                ('quantityreturned', models.SmallIntegerField(blank=True, db_column='QuantityReturned', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('borrow', models.ForeignKey(db_column='BorrowID', on_delete=django.db.models.deletion.CASCADE, related_name='borrowmaterials', to='specify.borrow')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'borrowmaterial',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectingevent',
            fields=[
                ('id', models.AutoField(db_column='collectingeventid', primary_key=True, serialize=False)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('enddateprecision', models.SmallIntegerField(blank=True, db_column='EndDatePrecision', null=True)),
                ('enddateverbatim', models.CharField(blank=True, db_column='EndDateVerbatim', max_length=50, null=True)),
                ('endtime', models.SmallIntegerField(blank=True, db_column='EndTime', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('method', models.CharField(blank=True, db_column='Method', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservedtext1', models.CharField(blank=True, db_column='ReservedText1', max_length=128, null=True)),
                ('reservedtext2', models.CharField(blank=True, db_column='ReservedText2', max_length=128, null=True)),
                ('sgrstatus', models.SmallIntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('startdateprecision', models.SmallIntegerField(blank=True, db_column='StartDatePrecision', null=True)),
                ('startdateverbatim', models.CharField(blank=True, db_column='StartDateVerbatim', max_length=50, null=True)),
                ('starttime', models.SmallIntegerField(blank=True, db_column='StartTime', null=True)),
                ('stationfieldnumber', models.CharField(blank=True, db_column='StationFieldNumber', max_length=50, null=True)),
                ('stationfieldnumbermodifier1', models.CharField(blank=True, db_column='StationFieldNumberModifier1', max_length=50, null=True)),
                ('stationfieldnumbermodifier2', models.CharField(blank=True, db_column='StationFieldNumberModifier2', max_length=50, null=True)),
                ('stationfieldnumbermodifier3', models.CharField(blank=True, db_column='StationFieldNumberModifier3', max_length=50, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('uniqueidentifier', models.CharField(blank=True, db_column='UniqueIdentifier', max_length=128, null=True)),
                ('verbatimdate', models.CharField(blank=True, db_column='VerbatimDate', max_length=50, null=True)),
                ('verbatimlocality', models.TextField(blank=True, db_column='VerbatimLocality', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('visibility', models.SmallIntegerField(blank=True, db_column='Visibility', null=True)),
            ],
            options={
                'db_table': 'collectingevent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectingtrip',
            fields=[
                ('id', models.AutoField(db_column='collectingtripid', primary_key=True, serialize=False)),
                ('collectingtripname', models.CharField(blank=True, db_column='CollectingTripName', max_length=400, null=True)),
                ('cruise', models.CharField(blank=True, db_column='Cruise', max_length=250, null=True)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.SmallIntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('enddateprecision', models.SmallIntegerField(blank=True, db_column='EndDatePrecision', null=True)),
                ('enddateverbatim', models.CharField(blank=True, db_column='EndDateVerbatim', max_length=50, null=True)),
                ('endtime', models.SmallIntegerField(blank=True, db_column='EndTime', null=True)),
                ('expedition', models.CharField(blank=True, db_column='Expedition', max_length=250, null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('sponsor', models.CharField(blank=True, db_column='Sponsor', max_length=64, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('startdateprecision', models.SmallIntegerField(blank=True, db_column='StartDatePrecision', null=True)),
                ('startdateverbatim', models.CharField(blank=True, db_column='StartDateVerbatim', max_length=50, null=True)),
                ('starttime', models.SmallIntegerField(blank=True, db_column='StartTime', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=255, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=128, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=64, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=64, null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('vessel', models.CharField(blank=True, db_column='Vessel', max_length=250, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent2', models.ForeignKey(db_column='Agent2ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectingtrip',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(db_column='usergroupscopeid', primary_key=True, serialize=False)),
                ('catalognumformatname', models.CharField(db_column='CatalogFormatNumName', max_length=64)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=50, null=True)),
                ('collectionname', models.CharField(blank=True, db_column='CollectionName', max_length=50, null=True)),
                ('collectiontype', models.CharField(blank=True, db_column='CollectionType', max_length=32, null=True)),
                ('dbcontentversion', models.CharField(blank=True, db_column='DbContentVersion', max_length=32, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('developmentstatus', models.CharField(blank=True, db_column='DevelopmentStatus', max_length=32, null=True)),
                ('estimatedsize', models.IntegerField(blank=True, db_column='EstimatedSize', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('institutiontype', models.CharField(blank=True, db_column='InstitutionType', max_length=32, null=True)),
                ('isembeddedcollectingevent', models.BooleanField(db_column='IsEmbeddedCollectingEvent', default=False)),
                ('isanumber', models.CharField(blank=True, db_column='IsaNumber', max_length=24, null=True)),
                ('kingdomcoverage', models.CharField(blank=True, db_column='KingdomCoverage', max_length=32, null=True)),
                ('preservationmethodtype', models.CharField(blank=True, db_column='PreservationMethodType', max_length=32, null=True)),
                ('primaryfocus', models.CharField(blank=True, db_column='PrimaryFocus', max_length=32, null=True)),
                ('primarypurpose', models.CharField(blank=True, db_column='PrimaryPurpose', max_length=32, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('scope', models.TextField(blank=True, db_column='Scope', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('webportaluri', models.CharField(blank=True, db_column='WebPortalURI', max_length=255, null=True)),
                ('websiteuri', models.CharField(blank=True, db_column='WebSiteURI', max_length=255, null=True)),
                ('admincontact', models.ForeignKey(db_column='AdminContactID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collection',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectionobject',
            fields=[
                ('id', models.AutoField(db_column='collectionobjectid', primary_key=True, serialize=False)),
                ('altcatalognumber', models.CharField(blank=True, db_column='AltCatalogNumber', max_length=64, null=True)),
                ('availability', models.CharField(blank=True, db_column='Availability', max_length=32, null=True)),
                ('catalognumber', models.CharField(blank=True, db_column='CatalogNumber', max_length=32, null=True)),
                ('catalogeddate', models.DateTimeField(blank=True, db_column='CatalogedDate', null=True)),
                ('catalogeddateprecision', models.SmallIntegerField(blank=True, db_column='CatalogedDatePrecision', null=True)),
                ('catalogeddateverbatim', models.CharField(blank=True, db_column='CatalogedDateVerbatim', max_length=32, null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('countamt', models.IntegerField(blank=True, db_column='CountAmt', null=True)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('deaccessioned', models.BooleanField(blank=True, db_column='Deaccessioned', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('embargoreason', models.TextField(blank=True, db_column='EmbargoReason', null=True)),
                ('embargoreleasedate', models.DateTimeField(blank=True, db_column='EmbargoReleaseDate', null=True)),
                ('embargoreleasedateprecision', models.SmallIntegerField(blank=True, db_column='EmbargoReleaseDatePrecision', null=True)),
                ('embargostartdate', models.DateTimeField(blank=True, db_column='EmbargoStartDate', null=True)),
                ('embargostartdateprecision', models.SmallIntegerField(blank=True, db_column='EmbargoStartDatePrecision', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='FieldNumber', max_length=50, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('inventorydate', models.DateTimeField(blank=True, db_column='InventoryDate', null=True)),
                ('inventorydateprecision', models.SmallIntegerField(blank=True, db_column='InventoryDatePrecision', null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=50, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('notifications', models.CharField(blank=True, db_column='Notifications', max_length=32, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('numberofduplicates', models.IntegerField(blank=True, db_column='NumberOfDuplicates', null=True)),
                ('objectcondition', models.CharField(blank=True, db_column='ObjectCondition', max_length=64, null=True)),
                ('ocr', models.TextField(blank=True, db_column='OCR', null=True)),
                ('projectnumber', models.CharField(blank=True, db_column='ProjectNumber', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservedtext', models.CharField(blank=True, db_column='ReservedText', max_length=128, null=True)),
                ('reservedtext2', models.CharField(blank=True, db_column='ReservedText2', max_length=128, null=True)),
                ('reservedtext3', models.CharField(blank=True, db_column='ReservedText3', max_length=128, null=True)),
                ('restrictions', models.CharField(blank=True, db_column='Restrictions', max_length=32, null=True)),
                ('sgrstatus', models.SmallIntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('totalvalue', models.DecimalField(blank=True, db_column='TotalValue', decimal_places=10, max_digits=22, null=True)),
                ('uniqueidentifier', models.CharField(blank=True, db_column='UniqueIdentifier', max_length=128, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('visibility', models.SmallIntegerField(blank=True, db_column='Visibility', null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.BooleanField(blank=True, db_column='YesNo6', null=True)),
                ('accession', models.ForeignKey(db_column='AccessionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjects', to='specify.accession')),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('appraisal', models.ForeignKey(db_column='AppraisalID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjects', to='specify.appraisal')),
                ('cataloger', models.ForeignKey(db_column='CatalogerID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('collectingevent', models.ForeignKey(db_column='CollectingEventID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjects', to='specify.collectingevent')),
                ('collection', models.ForeignKey(db_column='CollectionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.collection')),
            ],
            options={
                'db_table': 'collectionobject',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Commonnametx',
            fields=[
                ('id', models.AutoField(db_column='commonnametxid', primary_key=True, serialize=False)),
                ('author', models.CharField(blank=True, db_column='Author', max_length=128, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=2, null=True)),
                ('language', models.CharField(blank=True, db_column='Language', max_length=2, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('variant', models.CharField(blank=True, db_column='Variant', max_length=2, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'commonnametx',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Conservdescription',
            fields=[
                ('id', models.AutoField(db_column='conservdescriptionid', primary_key=True, serialize=False)),
                ('backgroundinfo', models.TextField(blank=True, db_column='BackgroundInfo', null=True)),
                ('composition', models.TextField(blank=True, db_column='Composition', null=True)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.SmallIntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('date3', models.DateTimeField(blank=True, db_column='Date3', null=True)),
                ('date3precision', models.SmallIntegerField(blank=True, db_column='Date3Precision', null=True)),
                ('date4', models.DateTimeField(blank=True, db_column='Date4', null=True)),
                ('date4precision', models.SmallIntegerField(blank=True, db_column='Date4Precision', null=True)),
                ('date5', models.DateTimeField(blank=True, db_column='Date5', null=True)),
                ('date5precision', models.SmallIntegerField(blank=True, db_column='Date5Precision', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('determineddate', models.DateTimeField(blank=True, db_column='CatalogedDate', null=True)),
                ('displayrecommendations', models.TextField(blank=True, db_column='DisplayRecommendations', null=True)),
                ('height', models.DecimalField(blank=True, db_column='Height', decimal_places=10, max_digits=22, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('lightrecommendations', models.TextField(blank=True, db_column='LightRecommendations', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('objlength', models.DecimalField(blank=True, db_column='ObjLength', decimal_places=10, max_digits=22, null=True)),
                ('otherrecommendations', models.TextField(blank=True, db_column='OtherRecommendations', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('shortdesc', models.CharField(blank=True, db_column='ShortDesc', max_length=128, null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('units', models.CharField(blank=True, db_column='Units', max_length=16, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('width', models.DecimalField(blank=True, db_column='Width', decimal_places=10, max_digits=22, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conservdescriptions', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'conservdescription',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Conservevent',
            fields=[
                ('id', models.AutoField(db_column='conserveventid', primary_key=True, serialize=False)),
                ('advtestingexam', models.TextField(blank=True, db_column='AdvTestingExam', null=True)),
                ('advtestingexamresults', models.TextField(blank=True, db_column='AdvTestingExamResults', null=True)),
                ('completedcomments', models.TextField(blank=True, db_column='CompletedComments', null=True)),
                ('completeddate', models.DateTimeField(blank=True, db_column='CompletedDate', null=True)),
                ('completeddateprecision', models.SmallIntegerField(blank=True, db_column='CompletedDatePrecision', null=True)),
                ('conditionreport', models.TextField(blank=True, db_column='ConditionReport', null=True)),
                ('curatorapprovaldate', models.DateTimeField(blank=True, db_column='CuratorApprovalDate', null=True)),
                ('curatorapprovaldateprecision', models.SmallIntegerField(blank=True, db_column='CuratorApprovalDatePrecision', null=True)),
                ('examdate', models.DateTimeField(blank=True, db_column='ExamDate', null=True)),
                ('examdateprecision', models.SmallIntegerField(blank=True, db_column='ExamDatePrecision', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('photodocs', models.TextField(blank=True, db_column='PhotoDocs', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=64, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('treatmentcompdate', models.DateTimeField(blank=True, db_column='TreatmentCompDate', null=True)),
                ('treatmentcompdateprecision', models.SmallIntegerField(blank=True, db_column='TreatmentCompDatePrecision', null=True)),
                ('treatmentreport', models.TextField(blank=True, db_column='TreatmentReport', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('conservdescription', models.ForeignKey(db_column='ConservDescriptionID', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='specify.conservdescription')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('curator', models.ForeignKey(db_column='CuratorID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('examinedbyagent', models.ForeignKey(db_column='ExaminedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('treatedbyagent', models.ForeignKey(db_column='TreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'conservevent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Datatype',
            fields=[
                ('id', models.AutoField(db_column='datatypeid', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'datatype',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Deaccession',
            fields=[
                ('id', models.AutoField(db_column='deaccessionid', primary_key=True, serialize=False)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('deaccessiondate', models.DateTimeField(blank=True, db_column='DeaccessionDate', null=True)),
                ('deaccessionnumber', models.CharField(db_column='DeaccessionNumber', max_length=50)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent2', models.ForeignKey(db_column='Agent2ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'deaccession',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Determination',
            fields=[
                ('id', models.AutoField(db_column='determinationid', primary_key=True, serialize=False)),
                ('addendum', models.CharField(blank=True, db_column='Addendum', max_length=16, null=True)),
                ('alternatename', models.CharField(blank=True, db_column='AlternateName', max_length=128, null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('confidence', models.CharField(blank=True, db_column='Confidence', max_length=50, null=True)),
                ('determineddate', models.DateTimeField(blank=True, db_column='DeterminedDate', null=True)),
                ('determineddateprecision', models.SmallIntegerField(blank=True, db_column='DeterminedDatePrecision', null=True)),
                ('featureorbasis', models.CharField(blank=True, db_column='FeatureOrBasis', max_length=250, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('iscurrent', models.BooleanField(db_column='IsCurrent', default=False)),
                ('method', models.CharField(blank=True, db_column='Method', max_length=50, null=True)),
                ('nameusage', models.CharField(blank=True, db_column='NameUsage', max_length=64, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('qualifier', models.CharField(blank=True, db_column='Qualifier', max_length=16, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('subspqualifier', models.CharField(blank=True, db_column='SubSpQualifier', max_length=16, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=128, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=128, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=128, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=128, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=128, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('typestatusname', models.CharField(blank=True, db_column='TypeStatusName', max_length=50, null=True)),
                ('varqualifier', models.CharField(blank=True, db_column='VarQualifier', max_length=16, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='determinations', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('determiner', models.ForeignKey(db_column='DeterminerID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'determination',
                'ordering': ('-iscurrent',),
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(db_column='usergroupscopeid', primary_key=True, serialize=False)),
                ('ispaleocontextembedded', models.BooleanField(db_column='IsPaleoContextEmbedded', default=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('paleocontextchildtable', models.CharField(blank=True, db_column='PaleoContextChildTable', max_length=50, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('datatype', models.ForeignKey(db_column='DataTypeID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.datatype')),
            ],
            options={
                'db_table': 'discipline',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Disposal',
            fields=[
                ('id', models.AutoField(db_column='disposalid', primary_key=True, serialize=False)),
                ('disposaldate', models.DateTimeField(blank=True, db_column='DisposalDate', null=True)),
                ('disposalnumber', models.CharField(db_column='DisposalNumber', max_length=50)),
                ('donotexport', models.BooleanField(blank=True, db_column='doNotExport', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('deaccession', models.ForeignKey(db_column='DeaccessionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disposals', to='specify.deaccession')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'disposal',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(db_column='usergroupscopeid', primary_key=True, serialize=False)),
                ('abbrev', models.CharField(blank=True, db_column='Abbrev', max_length=64, null=True)),
                ('altname', models.CharField(blank=True, db_column='AltName', max_length=128, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('discipline', models.CharField(blank=True, db_column='DisciplineType', max_length=64, null=True)),
                ('iconuri', models.CharField(blank=True, db_column='IconURI', max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('uri', models.CharField(blank=True, db_column='Uri', max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('address', models.ForeignKey(db_column='AddressID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='divisions', to='specify.address')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'division',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Dnaprimer',
            fields=[
                ('id', models.AutoField(db_column='dnaprimerid', primary_key=True, serialize=False)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('primerdesignator', models.CharField(blank=True, db_column='PrimerDesignator', max_length=64, null=True)),
                ('primernameforward', models.CharField(blank=True, db_column='PrimerNameForward', max_length=64, null=True)),
                ('primernamereverse', models.CharField(blank=True, db_column='PrimerNameReverse', max_length=64, null=True)),
                ('primerreferencecitationforward', models.CharField(blank=True, db_column='PrimerReferenceCitationForward', max_length=300, null=True)),
                ('primerreferencecitationreverse', models.CharField(blank=True, db_column='PrimerReferenceCitationReverse', max_length=300, null=True)),
                ('primerreferencelinkforward', models.CharField(blank=True, db_column='PrimerReferenceLinkForward', max_length=300, null=True)),
                ('primerreferencelinkreverse', models.CharField(blank=True, db_column='PrimerReferenceLinkReverse', max_length=300, null=True)),
                ('primersequenceforward', models.CharField(blank=True, db_column='PrimerSequenceForward', max_length=128, null=True)),
                ('primersequencereverse', models.CharField(blank=True, db_column='PrimerSequenceReverse', max_length=128, null=True)),
                ('purificationmethod', models.CharField(blank=True, db_column='purificationMethod', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservednumber3', models.DecimalField(blank=True, db_column='ReservedNumber3', decimal_places=10, max_digits=22, null=True)),
                ('reservednumber4', models.DecimalField(blank=True, db_column='ReservedNumber4', decimal_places=10, max_digits=22, null=True)),
                ('reservedtext3', models.TextField(blank=True, db_column='ReservedText3', null=True)),
                ('reservedtext4', models.TextField(blank=True, db_column='ReservedText4', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'dnaprimer',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Dnasequence',
            fields=[
                ('id', models.AutoField(db_column='dnasequenceid', primary_key=True, serialize=False)),
                ('ambiguousresidues', models.IntegerField(blank=True, db_column='AmbiguousResidues', null=True)),
                ('boldbarcodeid', models.CharField(blank=True, db_column='BOLDBarcodeID', max_length=32, null=True)),
                ('boldlastupdatedate', models.DateTimeField(blank=True, db_column='BOLDLastUpdateDate', null=True)),
                ('boldsampleid', models.CharField(blank=True, db_column='BOLDSampleID', max_length=32, null=True)),
                ('boldtranslationmatrix', models.CharField(blank=True, db_column='BOLDTranslationMatrix', max_length=64, null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('compa', models.IntegerField(blank=True, db_column='CompA', null=True)),
                ('compc', models.IntegerField(blank=True, db_column='CompC', null=True)),
                ('compg', models.IntegerField(blank=True, db_column='CompG', null=True)),
                ('compt', models.IntegerField(blank=True, db_column='compT', null=True)),
                ('extractiondate', models.DateTimeField(blank=True, db_column='ExtractionDate', null=True)),
                ('extractiondateprecision', models.SmallIntegerField(blank=True, db_column='ExtractionDatePrecision', null=True)),
                ('genbankaccessionnumber', models.CharField(blank=True, db_column='GenBankAccessionNumber', max_length=32, null=True)),
                ('genesequence', models.TextField(blank=True, db_column='GeneSequence', null=True)),
                ('moleculetype', models.CharField(blank=True, db_column='MoleculeType', max_length=32, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('sequencedate', models.DateTimeField(blank=True, db_column='SequenceDate', null=True)),
                ('sequencedateprecision', models.SmallIntegerField(blank=True, db_column='SequenceDatePrecision', null=True)),
                ('targetmarker', models.CharField(blank=True, db_column='TargetMarker', max_length=32, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('totalresidues', models.IntegerField(blank=True, db_column='TotalResidues', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dnasequences', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('extractor', models.ForeignKey(db_column='ExtractorID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'dnasequence',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Dnasequencingrun',
            fields=[
                ('id', models.AutoField(db_column='dnasequencingrunid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('dryaddoi', models.CharField(blank=True, db_column='DryadDOI', max_length=256, null=True)),
                ('genesequence', models.TextField(blank=True, db_column='GeneSequence', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('pcrcocktailprimer', models.BooleanField(blank=True, db_column='PCRCocktailPrimer', null=True)),
                ('pcrforwardprimercode', models.CharField(blank=True, db_column='PCRForwardPrimerCode', max_length=32, null=True)),
                ('pcrprimername', models.CharField(blank=True, db_column='PCRPrimerName', max_length=32, null=True)),
                ('pcrprimersequence5_3', models.CharField(blank=True, db_column='PCRPrimerSequence5_3', max_length=64, null=True)),
                ('pcrreverseprimercode', models.CharField(blank=True, db_column='PCRReversePrimerCode', max_length=32, null=True)),
                ('readdirection', models.CharField(blank=True, db_column='ReadDirection', max_length=16, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('rundate', models.DateTimeField(blank=True, db_column='RunDate', null=True)),
                ('scorefilename', models.CharField(blank=True, db_column='ScoreFileName', max_length=32, null=True)),
                ('sequencecocktailprimer', models.BooleanField(blank=True, db_column='SequenceCocktailPrimer', null=True)),
                ('sequenceprimercode', models.CharField(blank=True, db_column='SequencePrimerCode', max_length=32, null=True)),
                ('sequenceprimername', models.CharField(blank=True, db_column='SequencePrimerName', max_length=32, null=True)),
                ('sequenceprimersequence5_3', models.CharField(blank=True, db_column='SequencePrimerSequence5_3', max_length=64, null=True)),
                ('sraexperimentid', models.CharField(blank=True, db_column='SRAExperimentID', max_length=64, null=True)),
                ('srarunid', models.CharField(blank=True, db_column='SRARunID', max_length=64, null=True)),
                ('srasubmissionid', models.CharField(blank=True, db_column='SRASubmissionID', max_length=64, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('tracefilename', models.CharField(blank=True, db_column='TraceFileName', max_length=32, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('dnaprimer', models.ForeignKey(db_column='DNAPrimerID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='dnasequencingruns', to='specify.dnaprimer')),
                ('dnasequence', models.ForeignKey(db_column='DNASequenceID', on_delete=django.db.models.deletion.CASCADE, related_name='dnasequencingruns', to='specify.dnasequence')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparedbyagent', models.ForeignKey(db_column='PreparedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('runbyagent', models.ForeignKey(db_column='RunByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'dnasequencingrun',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Exchangein',
            fields=[
                ('id', models.AutoField(db_column='exchangeinid', primary_key=True, serialize=False)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=120, null=True)),
                ('exchangedate', models.DateTimeField(blank=True, db_column='ExchangeDate', null=True)),
                ('exchangeinnumber', models.CharField(blank=True, db_column='ExchangeInNumber', max_length=50, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('quantityexchanged', models.SmallIntegerField(blank=True, db_column='QuantityExchanged', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=32, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('addressofrecord', models.ForeignKey(db_column='AddressOfRecordID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exchangeins', to='specify.addressofrecord')),
                ('agentcatalogedby', models.ForeignKey(db_column='CatalogedByID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agentreceivedfrom', models.ForeignKey(db_column='ReceivedFromOrganizationID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('division', models.ForeignKey(db_column='DivisionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'exchangein',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Exchangeout',
            fields=[
                ('id', models.AutoField(db_column='exchangeoutid', primary_key=True, serialize=False)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=120, null=True)),
                ('exchangedate', models.DateTimeField(blank=True, db_column='ExchangeDate', null=True)),
                ('exchangeoutnumber', models.CharField(db_column='ExchangeOutNumber', max_length=50)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('quantityexchanged', models.SmallIntegerField(blank=True, db_column='QuantityExchanged', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=32, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('addressofrecord', models.ForeignKey(db_column='AddressOfRecordID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exchangeouts', to='specify.addressofrecord')),
                ('agentcatalogedby', models.ForeignKey(db_column='CatalogedByID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agentsentto', models.ForeignKey(db_column='SentToOrganizationID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('deaccession', models.ForeignKey(db_column='DeaccessionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exchangeouts', to='specify.deaccession')),
                ('division', models.ForeignKey(db_column='DivisionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'exchangeout',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Exsiccata',
            fields=[
                ('id', models.AutoField(db_column='exsiccataid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('schedae', models.CharField(blank=True, db_column='Schedae', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'exsiccata',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebook',
            fields=[
                ('id', models.AutoField(db_column='fieldnotebookid', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('location', models.CharField(blank=True, db_column='Storage', max_length=64, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collection', models.ForeignKey(db_column='CollectionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('owneragent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'fieldnotebook',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpage',
            fields=[
                ('id', models.AutoField(db_column='fieldnotebookpageid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=128, null=True)),
                ('pagenumber', models.CharField(db_column='PageNumber', max_length=32)),
                ('scandate', models.DateTimeField(blank=True, db_column='ScanDate', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'fieldnotebookpage',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpageset',
            fields=[
                ('id', models.AutoField(db_column='fieldnotebookpagesetid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=128, null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('method', models.CharField(blank=True, db_column='Method', max_length=64, null=True)),
                ('ordernumber', models.SmallIntegerField(blank=True, db_column='OrderNumber', null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('fieldnotebook', models.ForeignKey(db_column='FieldNotebookID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagesets', to='specify.fieldnotebook')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('sourceagent', models.ForeignKey(db_column='AgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'fieldnotebookpageset',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.AutoField(db_column='geographyid', primary_key=True, serialize=False)),
                ('abbrev', models.CharField(blank=True, db_column='Abbrev', max_length=16, null=True)),
                ('centroidlat', models.DecimalField(blank=True, db_column='CentroidLat', decimal_places=10, max_digits=22, null=True)),
                ('centroidlon', models.DecimalField(blank=True, db_column='CentroidLon', decimal_places=10, max_digits=22, null=True)),
                ('commonname', models.CharField(blank=True, db_column='CommonName', max_length=128, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=500, null=True)),
                ('geographycode', models.CharField(blank=True, db_column='GeographyCode', max_length=24, null=True)),
                ('gml', models.TextField(blank=True, db_column='GML', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.BooleanField(db_column='IsAccepted', default=False)),
                ('iscurrent', models.BooleanField(blank=True, db_column='IsCurrent', null=True)),
                ('name', models.CharField(db_column='Name', max_length=128)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('timestampversion', models.DateTimeField(blank=True, db_column='TimestampVersion', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('acceptedgeography', models.ForeignKey(db_column='AcceptedID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='acceptedchildren', to='specify.geography')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'geography',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Geographytreedef',
            fields=[
                ('id', models.AutoField(db_column='geographytreedefid', primary_key=True, serialize=False)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'geographytreedef',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Geologictimeperiod',
            fields=[
                ('id', models.AutoField(db_column='geologictimeperiodid', primary_key=True, serialize=False)),
                ('endperiod', models.DecimalField(blank=True, db_column='EndPeriod', decimal_places=10, max_digits=22, null=True)),
                ('enduncertainty', models.DecimalField(blank=True, db_column='EndUncertainty', decimal_places=10, max_digits=22, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.BooleanField(db_column='IsAccepted', default=False)),
                ('isbiostrat', models.BooleanField(blank=True, db_column='IsBioStrat', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('standard', models.CharField(blank=True, db_column='Standard', max_length=64, null=True)),
                ('startperiod', models.DecimalField(blank=True, db_column='StartPeriod', decimal_places=10, max_digits=22, null=True)),
                ('startuncertainty', models.DecimalField(blank=True, db_column='StartUncertainty', decimal_places=10, max_digits=22, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=128, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=128, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('acceptedgeologictimeperiod', models.ForeignKey(db_column='AcceptedID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='acceptedchildren', to='specify.geologictimeperiod')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'geologictimeperiod',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Geologictimeperiodtreedef',
            fields=[
                ('id', models.AutoField(db_column='geologictimeperiodtreedefid', primary_key=True, serialize=False)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'geologictimeperiodtreedef',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.AutoField(db_column='giftid', primary_key=True, serialize=False)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('datereceived', models.DateTimeField(blank=True, db_column='DateReceived', null=True)),
                ('giftdate', models.DateTimeField(blank=True, db_column='GiftDate', null=True)),
                ('giftnumber', models.CharField(db_column='GiftNumber', max_length=50)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('isfinancialresponsibility', models.BooleanField(blank=True, db_column='IsFinancialResponsibility', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('purposeofgift', models.CharField(blank=True, db_column='PurposeOfGift', max_length=64, null=True)),
                ('receivedcomments', models.CharField(blank=True, db_column='ReceivedComments', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('specialconditions', models.TextField(blank=True, db_column='SpecialConditions', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=500, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=500, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=128, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('addressofrecord', models.ForeignKey(db_column='AddressOfRecordID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.addressofrecord')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('deaccession', models.ForeignKey(db_column='DeaccessionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='gifts', to='specify.deaccession')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('division', models.ForeignKey(db_column='DivisionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'gift',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Inforequest',
            fields=[
                ('id', models.AutoField(db_column='inforequestid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('email', models.CharField(blank=True, db_column='Email', max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, db_column='Firstname', max_length=50, null=True)),
                ('inforeqnumber', models.CharField(blank=True, db_column='InfoReqNumber', max_length=32, null=True)),
                ('institution', models.CharField(blank=True, db_column='Institution', max_length=127, null=True)),
                ('lastname', models.CharField(blank=True, db_column='Lastname', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('replydate', models.DateTimeField(blank=True, db_column='ReplyDate', null=True)),
                ('requestdate', models.DateTimeField(blank=True, db_column='RequestDate', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'inforequest',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(db_column='usergroupscopeid', primary_key=True, serialize=False)),
                ('altname', models.CharField(blank=True, db_column='AltName', max_length=128, null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=64, null=True)),
                ('copyright', models.TextField(blank=True, db_column='Copyright', null=True)),
                ('currentmanagedrelversion', models.CharField(blank=True, db_column='CurrentManagedRelVersion', max_length=8, null=True)),
                ('currentmanagedschemaversion', models.CharField(blank=True, db_column='CurrentManagedSchemaVersion', max_length=8, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('disclaimer', models.TextField(blank=True, db_column='Disclaimer', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('hasbeenasked', models.BooleanField(blank=True, db_column='HasBeenAsked', null=True)),
                ('iconuri', models.CharField(blank=True, db_column='IconURI', max_length=255, null=True)),
                ('ipr', models.TextField(blank=True, db_column='Ipr', null=True)),
                ('isaccessionsglobal', models.BooleanField(db_column='IsAccessionsGlobal', default=False)),
                ('isanonymous', models.BooleanField(blank=True, db_column='IsAnonymous', null=True)),
                ('isreleasemanagedglobally', models.BooleanField(blank=True, db_column='IsReleaseManagedGlobally', null=True)),
                ('issecurityon', models.BooleanField(db_column='IsSecurityOn', default=False)),
                ('isserverbased', models.BooleanField(db_column='IsServerBased', default=False)),
                ('issharinglocalities', models.BooleanField(db_column='IsSharingLocalities', default=False)),
                ('issinglegeographytree', models.BooleanField(db_column='IsSingleGeographyTree', default=False)),
                ('license', models.TextField(blank=True, db_column='License', null=True)),
                ('lsidauthority', models.CharField(blank=True, db_column='LsidAuthority', max_length=64, null=True)),
                ('minimumpwdlength', models.SmallIntegerField(blank=True, db_column='MinimumPwdLength', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('regnumber', models.CharField(blank=True, db_column='RegNumber', max_length=24, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('termsofuse', models.TextField(blank=True, db_column='TermsOfUse', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('uri', models.CharField(blank=True, db_column='Uri', max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('address', models.ForeignKey(db_column='AddressID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='insitutions', to='specify.address')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'institution',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.AutoField(db_column='journalid', primary_key=True, serialize=False)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('issn', models.CharField(blank=True, db_column='ISSN', max_length=16, null=True)),
                ('journalabbreviation', models.CharField(blank=True, db_column='JournalAbbreviation', max_length=50, null=True)),
                ('journalname', models.CharField(blank=True, db_column='JournalName', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('institution', models.ForeignKey(db_column='InstitutionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.institution')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'journal',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Latlonpolygon',
            fields=[
                ('id', models.AutoField(db_column='latlonpolygonid', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('ispolyline', models.BooleanField(db_column='IsPolyline', default=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'latlonpolygon',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Lithostrat',
            fields=[
                ('id', models.AutoField(db_column='lithostratid', primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.BooleanField(db_column='IsAccepted', default=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('acceptedlithostrat', models.ForeignKey(db_column='AcceptedID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='acceptedchildren', to='specify.lithostrat')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'lithostrat',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Lithostrattreedef',
            fields=[
                ('id', models.AutoField(db_column='lithostrattreedefid', primary_key=True, serialize=False)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'lithostrattreedef',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.AutoField(db_column='loanid', primary_key=True, serialize=False)),
                ('contents', models.TextField(blank=True, db_column='Contents', null=True)),
                ('currentduedate', models.DateTimeField(blank=True, db_column='CurrentDueDate', null=True)),
                ('dateclosed', models.DateTimeField(blank=True, db_column='DateClosed', null=True)),
                ('datereceived', models.DateTimeField(blank=True, db_column='DateReceived', null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('isclosed', models.BooleanField(blank=True, db_column='IsClosed', null=True)),
                ('isfinancialresponsibility', models.BooleanField(blank=True, db_column='IsFinancialResponsibility', null=True)),
                ('loandate', models.DateTimeField(blank=True, db_column='LoanDate', null=True)),
                ('loannumber', models.CharField(db_column='LoanNumber', max_length=50)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('originalduedate', models.DateTimeField(blank=True, db_column='OriginalDueDate', null=True)),
                ('overduenotisentdate', models.DateTimeField(blank=True, db_column='OverdueNotiSetDate', null=True)),
                ('purposeofloan', models.CharField(blank=True, db_column='PurposeOfLoan', max_length=64, null=True)),
                ('receivedcomments', models.CharField(blank=True, db_column='ReceivedComments', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('specialconditions', models.TextField(blank=True, db_column='SpecialConditions', null=True)),
                ('srcgeography', models.CharField(blank=True, db_column='SrcGeography', max_length=500, null=True)),
                ('srctaxonomy', models.CharField(blank=True, db_column='SrcTaxonomy', max_length=500, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('addressofrecord', models.ForeignKey(db_column='AddressOfRecordID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='loans', to='specify.addressofrecord')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('division', models.ForeignKey(db_column='DivisionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'loan',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Loanpreparation',
            fields=[
                ('id', models.AutoField(db_column='loanpreparationid', primary_key=True, serialize=False)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=255, null=True)),
                ('incomments', models.TextField(blank=True, db_column='InComments', null=True)),
                ('isresolved', models.BooleanField(db_column='IsResolved', default=False)),
                ('outcomments', models.TextField(blank=True, db_column='OutComments', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('quantityresolved', models.IntegerField(blank=True, db_column='QuantityResolved', null=True)),
                ('quantityreturned', models.IntegerField(blank=True, db_column='QuantityReturned', null=True)),
                ('receivedcomments', models.TextField(blank=True, db_column='ReceivedComments', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('loan', models.ForeignKey(db_column='LoanID', on_delete=django.db.models.deletion.CASCADE, related_name='loanpreparations', to='specify.loan')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'loanpreparation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(db_column='localityid', primary_key=True, serialize=False)),
                ('datum', models.CharField(blank=True, db_column='Datum', max_length=50, null=True)),
                ('elevationaccuracy', models.DecimalField(blank=True, db_column='ElevationAccuracy', decimal_places=10, max_digits=22, null=True)),
                ('elevationmethod', models.CharField(blank=True, db_column='ElevationMethod', max_length=50, null=True)),
                ('gml', models.TextField(blank=True, db_column='GML', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('lat1text', models.CharField(blank=True, db_column='Lat1Text', max_length=50, null=True)),
                ('lat2text', models.CharField(blank=True, db_column='Lat2Text', max_length=50, null=True)),
                ('latlongaccuracy', models.DecimalField(blank=True, db_column='LatLongAccuracy', decimal_places=10, max_digits=22, null=True)),
                ('latlongmethod', models.CharField(blank=True, db_column='LatLongMethod', max_length=50, null=True)),
                ('latlongtype', models.CharField(blank=True, db_column='LatLongType', max_length=50, null=True)),
                ('latitude1', models.DecimalField(blank=True, db_column='Latitude1', decimal_places=10, max_digits=22, null=True)),
                ('latitude2', models.DecimalField(blank=True, db_column='Latitude2', decimal_places=10, max_digits=22, null=True)),
                ('localityname', models.CharField(db_column='LocalityName', max_length=1024)),
                ('long1text', models.CharField(blank=True, db_column='Long1Text', max_length=50, null=True)),
                ('long2text', models.CharField(blank=True, db_column='Long2Text', max_length=50, null=True)),
                ('longitude1', models.DecimalField(blank=True, db_column='Longitude1', decimal_places=10, max_digits=22, null=True)),
                ('longitude2', models.DecimalField(blank=True, db_column='Longitude2', decimal_places=10, max_digits=22, null=True)),
                ('maxelevation', models.DecimalField(blank=True, db_column='MaxElevation', decimal_places=10, max_digits=22, null=True)),
                ('minelevation', models.DecimalField(blank=True, db_column='MinElevation', decimal_places=10, max_digits=22, null=True)),
                ('namedplace', models.CharField(blank=True, db_column='NamedPlace', max_length=255, null=True)),
                ('originalelevationunit', models.CharField(blank=True, db_column='OriginalElevationUnit', max_length=50, null=True)),
                ('originallatlongunit', models.IntegerField(blank=True, db_column='OriginalLatLongUnit', null=True)),
                ('relationtonamedplace', models.CharField(blank=True, db_column='RelationToNamedPlace', max_length=120, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('sgrstatus', models.SmallIntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('shortname', models.CharField(blank=True, db_column='ShortName', max_length=32, null=True)),
                ('srclatlongunit', models.SmallIntegerField(db_column='SrcLatLongUnit')),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('uniqueidentifier', models.CharField(blank=True, db_column='UniqueIdentifier', max_length=128, null=True)),
                ('verbatimelevation', models.CharField(blank=True, db_column='VerbatimElevation', max_length=50, null=True)),
                ('verbatimlatitude', models.CharField(blank=True, db_column='VerbatimLatitude', max_length=50, null=True)),
                ('verbatimlongitude', models.CharField(blank=True, db_column='VerbatimLongitude', max_length=50, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('visibility', models.SmallIntegerField(blank=True, db_column='Visibility', null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('geography', models.ForeignKey(db_column='GeographyID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='localities', to='specify.geography')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'locality',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('id', models.AutoField(db_column='permitid', primary_key=True, serialize=False)),
                ('copyright', models.CharField(blank=True, db_column='Copyright', max_length=256, null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('isavailable', models.BooleanField(blank=True, db_column='IsAvailable', null=True)),
                ('isrequired', models.BooleanField(blank=True, db_column='IsRequired', null=True)),
                ('issueddate', models.DateTimeField(blank=True, db_column='IssuedDate', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('permitnumber', models.CharField(db_column='PermitNumber', max_length=50)),
                ('permittext', models.TextField(blank=True, db_column='PermitText', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('renewaldate', models.DateTimeField(blank=True, db_column='RenewalDate', null=True)),
                ('reservedinteger1', models.IntegerField(blank=True, db_column='ReservedInteger1', null=True)),
                ('reservedinteger2', models.IntegerField(blank=True, db_column='ReservedInteger2', null=True)),
                ('reservedtext3', models.CharField(blank=True, db_column='ReservedText3', max_length=128, null=True)),
                ('reservedtext4', models.CharField(blank=True, db_column='ReservedText4', max_length=128, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=64, null=True)),
                ('statusqualifier', models.CharField(blank=True, db_column='StatusQualifier', max_length=128, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=50, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('institution', models.ForeignKey(db_column='InstitutionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.institution')),
                ('issuedby', models.ForeignKey(db_column='IssuedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('issuedto', models.ForeignKey(db_column='IssuedToID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'permit',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Picklist',
            fields=[
                ('id', models.AutoField(db_column='picklistid', primary_key=True, serialize=False)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=64, null=True)),
                ('filterfieldname', models.CharField(blank=True, db_column='FilterFieldName', max_length=32, null=True)),
                ('filtervalue', models.CharField(blank=True, db_column='FilterValue', max_length=32, null=True)),
                ('formatter', models.CharField(blank=True, db_column='Formatter', max_length=64, null=True)),
                ('issystem', models.BooleanField(db_column='IsSystem', default=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('readonly', models.BooleanField(db_column='ReadOnly', default=False)),
                ('sizelimit', models.IntegerField(blank=True, db_column='SizeLimit', null=True)),
                ('sorttype', models.SmallIntegerField(blank=True, db_column='SortType', null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.SmallIntegerField(db_column='Type')),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collection', models.ForeignKey(db_column='CollectionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='picklists', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'picklist',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Preparation',
            fields=[
                ('id', models.AutoField(db_column='preparationid', primary_key=True, serialize=False)),
                ('barcode', models.CharField(blank=True, db_column='BarCode', max_length=256, null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('countamt', models.IntegerField(blank=True, db_column='CountAmt', null=True)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.SmallIntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('date3', models.DateTimeField(blank=True, db_column='Date3', null=True)),
                ('date3precision', models.SmallIntegerField(blank=True, db_column='Date3Precision', null=True)),
                ('date4', models.DateTimeField(blank=True, db_column='Date4', null=True)),
                ('date4precision', models.SmallIntegerField(blank=True, db_column='Date4Precision', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('prepareddate', models.DateTimeField(blank=True, db_column='PreparedDate', null=True)),
                ('prepareddateprecision', models.SmallIntegerField(blank=True, db_column='PreparedDatePrecision', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('samplenumber', models.CharField(blank=True, db_column='SampleNumber', max_length=32, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('storagelocation', models.CharField(blank=True, db_column='StorageLocation', max_length=50, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.TextField(blank=True, db_column='Text10', null=True)),
                ('text11', models.TextField(blank=True, db_column='Text11', null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=128, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=128, null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
            ],
            options={
                'db_table': 'preparation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Recordset',
            fields=[
                ('id', models.AutoField(db_column='recordsetid', primary_key=True, serialize=False)),
                ('allpermissionlevel', models.IntegerField(blank=True, db_column='AllPermissionLevel', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('dbtableid', models.IntegerField(db_column='TableID')),
                ('grouppermissionlevel', models.IntegerField(blank=True, db_column='GroupPermissionLevel', null=True)),
                ('name', models.CharField(db_column='Name', max_length=280)),
                ('ownerpermissionlevel', models.IntegerField(blank=True, db_column='OwnerPermissionLevel', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.SmallIntegerField(db_column='Type')),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'recordset',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Referencework',
            fields=[
                ('id', models.AutoField(db_column='referenceworkid', primary_key=True, serialize=False)),
                ('doi', models.TextField(blank=True, db_column='Doi', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('ispublished', models.BooleanField(blank=True, db_column='IsPublished', null=True)),
                ('isbn', models.CharField(blank=True, db_column='ISBN', max_length=16, null=True)),
                ('librarynumber', models.CharField(blank=True, db_column='LibraryNumber', max_length=50, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('pages', models.CharField(blank=True, db_column='Pages', max_length=50, null=True)),
                ('placeofpublication', models.CharField(blank=True, db_column='PlaceOfPublication', max_length=50, null=True)),
                ('publisher', models.CharField(blank=True, db_column='Publisher', max_length=250, null=True)),
                ('referenceworktype', models.SmallIntegerField(db_column='ReferenceWorkType')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(db_column='Title', max_length=500)),
                ('uri', models.TextField(blank=True, db_column='Uri', null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=1024, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('volume', models.CharField(blank=True, db_column='Volume', max_length=25, null=True)),
                ('workdate', models.CharField(blank=True, db_column='WorkDate', max_length=25, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('containedrfparent', models.ForeignKey(db_column='ContainedRFParentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='containedreferenceworks', to='specify.referencework')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('institution', models.ForeignKey(db_column='InstitutionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.institution')),
                ('journal', models.ForeignKey(db_column='JournalID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='referenceworks', to='specify.journal')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'referencework',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Repositoryagreement',
            fields=[
                ('id', models.AutoField(db_column='repositoryagreementid', primary_key=True, serialize=False)),
                ('datereceived', models.DateTimeField(blank=True, db_column='DateReceived', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('repositoryagreementnumber', models.CharField(db_column='RepositoryAgreementNumber', max_length=60)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=32, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=255, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=255, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('addressofrecord', models.ForeignKey(db_column='AddressOfRecordID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='repositoryagreements', to='specify.addressofrecord')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('division', models.ForeignKey(db_column='DivisionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('originator', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'repositoryagreement',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spappresource',
            fields=[
                ('id', models.AutoField(db_column='spappresourceid', primary_key=True, serialize=False)),
                ('allpermissionlevel', models.IntegerField(blank=True, db_column='AllPermissionLevel', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('grouppermissionlevel', models.IntegerField(blank=True, db_column='GroupPermissionLevel', null=True)),
                ('level', models.SmallIntegerField(db_column='Level')),
                ('metadata', models.CharField(blank=True, db_column='MetaData', max_length=255, null=True)),
                ('mimetype', models.CharField(blank=True, db_column='MimeType', max_length=255, null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('ownerpermissionlevel', models.IntegerField(blank=True, db_column='OwnerPermissionLevel', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'spappresource',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spappresourcedir',
            fields=[
                ('id', models.AutoField(db_column='spappresourcedirid', primary_key=True, serialize=False)),
                ('disciplinetype', models.CharField(blank=True, db_column='DisciplineType', max_length=64, null=True)),
                ('ispersonal', models.BooleanField(db_column='IsPersonal', default=False)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('usertype', models.CharField(blank=True, db_column='UserType', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collection', models.ForeignKey(db_column='CollectionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('specifyuser', models.ForeignKey(db_column='SpecifyUserID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spappresourcedirs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'spappresourcedir',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spauditlog',
            fields=[
                ('id', models.AutoField(db_column='spauditlogid', primary_key=True, serialize=False)),
                ('action', models.SmallIntegerField(db_column='Action')),
                ('parentrecordid', models.IntegerField(blank=True, db_column='ParentRecordId', null=True)),
                ('parenttablenum', models.SmallIntegerField(blank=True, db_column='ParentTableNum', null=True)),
                ('recordid', models.IntegerField(blank=True, db_column='RecordId', null=True)),
                ('recordversion', models.IntegerField(db_column='RecordVersion', default=0)),
                ('tablenum', models.SmallIntegerField(db_column='TableNum')),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'spauditlog',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spexportschema',
            fields=[
                ('id', models.AutoField(db_column='spexportschemaid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('schemaname', models.CharField(blank=True, db_column='SchemaName', max_length=80, null=True)),
                ('schemaversion', models.CharField(blank=True, db_column='SchemaVersion', max_length=80, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='spexportschemas', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'spexportschema',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spexportschemaitem',
            fields=[
                ('id', models.AutoField(db_column='spexportschemaitemid', primary_key=True, serialize=False)),
                ('datatype', models.CharField(blank=True, db_column='DataType', max_length=32, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=64, null=True)),
                ('formatter', models.CharField(blank=True, db_column='Formatter', max_length=32, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('spexportschema', models.ForeignKey(db_column='SpExportSchemaID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='spexportschemaitems', to='specify.spexportschema')),
            ],
            options={
                'db_table': 'spexportschemaitem',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spexportschemamapping',
            fields=[
                ('id', models.AutoField(db_column='spexportschemamappingid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('mappingname', models.CharField(blank=True, db_column='MappingName', max_length=50, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampexported', models.DateTimeField(blank=True, db_column='TimeStampExported', null=True)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'spexportschemamapping',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Splocalecontainer',
            fields=[
                ('id', models.AutoField(db_column='splocalecontainerid', primary_key=True, serialize=False)),
                ('aggregator', models.CharField(blank=True, db_column='Aggregator', max_length=64, null=True)),
                ('defaultui', models.CharField(blank=True, db_column='DefaultUI', max_length=64, null=True)),
                ('format', models.CharField(blank=True, db_column='Format', max_length=64, null=True)),
                ('ishidden', models.BooleanField(db_column='IsHidden', default=False)),
                ('issystem', models.BooleanField(db_column='IsSystem', default=False)),
                ('isuiformatter', models.BooleanField(blank=True, db_column='IsUIFormatter', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('picklistname', models.CharField(blank=True, db_column='PickListName', max_length=64, null=True)),
                ('schematype', models.SmallIntegerField(db_column='SchemaType')),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='splocalecontainers', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'splocalecontainer',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Splocalecontaineritem',
            fields=[
                ('id', models.AutoField(db_column='splocalecontaineritemid', primary_key=True, serialize=False)),
                ('format', models.CharField(blank=True, db_column='Format', max_length=64, null=True)),
                ('ishidden', models.BooleanField(db_column='IsHidden', default=False)),
                ('isrequired', models.BooleanField(blank=True, db_column='IsRequired', null=True)),
                ('issystem', models.BooleanField(db_column='IsSystem', default=False)),
                ('isuiformatter', models.BooleanField(blank=True, db_column='IsUIFormatter', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('picklistname', models.CharField(blank=True, db_column='PickListName', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('weblinkname', models.CharField(blank=True, db_column='WebLinkName', max_length=32, null=True)),
                ('container', models.ForeignKey(db_column='SpLocaleContainerID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='items', to='specify.splocalecontainer')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'splocalecontaineritem',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Sppermission',
            fields=[
                ('id', models.AutoField(db_column='sppermissionid', primary_key=True, serialize=False)),
                ('actions', models.CharField(blank=True, db_column='Actions', max_length=256, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=64, null=True)),
                ('permissionclass', models.CharField(db_column='PermissionClass', max_length=256)),
                ('targetid', models.IntegerField(blank=True, db_column='TargetId', null=True)),
            ],
            options={
                'db_table': 'sppermission',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spprincipal',
            fields=[
                ('id', models.AutoField(db_column='spprincipalid', primary_key=True, serialize=False)),
                ('groupsubclass', models.CharField(db_column='GroupSubClass', max_length=255)),
                ('grouptype', models.CharField(blank=True, db_column='groupType', max_length=32, null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('priority', models.SmallIntegerField(db_column='Priority')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('userGroupScopeID', models.IntegerField(blank=True, db_column='userGroupScopeID', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'spprincipal',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spquery',
            fields=[
                ('id', models.AutoField(db_column='spqueryid', primary_key=True, serialize=False)),
                ('contextname', models.CharField(db_column='ContextName', max_length=64)),
                ('contexttableid', models.SmallIntegerField(db_column='ContextTableId')),
                ('countonly', models.BooleanField(blank=True, db_column='CountOnly', null=True)),
                ('formatauditrecids', models.BooleanField(blank=True, db_column='FormatAuditRecIds', null=True)),
                ('isfavorite', models.BooleanField(blank=True, db_column='IsFavorite', null=True)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('ordinal', models.SmallIntegerField(blank=True, db_column='Ordinal', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('searchsynonymy', models.BooleanField(blank=True, db_column='SearchSynonymy', null=True)),
                ('selectdistinct', models.BooleanField(blank=True, db_column='SelectDistinct', null=True)),
                ('smushed', models.BooleanField(blank=True, db_column='Smushed', null=True)),
                ('sqlstr', models.TextField(blank=True, db_column='SqlStr', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('specifyuser', models.ForeignKey(db_column='SpecifyUserID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='spquerys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'spquery',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(db_column='storageid', primary_key=True, serialize=False)),
                ('abbrev', models.CharField(blank=True, db_column='Abbrev', max_length=16, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.BooleanField(db_column='IsAccepted', default=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('timestampversion', models.DateTimeField(blank=True, db_column='TimestampVersion', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('acceptedstorage', models.ForeignKey(db_column='AcceptedID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='acceptedchildren', to='specify.storage')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'storage',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Storagetreedef',
            fields=[
                ('id', models.AutoField(db_column='storagetreedefid', primary_key=True, serialize=False)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'storagetreedef',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.AutoField(db_column='taxonid', primary_key=True, serialize=False)),
                ('author', models.CharField(blank=True, db_column='Author', max_length=128, null=True)),
                ('citesstatus', models.CharField(blank=True, db_column='CitesStatus', max_length=32, null=True)),
                ('colstatus', models.CharField(blank=True, db_column='COLStatus', max_length=32, null=True)),
                ('commonname', models.CharField(blank=True, db_column='CommonName', max_length=128, null=True)),
                ('cultivarname', models.CharField(blank=True, db_column='CultivarName', max_length=32, null=True)),
                ('environmentalprotectionstatus', models.CharField(blank=True, db_column='EnvironmentalProtectionStatus', max_length=64, null=True)),
                ('esastatus', models.CharField(blank=True, db_column='EsaStatus', max_length=64, null=True)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=512, null=True)),
                ('groupnumber', models.CharField(blank=True, db_column='GroupNumber', max_length=20, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('integer1', models.BigIntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.BigIntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.BigIntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('isaccepted', models.BooleanField(db_column='IsAccepted', default=False)),
                ('ishybrid', models.BooleanField(db_column='IsHybrid', default=False)),
                ('isisnumber', models.CharField(blank=True, db_column='IsisNumber', max_length=16, null=True)),
                ('labelformat', models.CharField(blank=True, db_column='LabelFormat', max_length=64, null=True)),
                ('lsid', models.TextField(blank=True, db_column='LSID', null=True)),
                ('name', models.CharField(db_column='Name', max_length=256)),
                ('ncbitaxonnumber', models.CharField(blank=True, db_column='NcbiTaxonNumber', max_length=8, null=True)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=64, null=True)),
                ('taxonomicserialnumber', models.CharField(blank=True, db_column='TaxonomicSerialNumber', max_length=50, null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=128, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=128, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=128, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=128, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=256, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=256, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=256, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=256, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=256, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=256, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=256, null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('unitind1', models.CharField(blank=True, db_column='UnitInd1', max_length=50, null=True)),
                ('unitind2', models.CharField(blank=True, db_column='UnitInd2', max_length=50, null=True)),
                ('unitind3', models.CharField(blank=True, db_column='UnitInd3', max_length=50, null=True)),
                ('unitind4', models.CharField(blank=True, db_column='UnitInd4', max_length=50, null=True)),
                ('unitname1', models.CharField(blank=True, db_column='UnitName1', max_length=50, null=True)),
                ('unitname2', models.CharField(blank=True, db_column='UnitName2', max_length=50, null=True)),
                ('unitname3', models.CharField(blank=True, db_column='UnitName3', max_length=50, null=True)),
                ('unitname4', models.CharField(blank=True, db_column='UnitName4', max_length=50, null=True)),
                ('usfwscode', models.CharField(blank=True, db_column='UsfwsCode', max_length=16, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('visibility', models.SmallIntegerField(blank=True, db_column='Visibility', null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.BooleanField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.BooleanField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.BooleanField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.BooleanField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.BooleanField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.BooleanField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.BooleanField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.BooleanField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.BooleanField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.BooleanField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.BooleanField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.BooleanField(blank=True, db_column='YesNo7', null=True)),
                ('yesno8', models.BooleanField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.BooleanField(blank=True, db_column='YesNo9', null=True)),
                ('acceptedtaxon', models.ForeignKey(db_column='AcceptedID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='acceptedchildren', to='specify.taxon')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'taxon',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Taxontreedef',
            fields=[
                ('id', models.AutoField(db_column='taxontreedefid', primary_key=True, serialize=False)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'taxontreedef',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Treatmentevent',
            fields=[
                ('id', models.AutoField(db_column='treatmenteventid', primary_key=True, serialize=False)),
                ('dateboxed', models.DateTimeField(blank=True, db_column='DateBoxed', null=True)),
                ('datecleaned', models.DateTimeField(blank=True, db_column='DateCleaned', null=True)),
                ('datecompleted', models.DateTimeField(blank=True, db_column='DateCompleted', null=True)),
                ('datereceived', models.DateTimeField(blank=True, db_column='DateReceived', null=True)),
                ('datetoisolation', models.DateTimeField(blank=True, db_column='DateToIsolation', null=True)),
                ('datetreatmentended', models.DateTimeField(blank=True, db_column='DateTreatmentEnded', null=True)),
                ('datetreatmentstarted', models.DateTimeField(blank=True, db_column='DateTreatmentStarted', null=True)),
                ('fieldnumber', models.CharField(blank=True, db_column='FieldNumber', max_length=50, null=True)),
                ('location', models.CharField(blank=True, db_column='Storage', max_length=64, null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('number2', models.IntegerField(blank=True, db_column='Number2', null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('treatmentnumber', models.CharField(blank=True, db_column='TreatmentNumber', max_length=32, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=128, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('accession', models.ForeignKey(db_column='AccessionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treatmentevents', to='specify.accession')),
                ('authorizedby', models.ForeignKey(db_column='AuthorizedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='treatmentevents', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('division', models.ForeignKey(db_column='DivisionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('performedby', models.ForeignKey(db_column='PerformedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'treatmentevent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Workbench',
            fields=[
                ('id', models.AutoField(db_column='workbenchid', primary_key=True, serialize=False)),
                ('allpermissionlevel', models.IntegerField(blank=True, db_column='AllPermissionLevel', null=True)),
                ('dbtableid', models.IntegerField(blank=True, db_column='TableID', null=True)),
                ('exportinstitutionname', models.CharField(blank=True, db_column='ExportInstitutionName', max_length=128, null=True)),
                ('exportedfromtablename', models.CharField(blank=True, db_column='ExportedFromTableName', max_length=128, null=True)),
                ('formid', models.IntegerField(blank=True, db_column='FormId', null=True)),
                ('grouppermissionlevel', models.IntegerField(blank=True, db_column='GroupPermissionLevel', null=True)),
                ('lockedbyusername', models.CharField(blank=True, db_column='LockedByUserName', max_length=64, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('ownerpermissionlevel', models.IntegerField(blank=True, db_column='OwnerPermissionLevel', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcfilepath', models.CharField(blank=True, db_column='SrcFilePath', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('group', models.ForeignKey(db_column='SpPrincipalID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.spprincipal')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('specifyuser', models.ForeignKey(db_column='SpecifyUserID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='workbenches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'workbench',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Workbenchrow',
            fields=[
                ('id', models.AutoField(db_column='workbenchrowid', primary_key=True, serialize=False)),
                ('biogeomancerresults', models.TextField(blank=True, db_column='BioGeomancerResults', null=True)),
                ('cardimagedata', models.BinaryField(blank=True, db_column='CardImageData', null=True)),
                ('cardimagefullpath', models.CharField(blank=True, db_column='CardImageFullPath', max_length=255, null=True)),
                ('errorestimate', models.DecimalField(blank=True, db_column='ErrorEstimate', decimal_places=10, max_digits=22, null=True)),
                ('errorpolygon', models.TextField(blank=True, db_column='ErrorPolygon', null=True)),
                ('lat1text', models.CharField(blank=True, db_column='Lat1Text', max_length=50, null=True)),
                ('lat2text', models.CharField(blank=True, db_column='Lat2Text', max_length=50, null=True)),
                ('long1text', models.CharField(blank=True, db_column='Long1Text', max_length=50, null=True)),
                ('long2text', models.CharField(blank=True, db_column='Long2Text', max_length=50, null=True)),
                ('recordid', models.IntegerField(blank=True, db_column='RecordID', null=True)),
                ('rownumber', models.SmallIntegerField(blank=True, db_column='RowNumber', null=True)),
                ('sgrstatus', models.SmallIntegerField(blank=True, db_column='SGRStatus', null=True)),
                ('uploadstatus', models.SmallIntegerField(blank=True, db_column='UploadStatus', null=True)),
                ('workbench', models.ForeignKey(db_column='WorkbenchID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='workbenchrows', to='specify.workbench')),
            ],
            options={
                'db_table': 'workbenchrow',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Workbenchtemplate',
            fields=[
                ('id', models.AutoField(db_column='workbenchtemplateid', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=256, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('srcfilepath', models.CharField(blank=True, db_column='SrcFilePath', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('specifyuser', models.ForeignKey(db_column='SpecifyUserID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='workbenchtemplates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'workbenchtemplate',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Workbenchtemplatemappingitem',
            fields=[
                ('id', models.AutoField(db_column='workbenchtemplatemappingitemid', primary_key=True, serialize=False)),
                ('caption', models.CharField(blank=True, db_column='Caption', max_length=64, null=True)),
                ('carryforward', models.BooleanField(blank=True, db_column='CarryForward', null=True)),
                ('datafieldlength', models.SmallIntegerField(blank=True, db_column='DataFieldLength', null=True)),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=255, null=True)),
                ('fieldtype', models.SmallIntegerField(blank=True, db_column='FieldType', null=True)),
                ('importedcolname', models.CharField(blank=True, db_column='ImportedColName', max_length=255, null=True)),
                ('iseditable', models.BooleanField(blank=True, db_column='IsEditable', null=True)),
                ('isexportabletocontent', models.BooleanField(blank=True, db_column='IsExportableToContent', null=True)),
                ('isincludedintitle', models.BooleanField(blank=True, db_column='IsIncludedInTitle', null=True)),
                ('isrequired', models.BooleanField(blank=True, db_column='IsRequired', null=True)),
                ('metadata', models.CharField(blank=True, db_column='MetaData', max_length=128, null=True)),
                ('origimportcolumnindex', models.SmallIntegerField(blank=True, db_column='DataColumnIndex', null=True)),
                ('srctableid', models.IntegerField(blank=True, db_column='TableId', null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('vieworder', models.SmallIntegerField(blank=True, db_column='ViewOrder', null=True)),
                ('xcoord', models.SmallIntegerField(blank=True, db_column='XCoord', null=True)),
                ('ycoord', models.SmallIntegerField(blank=True, db_column='YCoord', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('workbenchtemplate', models.ForeignKey(db_column='WorkbenchTemplateID', on_delete=django.db.models.deletion.CASCADE, related_name='workbenchtemplatemappingitems', to='specify.workbenchtemplate')),
            ],
            options={
                'db_table': 'workbenchtemplatemappingitem',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Workbenchrowimage',
            fields=[
                ('id', models.AutoField(db_column='workbenchrowimageid', primary_key=True, serialize=False)),
                ('attachtotablename', models.CharField(blank=True, db_column='AttachToTableName', max_length=64, null=True)),
                ('cardimagedata', models.BinaryField(blank=True, db_column='CardImageData', null=True)),
                ('cardimagefullpath', models.CharField(blank=True, db_column='CardImageFullPath', max_length=255, null=True)),
                ('imageorder', models.IntegerField(blank=True, db_column='ImageOrder', null=True)),
                ('workbenchrow', models.ForeignKey(db_column='WorkbenchRowID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='workbenchrowimages', to='specify.workbenchrow')),
            ],
            options={
                'db_table': 'workbenchrowimage',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Workbenchrowexportedrelationship',
            fields=[
                ('id', models.AutoField(db_column='workbenchrowexportedrelationshipid', primary_key=True, serialize=False)),
                ('recordid', models.IntegerField(blank=True, db_column='RecordID', null=True)),
                ('relationshipname', models.CharField(blank=True, db_column='RelationshipName', max_length=120, null=True)),
                ('sequence', models.IntegerField(blank=True, db_column='Sequence', null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=120, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('workbenchrow', models.ForeignKey(db_column='WorkbenchRowID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='workbenchrowexportedrelationships', to='specify.workbenchrow')),
            ],
            options={
                'db_table': 'workbenchrowexportedrelationship',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Workbenchdataitem',
            fields=[
                ('id', models.AutoField(db_column='workbenchdataitemid', primary_key=True, serialize=False)),
                ('celldata', models.TextField(blank=True, db_column='CellData', null=True)),
                ('rownumber', models.SmallIntegerField(blank=True, db_column='RowNumber', null=True)),
                ('validationstatus', models.SmallIntegerField(blank=True, db_column='ValidationStatus', null=True)),
                ('workbenchrow', models.ForeignKey(db_column='WorkbenchRowID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='workbenchdataitems', to='specify.workbenchrow')),
                ('workbenchtemplatemappingitem', models.ForeignKey(db_column='WorkbenchTemplateMappingItemID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='workbenchdataitems', to='specify.workbenchtemplatemappingitem')),
            ],
            options={
                'db_table': 'workbenchdataitem',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='workbench',
            name='workbenchtemplate',
            field=models.ForeignKey(db_column='WorkbenchTemplateID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='workbenches', to='specify.workbenchtemplate'),
        ),
        migrations.CreateModel(
            name='Voucherrelationship',
            fields=[
                ('id', models.AutoField(db_column='voucherrelationshipid', primary_key=True, serialize=False)),
                ('collectioncode', models.CharField(blank=True, db_column='CollectionCode', max_length=64, null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('institutioncode', models.CharField(blank=True, db_column='InstitutionCode', max_length=64, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('urllink', models.CharField(blank=True, db_column='UrlLink', max_length=1024, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('vouchernumber', models.CharField(blank=True, db_column='VoucherNumber', max_length=256, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='voucherrelationships', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'voucherrelationship',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Treatmenteventattachment',
            fields=[
                ('id', models.AutoField(db_column='treatmenteventattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treatmenteventattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('treatmentevent', models.ForeignKey(db_column='TreatmentEventID', on_delete=django.db.models.deletion.CASCADE, related_name='treatmenteventattachments', to='specify.treatmentevent')),
            ],
            options={
                'db_table': 'treatmenteventattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Taxontreedefitem',
            fields=[
                ('id', models.AutoField(db_column='taxontreedefitemid', primary_key=True, serialize=False)),
                ('formattoken', models.CharField(blank=True, db_column='FormatToken', max_length=32, null=True)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.BooleanField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.BooleanField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentItemID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.taxontreedefitem')),
                ('treedef', models.ForeignKey(db_column='TaxonTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treedefitems', to='specify.taxontreedef')),
            ],
            options={
                'db_table': 'taxontreedefitem',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Taxoncitation',
            fields=[
                ('id', models.AutoField(db_column='taxoncitationid', primary_key=True, serialize=False)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='taxoncitations', to='specify.referencework')),
                ('taxon', models.ForeignKey(db_column='TaxonID', on_delete=django.db.models.deletion.CASCADE, related_name='taxoncitations', to='specify.taxon')),
            ],
            options={
                'db_table': 'taxoncitation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Taxonattribute',
            fields=[
                ('id', models.AutoField(db_column='taxonattributeid', primary_key=True, serialize=False)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=22, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=22, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=22, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=22, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=22, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=22, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=22, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=22, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=22, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=22, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=22, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=22, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=128, null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=128, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=128, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=128, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=128, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=128, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=128, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=128, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=128, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=128, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=128, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=128, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=128, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=128, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=128, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=128, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=128, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=128, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=128, null=True)),
                ('text27', models.CharField(blank=True, db_column='Text27', max_length=256, null=True)),
                ('text28', models.CharField(blank=True, db_column='Text28', max_length=256, null=True)),
                ('text29', models.CharField(blank=True, db_column='Text29', max_length=256, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=128, null=True)),
                ('text30', models.CharField(blank=True, db_column='Text30', max_length=256, null=True)),
                ('text31', models.CharField(blank=True, db_column='Text31', max_length=256, null=True)),
                ('text32', models.CharField(blank=True, db_column='Text32', max_length=256, null=True)),
                ('text33', models.CharField(blank=True, db_column='Text33', max_length=256, null=True)),
                ('text34', models.CharField(blank=True, db_column='Text34', max_length=256, null=True)),
                ('text35', models.CharField(blank=True, db_column='Text35', max_length=256, null=True)),
                ('text36', models.CharField(blank=True, db_column='Text36', max_length=256, null=True)),
                ('text37', models.CharField(blank=True, db_column='Text37', max_length=256, null=True)),
                ('text38', models.CharField(blank=True, db_column='Text38', max_length=256, null=True)),
                ('text39', models.CharField(blank=True, db_column='Text39', max_length=256, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=128, null=True)),
                ('text40', models.CharField(blank=True, db_column='Text40', max_length=256, null=True)),
                ('text41', models.CharField(blank=True, db_column='Text41', max_length=256, null=True)),
                ('text42', models.CharField(blank=True, db_column='Text42', max_length=256, null=True)),
                ('text43', models.CharField(blank=True, db_column='Text43', max_length=256, null=True)),
                ('text44', models.CharField(blank=True, db_column='Text44', max_length=256, null=True)),
                ('text45', models.CharField(blank=True, db_column='Text45', max_length=256, null=True)),
                ('text46', models.CharField(blank=True, db_column='Text46', max_length=256, null=True)),
                ('text47', models.CharField(blank=True, db_column='Text47', max_length=256, null=True)),
                ('text48', models.CharField(blank=True, db_column='Text48', max_length=256, null=True)),
                ('text49', models.TextField(blank=True, db_column='Text49', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=128, null=True)),
                ('text50', models.TextField(blank=True, db_column='Text50', null=True)),
                ('text51', models.TextField(blank=True, db_column='Text51', null=True)),
                ('text52', models.TextField(blank=True, db_column='Text52', null=True)),
                ('text53', models.TextField(blank=True, db_column='Text53', null=True)),
                ('text54', models.TextField(blank=True, db_column='Text54', null=True)),
                ('text55', models.TextField(blank=True, db_column='Text55', null=True)),
                ('text56', models.TextField(blank=True, db_column='Text56', null=True)),
                ('text57', models.TextField(blank=True, db_column='Text57', null=True)),
                ('text58', models.TextField(blank=True, db_column='Text58', null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=128, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=128, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=128, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=128, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.BooleanField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.BooleanField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.BooleanField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.BooleanField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.BooleanField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.BooleanField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.BooleanField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.BooleanField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.BooleanField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.BooleanField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno20', models.BooleanField(blank=True, db_column='YesNo20', null=True)),
                ('yesno21', models.BooleanField(blank=True, db_column='YesNo21', null=True)),
                ('yesno22', models.BooleanField(blank=True, db_column='YesNo22', null=True)),
                ('yesno23', models.BooleanField(blank=True, db_column='YesNo23', null=True)),
                ('yesno24', models.BooleanField(blank=True, db_column='YesNo24', null=True)),
                ('yesno25', models.BooleanField(blank=True, db_column='YesNo25', null=True)),
                ('yesno26', models.BooleanField(blank=True, db_column='YesNo26', null=True)),
                ('yesno27', models.BooleanField(blank=True, db_column='YesNo27', null=True)),
                ('yesno28', models.BooleanField(blank=True, db_column='YesNo28', null=True)),
                ('yesno29', models.BooleanField(blank=True, db_column='YesNo29', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno30', models.BooleanField(blank=True, db_column='YesNo30', null=True)),
                ('yesno31', models.BooleanField(blank=True, db_column='YesNo31', null=True)),
                ('yesno32', models.BooleanField(blank=True, db_column='YesNo32', null=True)),
                ('yesno33', models.BooleanField(blank=True, db_column='YesNo33', null=True)),
                ('yesno34', models.BooleanField(blank=True, db_column='YesNo34', null=True)),
                ('yesno35', models.BooleanField(blank=True, db_column='YesNo35', null=True)),
                ('yesno36', models.BooleanField(blank=True, db_column='YesNo36', null=True)),
                ('yesno37', models.BooleanField(blank=True, db_column='YesNo37', null=True)),
                ('yesno38', models.BooleanField(blank=True, db_column='YesNo38', null=True)),
                ('yesno39', models.BooleanField(blank=True, db_column='YesNo39', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno40', models.BooleanField(blank=True, db_column='YesNo40', null=True)),
                ('yesno41', models.BooleanField(blank=True, db_column='YesNo41', null=True)),
                ('yesno42', models.BooleanField(blank=True, db_column='YesNo42', null=True)),
                ('yesno43', models.BooleanField(blank=True, db_column='YesNo43', null=True)),
                ('yesno44', models.BooleanField(blank=True, db_column='YesNo44', null=True)),
                ('yesno45', models.BooleanField(blank=True, db_column='YesNo45', null=True)),
                ('yesno46', models.BooleanField(blank=True, db_column='YesNo46', null=True)),
                ('yesno47', models.BooleanField(blank=True, db_column='YesNo47', null=True)),
                ('yesno48', models.BooleanField(blank=True, db_column='YesNo48', null=True)),
                ('yesno49', models.BooleanField(blank=True, db_column='YesNo49', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('yesno50', models.BooleanField(blank=True, db_column='YesNo50', null=True)),
                ('yesno51', models.BooleanField(blank=True, db_column='YesNo51', null=True)),
                ('yesno52', models.BooleanField(blank=True, db_column='YesNo52', null=True)),
                ('yesno53', models.BooleanField(blank=True, db_column='YesNo53', null=True)),
                ('yesno54', models.BooleanField(blank=True, db_column='YesNo54', null=True)),
                ('yesno55', models.BooleanField(blank=True, db_column='YesNo55', null=True)),
                ('yesno56', models.BooleanField(blank=True, db_column='YesNo56', null=True)),
                ('yesno57', models.BooleanField(blank=True, db_column='YesNo57', null=True)),
                ('yesno58', models.BooleanField(blank=True, db_column='YesNo58', null=True)),
                ('yesno59', models.BooleanField(blank=True, db_column='YesNo59', null=True)),
                ('yesno6', models.BooleanField(blank=True, db_column='YesNo6', null=True)),
                ('yesno60', models.BooleanField(blank=True, db_column='YesNo60', null=True)),
                ('yesno61', models.BooleanField(blank=True, db_column='YesNo61', null=True)),
                ('yesno62', models.BooleanField(blank=True, db_column='YesNo62', null=True)),
                ('yesno63', models.BooleanField(blank=True, db_column='YesNo63', null=True)),
                ('yesno64', models.BooleanField(blank=True, db_column='YesNo64', null=True)),
                ('yesno65', models.BooleanField(blank=True, db_column='YesNo65', null=True)),
                ('yesno66', models.BooleanField(blank=True, db_column='YesNo66', null=True)),
                ('yesno67', models.BooleanField(blank=True, db_column='YesNo67', null=True)),
                ('yesno68', models.BooleanField(blank=True, db_column='YesNo68', null=True)),
                ('yesno69', models.BooleanField(blank=True, db_column='YesNo69', null=True)),
                ('yesno7', models.BooleanField(blank=True, db_column='YesNo7', null=True)),
                ('yesno70', models.BooleanField(blank=True, db_column='YesNo70', null=True)),
                ('yesno71', models.BooleanField(blank=True, db_column='YesNo71', null=True)),
                ('yesno72', models.BooleanField(blank=True, db_column='YesNo72', null=True)),
                ('yesno73', models.BooleanField(blank=True, db_column='YesNo73', null=True)),
                ('yesno74', models.BooleanField(blank=True, db_column='YesNo74', null=True)),
                ('yesno75', models.BooleanField(blank=True, db_column='YesNo75', null=True)),
                ('yesno76', models.BooleanField(blank=True, db_column='YesNo76', null=True)),
                ('yesno77', models.BooleanField(blank=True, db_column='YesNo77', null=True)),
                ('yesno78', models.BooleanField(blank=True, db_column='YesNo78', null=True)),
                ('yesno79', models.BooleanField(blank=True, db_column='YesNo79', null=True)),
                ('yesno8', models.BooleanField(blank=True, db_column='YesNo8', null=True)),
                ('yesno80', models.BooleanField(blank=True, db_column='YesNo80', null=True)),
                ('yesno81', models.BooleanField(blank=True, db_column='YesNo81', null=True)),
                ('yesno82', models.BooleanField(blank=True, db_column='YesNo82', null=True)),
                ('yesno9', models.BooleanField(blank=True, db_column='YesNo9', null=True)),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'taxonattribute',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Taxonattachment',
            fields=[
                ('id', models.AutoField(db_column='taxonattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='taxonattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('taxon', models.ForeignKey(db_column='TaxonID', on_delete=django.db.models.deletion.CASCADE, related_name='taxonattachments', to='specify.taxon')),
            ],
            options={
                'db_table': 'taxonattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='taxon',
            name='definition',
            field=models.ForeignKey(db_column='TaxonTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.taxontreedef'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='definitionitem',
            field=models.ForeignKey(db_column='TaxonTreeDefItemID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.taxontreedefitem'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='hybridparent1',
            field=models.ForeignKey(db_column='HybridParent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='hybridchildren1', to='specify.taxon'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='hybridparent2',
            field=models.ForeignKey(db_column='HybridParent2ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='hybridchildren2', to='specify.taxon'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='parent',
            field=models.ForeignKey(db_column='ParentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.taxon'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='taxonattribute',
            field=models.ForeignKey(db_column='TaxonAttributeID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='taxons', to='specify.taxonattribute'),
        ),
        migrations.AddField(
            model_name='taxon',
            name='visibilitysetby',
            field=models.ForeignKey(db_column='VisibilitySetByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Storagetreedefitem',
            fields=[
                ('id', models.AutoField(db_column='storagetreedefitemid', primary_key=True, serialize=False)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.BooleanField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.BooleanField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentItemID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.storagetreedefitem')),
                ('treedef', models.ForeignKey(db_column='StorageTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treedefitems', to='specify.storagetreedef')),
            ],
            options={
                'db_table': 'storagetreedefitem',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Storageattachment',
            fields=[
                ('id', models.AutoField(db_column='storageattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='storageattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('storage', models.ForeignKey(db_column='StorageID', on_delete=django.db.models.deletion.CASCADE, related_name='storageattachments', to='specify.storage')),
            ],
            options={
                'db_table': 'storageattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='storage',
            name='definition',
            field=models.ForeignKey(db_column='StorageTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.storagetreedef'),
        ),
        migrations.AddField(
            model_name='storage',
            name='definitionitem',
            field=models.ForeignKey(db_column='StorageTreeDefItemID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.storagetreedefitem'),
        ),
        migrations.AddField(
            model_name='storage',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='storage',
            name='parent',
            field=models.ForeignKey(db_column='ParentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.storage'),
        ),
        migrations.CreateModel(
            name='Spvisualquery',
            fields=[
                ('id', models.AutoField(db_column='spvisualqueryid', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('specifyuser', models.ForeignKey(db_column='SpecifyUserID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'spvisualquery',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spviewsetobj',
            fields=[
                ('id', models.AutoField(db_column='spviewsetobjid', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('filename', models.CharField(blank=True, db_column='FileName', max_length=255, null=True)),
                ('level', models.SmallIntegerField(db_column='Level')),
                ('metadata', models.CharField(blank=True, db_column='MetaData', max_length=255, null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('spappresourcedir', models.ForeignKey(db_column='SpAppResourceDirID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='sppersistedviewsets', to='specify.spappresourcedir')),
            ],
            options={
                'db_table': 'spviewsetobj',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spversion',
            fields=[
                ('id', models.AutoField(db_column='spversionid', primary_key=True, serialize=False)),
                ('appname', models.CharField(blank=True, db_column='AppName', max_length=32, null=True)),
                ('appversion', models.CharField(blank=True, db_column='AppVersion', max_length=16, null=True)),
                ('dbclosedby', models.CharField(blank=True, db_column='DbClosedBy', max_length=32, null=True)),
                ('isdbclosed', models.BooleanField(blank=True, db_column='IsDBClosed', null=True)),
                ('schemaversion', models.CharField(blank=True, db_column='SchemaVersion', max_length=16, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('workbenchschemaversion', models.CharField(blank=True, db_column='WorkbenchSchemaVersion', max_length=16, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'spversion',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Sptasksemaphore',
            fields=[
                ('id', models.AutoField(db_column='tasksemaphoreid', primary_key=True, serialize=False)),
                ('context', models.CharField(blank=True, db_column='Context', max_length=32, null=True)),
                ('islocked', models.BooleanField(blank=True, db_column='IsLocked', null=True)),
                ('lockedtime', models.DateTimeField(blank=True, db_column='LockedTime', null=True)),
                ('machinename', models.CharField(blank=True, db_column='MachineName', max_length=64, null=True)),
                ('scope', models.SmallIntegerField(blank=True, db_column='Scope', null=True)),
                ('taskname', models.CharField(blank=True, db_column='TaskName', max_length=32, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('usagecount', models.IntegerField(blank=True, db_column='UsageCount', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collection', models.ForeignKey(db_column='CollectionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('owner', models.ForeignKey(db_column='OwnerID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='tasksemaphores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sptasksemaphore',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spsymbiotainstance',
            fields=[
                ('id', models.AutoField(db_column='spsymbiotainstanceid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=256, null=True)),
                ('instancename', models.CharField(blank=True, db_column='InstanceName', max_length=256, null=True)),
                ('lastcachebuild', models.DateTimeField(blank=True, db_column='LastCacheBuild', null=True)),
                ('lastpull', models.DateTimeField(blank=True, db_column='LastPull', null=True)),
                ('lastpush', models.DateTimeField(blank=True, db_column='LastPush', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('symbiotakey', models.CharField(blank=True, db_column='SymbiotaKey', max_length=128, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('schemamapping', models.ForeignKey(db_column='SchemaMappingID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='symbiotainstances', to='specify.spexportschemamapping')),
            ],
            options={
                'db_table': 'spsymbiotainstance',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spreport',
            fields=[
                ('id', models.AutoField(db_column='spreportid', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('repeatcount', models.IntegerField(blank=True, db_column='RepeatCount', null=True)),
                ('repeatfield', models.CharField(blank=True, db_column='RepeatField', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('appresource', models.ForeignKey(db_column='AppResourceID', on_delete=django.db.models.deletion.CASCADE, related_name='spreports', to='specify.spappresource')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('query', models.ForeignKey(db_column='SpQueryID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='reports', to='specify.spquery')),
                ('specifyuser', models.ForeignKey(db_column='SpecifyUserID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('workbenchTemplate', models.OneToOneField(db_column='WorkbenchTemplateID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.workbenchtemplate')),
            ],
            options={
                'db_table': 'spreport',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spqueryfield',
            fields=[
                ('id', models.AutoField(db_column='spqueryfieldid', primary_key=True, serialize=False)),
                ('allownulls', models.BooleanField(blank=True, db_column='AllowNulls', null=True)),
                ('alwaysfilter', models.BooleanField(blank=True, db_column='AlwaysFilter', null=True)),
                ('columnalias', models.CharField(blank=True, db_column='ColumnAlias', max_length=64, null=True)),
                ('contexttableident', models.IntegerField(blank=True, db_column='ContextTableIdent', null=True)),
                ('endvalue', models.TextField(blank=True, db_column='EndValue', null=True)),
                ('fieldname', models.CharField(db_column='FieldName', max_length=32)),
                ('formatname', models.CharField(blank=True, db_column='FormatName', max_length=64, null=True)),
                ('isdisplay', models.BooleanField(db_column='IsDisplay', default=False)),
                ('isnot', models.BooleanField(db_column='IsNot', default=False)),
                ('isprompt', models.BooleanField(blank=True, db_column='IsPrompt', null=True)),
                ('isrelfld', models.BooleanField(blank=True, db_column='IsRelFld', null=True)),
                ('operend', models.SmallIntegerField(blank=True, db_column='OperEnd', null=True)),
                ('operstart', models.SmallIntegerField(db_column='OperStart')),
                ('position', models.SmallIntegerField(db_column='Position')),
                ('sorttype', models.SmallIntegerField(db_column='SortType')),
                ('startvalue', models.TextField(db_column='StartValue')),
                ('stringid', models.CharField(db_column='StringId', max_length=500)),
                ('tablelist', models.CharField(db_column='TableList', max_length=500)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('query', models.ForeignKey(db_column='SpQueryID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='specify.spquery')),
            ],
            options={
                'db_table': 'spqueryfield',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Splocaleitemstr',
            fields=[
                ('id', models.AutoField(db_column='splocaleitemstrid', primary_key=True, serialize=False)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=2, null=True)),
                ('language', models.CharField(db_column='Language', max_length=2)),
                ('text', models.CharField(db_column='Text', max_length=2048)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('variant', models.CharField(blank=True, db_column='Variant', max_length=2, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('containerdesc', models.ForeignKey(db_column='SpLocaleContainerDescID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='descs', to='specify.splocalecontainer')),
                ('containername', models.ForeignKey(db_column='SpLocaleContainerNameID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='names', to='specify.splocalecontainer')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('itemdesc', models.ForeignKey(db_column='SpLocaleContainerItemDescID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='descs', to='specify.splocalecontaineritem')),
                ('itemname', models.ForeignKey(db_column='SpLocaleContainerItemNameID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='names', to='specify.splocalecontaineritem')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'splocaleitemstr',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spfieldvaluedefault',
            fields=[
                ('id', models.AutoField(db_column='spfieldvaluedefaultid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('fieldname', models.CharField(blank=True, db_column='FieldName', max_length=32, null=True)),
                ('idvalue', models.IntegerField(blank=True, db_column='IdValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=64, null=True)),
                ('tablename', models.CharField(blank=True, db_column='TableName', max_length=32, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'spfieldvaluedefault',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spexportschemaitemmapping',
            fields=[
                ('id', models.AutoField(db_column='spexportschemaitemmappingid', primary_key=True, serialize=False)),
                ('exportedfieldname', models.CharField(blank=True, db_column='ExportedFieldName', max_length=64, null=True)),
                ('extensionitem', models.BooleanField(blank=True, db_column='ExtensionItem', null=True)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=255, null=True)),
                ('rowtype', models.CharField(blank=True, db_column='RowType', max_length=500, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('exportschemaitem', models.ForeignKey(db_column='ExportSchemaItemID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.spexportschemaitem')),
                ('exportschemamapping', models.ForeignKey(db_column='SpExportSchemaMappingID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='mappings', to='specify.spexportschemamapping')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('queryfield', models.ForeignKey(db_column='SpQueryFieldID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='mappings', to='specify.spqueryfield')),
            ],
            options={
                'db_table': 'spexportschemaitemmapping',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='spexportschemaitem',
            name='splocalecontaineritem',
            field=models.ForeignKey(db_column='SpLocaleContainerItemID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='spexportschemaitems', to='specify.splocalecontaineritem'),
        ),
        migrations.CreateModel(
            name='Spauditlogfield',
            fields=[
                ('id', models.AutoField(db_column='spauditlogfieldid', primary_key=True, serialize=False)),
                ('fieldname', models.CharField(db_column='FieldName', max_length=128)),
                ('newvalue', models.TextField(blank=True, db_column='NewValue', null=True)),
                ('oldvalue', models.TextField(blank=True, db_column='OldValue', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('spauditlog', models.ForeignKey(db_column='SpAuditLogID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='fields', to='specify.spauditlog')),
            ],
            options={
                'db_table': 'spauditlogfield',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Spappresourcedata',
            fields=[
                ('id', models.AutoField(db_column='spappresourcedataid', primary_key=True, serialize=False)),
                ('data', models.BinaryField(blank=True, db_column='data', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('spappresource', models.ForeignKey(db_column='SpAppResourceID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spappresourcedatas', to='specify.spappresource')),
                ('spviewsetobj', models.ForeignKey(db_column='SpViewSetObjID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spappresourcedatas', to='specify.spviewsetobj')),
            ],
            options={
                'db_table': 'spappresourcedata',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='spappresource',
            name='group',
            field=models.ForeignKey(db_column='SpPrincipalID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.spprincipal'),
        ),
        migrations.AddField(
            model_name='spappresource',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='spappresource',
            name='spappresourcedir',
            field=models.ForeignKey(db_column='SpAppResourceDirID', on_delete=django.db.models.deletion.CASCADE, related_name='sppersistedappresources', to='specify.spappresourcedir'),
        ),
        migrations.AddField(
            model_name='spappresource',
            name='specifyuser',
            field=models.ForeignKey(db_column='SpecifyUserID', on_delete=django.db.models.deletion.CASCADE, related_name='spappresources', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(db_column='shipmentid', primary_key=True, serialize=False)),
                ('insuredforamount', models.CharField(blank=True, db_column='InsuredForAmount', max_length=50, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('numberofpackages', models.SmallIntegerField(blank=True, db_column='NumberOfPackages', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('shipmentdate', models.DateTimeField(blank=True, db_column='ShipmentDate', null=True)),
                ('shipmentmethod', models.CharField(blank=True, db_column='ShipmentMethod', max_length=50, null=True)),
                ('shipmentnumber', models.CharField(db_column='ShipmentNumber', max_length=50)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('weight', models.CharField(blank=True, db_column='Weight', max_length=50, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('borrow', models.ForeignKey(db_column='BorrowID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='specify.borrow')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('exchangeout', models.ForeignKey(db_column='ExchangeOutID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='shipments', to='specify.exchangeout')),
                ('gift', models.ForeignKey(db_column='GiftID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='specify.gift')),
                ('loan', models.ForeignKey(db_column='LoanID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='specify.loan')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('shippedby', models.ForeignKey(db_column='ShippedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('shippedto', models.ForeignKey(db_column='ShippedToID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('shipper', models.ForeignKey(db_column='ShipperID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'shipment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Repositoryagreementattachment',
            fields=[
                ('id', models.AutoField(db_column='repositoryagreementattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='repositoryagreementattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('repositoryagreement', models.ForeignKey(db_column='RepositoryAgreementID', on_delete=django.db.models.deletion.CASCADE, related_name='repositoryagreementattachments', to='specify.repositoryagreement')),
            ],
            options={
                'db_table': 'repositoryagreementattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Referenceworkattachment',
            fields=[
                ('id', models.AutoField(db_column='referenceworkattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='referenceworkattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=django.db.models.deletion.CASCADE, related_name='referenceworkattachments', to='specify.referencework')),
            ],
            options={
                'db_table': 'referenceworkattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Recordsetitem',
            fields=[
                ('id', models.AutoField(db_column='recordsetitemid', primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, db_column='OrderNumber', null=True)),
                ('recordid', models.IntegerField(db_column='RecordId')),
                ('recordset', models.ForeignKey(db_column='RecordSetID', on_delete=django.db.models.deletion.CASCADE, related_name='recordsetitems', to='specify.recordset')),
            ],
            options={
                'db_table': 'recordsetitem',
                'ordering': ('recordid',),
            },
        ),
        migrations.AddField(
            model_name='recordset',
            name='group',
            field=models.ForeignKey(db_column='SpPrincipalID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.spprincipal'),
        ),
        migrations.AddField(
            model_name='recordset',
            name='inforequest',
            field=models.ForeignKey(db_column='InfoRequestID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='recordsets', to='specify.inforequest'),
        ),
        migrations.AddField(
            model_name='recordset',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='recordset',
            name='specifyuser',
            field=models.ForeignKey(db_column='SpecifyUserID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(db_column='projectid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('grantagency', models.CharField(blank=True, db_column='GrantAgency', max_length=64, null=True)),
                ('grantnumber', models.CharField(blank=True, db_column='GrantNumber', max_length=64, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('projectdescription', models.CharField(blank=True, db_column='ProjectDescription', max_length=255, null=True)),
                ('projectname', models.CharField(db_column='ProjectName', max_length=128)),
                ('projectnumber', models.CharField(blank=True, db_column='ProjectNumber', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=1024, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('agent', models.ForeignKey(db_column='ProjectAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'project',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Preptype',
            fields=[
                ('id', models.AutoField(db_column='preptypeid', primary_key=True, serialize=False)),
                ('isloanable', models.BooleanField(db_column='IsLoanable', default=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collection', models.ForeignKey(db_column='CollectionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='preptypes', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'preptype',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Preparationproperty',
            fields=[
                ('id', models.AutoField(db_column='preparationpropertyid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date10', models.DateTimeField(blank=True, db_column='Date10', null=True)),
                ('date11', models.DateTimeField(blank=True, db_column='Date11', null=True)),
                ('date12', models.DateTimeField(blank=True, db_column='Date12', null=True)),
                ('date13', models.DateTimeField(blank=True, db_column='Date13', null=True)),
                ('date14', models.DateTimeField(blank=True, db_column='Date14', null=True)),
                ('date15', models.DateTimeField(blank=True, db_column='Date15', null=True)),
                ('date16', models.DateTimeField(blank=True, db_column='Date16', null=True)),
                ('date17', models.DateTimeField(blank=True, db_column='Date17', null=True)),
                ('date18', models.DateTimeField(blank=True, db_column='Date18', null=True)),
                ('date19', models.DateTimeField(blank=True, db_column='Date19', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date20', models.DateTimeField(blank=True, db_column='Date20', null=True)),
                ('date3', models.DateTimeField(blank=True, db_column='Date3', null=True)),
                ('date4', models.DateTimeField(blank=True, db_column='Date4', null=True)),
                ('date5', models.DateTimeField(blank=True, db_column='Date5', null=True)),
                ('date6', models.DateTimeField(blank=True, db_column='Date6', null=True)),
                ('date7', models.DateTimeField(blank=True, db_column='Date7', null=True)),
                ('date8', models.DateTimeField(blank=True, db_column='Date8', null=True)),
                ('date9', models.DateTimeField(blank=True, db_column='Date9', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.SmallIntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.SmallIntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer11', models.SmallIntegerField(blank=True, db_column='Integer11', null=True)),
                ('integer12', models.SmallIntegerField(blank=True, db_column='Integer12', null=True)),
                ('integer13', models.SmallIntegerField(blank=True, db_column='Integer13', null=True)),
                ('integer14', models.SmallIntegerField(blank=True, db_column='Integer14', null=True)),
                ('integer15', models.SmallIntegerField(blank=True, db_column='Integer15', null=True)),
                ('integer16', models.SmallIntegerField(blank=True, db_column='Integer16', null=True)),
                ('integer17', models.SmallIntegerField(blank=True, db_column='Integer17', null=True)),
                ('integer18', models.SmallIntegerField(blank=True, db_column='Integer18', null=True)),
                ('integer19', models.SmallIntegerField(blank=True, db_column='Integer19', null=True)),
                ('integer2', models.SmallIntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer20', models.SmallIntegerField(blank=True, db_column='Integer20', null=True)),
                ('integer21', models.IntegerField(blank=True, db_column='Integer21', null=True)),
                ('integer22', models.IntegerField(blank=True, db_column='Integer22', null=True)),
                ('integer23', models.IntegerField(blank=True, db_column='Integer23', null=True)),
                ('integer24', models.IntegerField(blank=True, db_column='Integer24', null=True)),
                ('integer25', models.IntegerField(blank=True, db_column='Integer25', null=True)),
                ('integer26', models.IntegerField(blank=True, db_column='Integer26', null=True)),
                ('integer27', models.IntegerField(blank=True, db_column='Integer27', null=True)),
                ('integer28', models.IntegerField(blank=True, db_column='Integer28', null=True)),
                ('integer29', models.IntegerField(blank=True, db_column='Integer29', null=True)),
                ('integer3', models.SmallIntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer30', models.IntegerField(blank=True, db_column='Integer30', null=True)),
                ('integer4', models.SmallIntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.SmallIntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.SmallIntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.SmallIntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.SmallIntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.SmallIntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=22, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=22, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=22, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=22, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=22, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=22, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=22, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=22, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=22, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=22, null=True)),
                ('number21', models.DecimalField(blank=True, db_column='Number21', decimal_places=10, max_digits=22, null=True)),
                ('number22', models.DecimalField(blank=True, db_column='Number22', decimal_places=10, max_digits=22, null=True)),
                ('number23', models.DecimalField(blank=True, db_column='Number23', decimal_places=10, max_digits=22, null=True)),
                ('number24', models.DecimalField(blank=True, db_column='Number24', decimal_places=10, max_digits=22, null=True)),
                ('number25', models.DecimalField(blank=True, db_column='Number25', decimal_places=10, max_digits=22, null=True)),
                ('number26', models.DecimalField(blank=True, db_column='Number26', decimal_places=10, max_digits=22, null=True)),
                ('number27', models.DecimalField(blank=True, db_column='Number27', decimal_places=10, max_digits=22, null=True)),
                ('number28', models.DecimalField(blank=True, db_column='Number28', decimal_places=10, max_digits=22, null=True)),
                ('number29', models.DecimalField(blank=True, db_column='Number29', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number30', models.DecimalField(blank=True, db_column='Number30', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=22, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=22, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=22, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=50, null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=100, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=100, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=100, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=100, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=50, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=100, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=100, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=100, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=100, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=100, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=100, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=100, null=True)),
                ('text27', models.CharField(blank=True, db_column='Text27', max_length=100, null=True)),
                ('text28', models.CharField(blank=True, db_column='Text28', max_length=100, null=True)),
                ('text29', models.CharField(blank=True, db_column='Text29', max_length=100, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=50, null=True)),
                ('text30', models.CharField(blank=True, db_column='Text30', max_length=100, null=True)),
                ('text31', models.TextField(blank=True, db_column='Text31', null=True)),
                ('text32', models.TextField(blank=True, db_column='Text32', null=True)),
                ('text33', models.TextField(blank=True, db_column='Text33', null=True)),
                ('text34', models.TextField(blank=True, db_column='Text34', null=True)),
                ('text35', models.TextField(blank=True, db_column='Text35', null=True)),
                ('text36', models.TextField(blank=True, db_column='Text36', null=True)),
                ('text37', models.TextField(blank=True, db_column='Text37', null=True)),
                ('text38', models.TextField(blank=True, db_column='Text38', null=True)),
                ('text39', models.TextField(blank=True, db_column='Text39', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text40', models.TextField(blank=True, db_column='Text40', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.BooleanField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.BooleanField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.BooleanField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.BooleanField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.BooleanField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.BooleanField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.BooleanField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.BooleanField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.BooleanField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.BooleanField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno20', models.BooleanField(blank=True, db_column='YesNo20', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.BooleanField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.BooleanField(blank=True, db_column='YesNo7', null=True)),
                ('yesno8', models.BooleanField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.BooleanField(blank=True, db_column='YesNo9', null=True)),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent10', models.ForeignKey(db_column='Agent10ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent11', models.ForeignKey(db_column='Agent11ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent12', models.ForeignKey(db_column='Agent12ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent13', models.ForeignKey(db_column='Agent13ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent14', models.ForeignKey(db_column='Agent14ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent15', models.ForeignKey(db_column='Agent15ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent16', models.ForeignKey(db_column='Agent16ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent17', models.ForeignKey(db_column='Agent17ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent18', models.ForeignKey(db_column='Agent18ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent19', models.ForeignKey(db_column='Agent19ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent2', models.ForeignKey(db_column='Agent2ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent20', models.ForeignKey(db_column='Agent20ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent3', models.ForeignKey(db_column='Agent3ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent4', models.ForeignKey(db_column='Agent4ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent5', models.ForeignKey(db_column='Agent5ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent6', models.ForeignKey(db_column='Agent6ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent7', models.ForeignKey(db_column='Agent7ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent8', models.ForeignKey(db_column='Agent8D', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent9', models.ForeignKey(db_column='Agent9ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationID', on_delete=django.db.models.deletion.CASCADE, related_name='preparationproperties', to='specify.preparation')),
            ],
            options={
                'db_table': 'preparationproperty',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Preparationattribute',
            fields=[
                ('id', models.AutoField(db_column='preparationattributeid', primary_key=True, serialize=False)),
                ('attrdate', models.DateTimeField(blank=True, db_column='AttrDate', null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.IntegerField(blank=True, db_column='Number4', null=True)),
                ('number5', models.IntegerField(blank=True, db_column='Number5', null=True)),
                ('number6', models.IntegerField(blank=True, db_column='Number6', null=True)),
                ('number7', models.IntegerField(blank=True, db_column='Number7', null=True)),
                ('number8', models.IntegerField(blank=True, db_column='Number8', null=True)),
                ('number9', models.SmallIntegerField(blank=True, db_column='Number9', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.TextField(blank=True, db_column='Text10', null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=50, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=50, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=50, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=50, null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=50, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=50, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=50, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=50, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=50, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=50, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=50, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=50, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'preparationattribute',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Preparationattr',
            fields=[
                ('id', models.AutoField(db_column='attrid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('dblvalue', models.FloatField(blank=True, db_column='DoubleValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('definition', models.ForeignKey(db_column='AttributeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='preparationattrs', to='specify.attributedef')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationId', on_delete=django.db.models.deletion.CASCADE, related_name='preparationattrs', to='specify.preparation')),
            ],
            options={
                'db_table': 'preparationattr',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Preparationattachment',
            fields=[
                ('id', models.AutoField(db_column='preparationattachmentid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='preparationattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationID', on_delete=django.db.models.deletion.CASCADE, related_name='preparationattachments', to='specify.preparation')),
            ],
            options={
                'db_table': 'preparationattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='preparation',
            name='alternatestorage',
            field=models.ForeignKey(db_column='AlternateStorageID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.storage'),
        ),
        migrations.AddField(
            model_name='preparation',
            name='collectionobject',
            field=models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='preparations', to='specify.collectionobject'),
        ),
        migrations.AddField(
            model_name='preparation',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='preparation',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='preparation',
            name='preparationattribute',
            field=models.ForeignKey(db_column='PreparationAttributeID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='preparations', to='specify.preparationattribute'),
        ),
        migrations.AddField(
            model_name='preparation',
            name='preparedbyagent',
            field=models.ForeignKey(db_column='PreparedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='preparation',
            name='preptype',
            field=models.ForeignKey(db_column='PrepTypeID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.preptype'),
        ),
        migrations.AddField(
            model_name='preparation',
            name='storage',
            field=models.ForeignKey(db_column='StorageID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='preparations', to='specify.storage'),
        ),
        migrations.CreateModel(
            name='Picklistitem',
            fields=[
                ('id', models.AutoField(db_column='picklistitemid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(db_column='Title', max_length=1024)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=1024, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('picklist', models.ForeignKey(db_column='PickListID', on_delete=django.db.models.deletion.CASCADE, related_name='picklistitems', to='specify.picklist')),
            ],
            options={
                'db_table': 'picklistitem',
                'ordering': ('ordinal',),
            },
        ),
        migrations.CreateModel(
            name='Permitattachment',
            fields=[
                ('id', models.AutoField(db_column='permitattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='permitattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('permit', models.ForeignKey(db_column='PermitID', on_delete=django.db.models.deletion.CASCADE, related_name='permitattachments', to='specify.permit')),
            ],
            options={
                'db_table': 'permitattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Pcrperson',
            fields=[
                ('id', models.AutoField(db_column='pcrpersonid', primary_key=True, serialize=False)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('dnasequence', models.ForeignKey(db_column='DNASequenceID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='pcrpersons', to='specify.dnasequence')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'pcrperson',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Paleocontext',
            fields=[
                ('id', models.AutoField(db_column='paleocontextid', primary_key=True, serialize=False)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('paleocontextname', models.CharField(blank=True, db_column='PaleoContextName', max_length=80, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=64, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=64, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=500, null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=500, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=500, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('biostrat', models.ForeignKey(db_column='BioStratID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='biostratspaleocontext', to='specify.geologictimeperiod')),
                ('chronosstrat', models.ForeignKey(db_column='ChronosStratID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='chronosstratspaleocontext', to='specify.geologictimeperiod')),
                ('chronosstratend', models.ForeignKey(db_column='ChronosStratEndID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.geologictimeperiod')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('lithostrat', models.ForeignKey(db_column='LithoStratID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='paleocontexts', to='specify.lithostrat')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'paleocontext',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Otheridentifier',
            fields=[
                ('id', models.AutoField(db_column='otheridentifierid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.SmallIntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('identifier', models.CharField(db_column='Identifier', max_length=64)),
                ('institution', models.CharField(blank=True, db_column='Institution', max_length=64, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent2', models.ForeignKey(db_column='Agent2ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='otheridentifiers', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'otheridentifier',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Morphbankview',
            fields=[
                ('id', models.AutoField(db_column='morphbankviewid', primary_key=True, serialize=False)),
                ('developmentstate', models.CharField(blank=True, db_column='DevelopmentState', max_length=128, null=True)),
                ('form', models.CharField(blank=True, db_column='Form', max_length=128, null=True)),
                ('imagingpreparationtechnique', models.CharField(blank=True, db_column='ImagingPreparationTechnique', max_length=128, null=True)),
                ('imagingtechnique', models.CharField(blank=True, db_column='ImagingTechnique', max_length=128, null=True)),
                ('morphbankexternalviewid', models.IntegerField(blank=True, db_column='MorphBankExternalViewID', null=True)),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=32, null=True)),
                ('specimenpart', models.CharField(blank=True, db_column='SpecimenPart', max_length=128, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('viewangle', models.CharField(blank=True, db_column='ViewAngle', max_length=128, null=True)),
                ('viewname', models.CharField(blank=True, db_column='ViewName', max_length=128, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'morphbankview',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Materialsample',
            fields=[
                ('id', models.AutoField(db_column='materialsampleid', primary_key=True, serialize=False)),
                ('ggbn_absorbanceratio260_230', models.DecimalField(blank=True, db_column='GGBNAbsorbanceRatio260_230', decimal_places=10, max_digits=22, null=True)),
                ('ggbn_absorbanceratio260_280', models.DecimalField(blank=True, db_column='GGBNAbsorbanceRatio260_280', decimal_places=10, max_digits=22, null=True)),
                ('ggbn_absorbanceratiomethod', models.CharField(blank=True, db_column='GGBNRAbsorbanceRatioMethod', max_length=64, null=True)),
                ('ggbn_concentration', models.DecimalField(blank=True, db_column='GGBNConcentration', decimal_places=10, max_digits=22, null=True)),
                ('ggbn_concentrationunit', models.CharField(blank=True, db_column='GGBNConcentrationUnit', max_length=64, null=True)),
                ('ggbn_materialsampletype', models.CharField(blank=True, db_column='GGBNMaterialSampleType', max_length=64, null=True)),
                ('ggbn_medium', models.CharField(blank=True, db_column='GGBNMedium', max_length=64, null=True)),
                ('ggbn_purificationmethod', models.CharField(blank=True, db_column='GGBNPurificationMethod', max_length=64, null=True)),
                ('ggbn_quality', models.CharField(blank=True, db_column='GGBNQuality', max_length=64, null=True)),
                ('ggbn_qualitycheckdate', models.DateTimeField(blank=True, db_column='GGBNQualityCheckDate', null=True)),
                ('ggbn_qualityremarks', models.TextField(blank=True, db_column='GGBNQualityRemarks', null=True)),
                ('ggbn_sampledesignation', models.CharField(blank=True, db_column='GGBNSampleDesignation', max_length=128, null=True)),
                ('ggbn_samplesize', models.DecimalField(blank=True, db_column='GGBNSampleSize', decimal_places=10, max_digits=22, null=True)),
                ('ggbn_volume', models.DecimalField(blank=True, db_column='GGBNVolume', decimal_places=10, max_digits=22, null=True)),
                ('ggbn_volumeunit', models.CharField(blank=True, db_column='GGBNVolumeUnit', max_length=64, null=True)),
                ('ggbn_weight', models.DecimalField(blank=True, db_column='GGBNWeight', decimal_places=10, max_digits=22, null=True)),
                ('ggbn_weightmethod', models.CharField(blank=True, db_column='GGBNWeightMethod', max_length=64, null=True)),
                ('ggbn_weightunit', models.CharField(blank=True, db_column='GGBNWeightUnit', max_length=64, null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('extractiondate', models.DateTimeField(blank=True, db_column='ExtractionDate', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('reservedinteger3', models.IntegerField(blank=True, db_column='ReservedInteger3', null=True)),
                ('reservedinteger4', models.IntegerField(blank=True, db_column='ReservedInteger4', null=True)),
                ('reservednumber3', models.DecimalField(blank=True, db_column='ReservedNumber3', decimal_places=10, max_digits=22, null=True)),
                ('reservednumber4', models.DecimalField(blank=True, db_column='ReservedNumber4', decimal_places=10, max_digits=22, null=True)),
                ('reservedtext3', models.TextField(blank=True, db_column='ReservedText3', null=True)),
                ('reservedtext4', models.TextField(blank=True, db_column='ReservedText4', null=True)),
                ('srabioprojectid', models.CharField(blank=True, db_column='SRABioProjectID', max_length=64, null=True)),
                ('srabiosampleid', models.CharField(blank=True, db_column='SRABioSampleID', max_length=64, null=True)),
                ('sraprojectid', models.CharField(blank=True, db_column='SRAProjectID', max_length=64, null=True)),
                ('srasampleid', models.CharField(blank=True, db_column='SRASampleID', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('extractor', models.ForeignKey(db_column='ExtractorID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationID', on_delete=django.db.models.deletion.CASCADE, related_name='materialsamples', to='specify.preparation')),
            ],
            options={
                'db_table': 'materialsample',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Localitynamealias',
            fields=[
                ('id', models.AutoField(db_column='localitynamealiasid', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('source', models.CharField(db_column='Source', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('locality', models.ForeignKey(db_column='LocalityID', on_delete=django.db.models.deletion.CASCADE, related_name='localitynamealiass', to='specify.locality')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'localitynamealias',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Localitydetail',
            fields=[
                ('id', models.AutoField(db_column='localitydetailid', primary_key=True, serialize=False)),
                ('basemeridian', models.CharField(blank=True, db_column='BaseMeridian', max_length=50, null=True)),
                ('drainage', models.CharField(blank=True, db_column='Drainage', max_length=64, null=True)),
                ('enddepth', models.DecimalField(blank=True, db_column='EndDepth', decimal_places=10, max_digits=22, null=True)),
                ('enddepthunit', models.CharField(blank=True, db_column='EndDepthUnit', max_length=23, null=True)),
                ('enddepthverbatim', models.CharField(blank=True, db_column='EndDepthVerbatim', max_length=32, null=True)),
                ('gml', models.TextField(blank=True, db_column='GML', null=True)),
                ('huccode', models.CharField(blank=True, db_column='HucCode', max_length=16, null=True)),
                ('island', models.CharField(blank=True, db_column='Island', max_length=64, null=True)),
                ('islandgroup', models.CharField(blank=True, db_column='IslandGroup', max_length=64, null=True)),
                ('mgrszone', models.CharField(blank=True, db_column='MgrsZone', max_length=4, null=True)),
                ('nationalparkname', models.CharField(blank=True, db_column='NationalParkName', max_length=64, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('paleolat', models.CharField(blank=True, db_column='PaleoLat', max_length=32, null=True)),
                ('paleolng', models.CharField(blank=True, db_column='PaleoLng', max_length=32, null=True)),
                ('rangedesc', models.CharField(blank=True, db_column='RangeDesc', max_length=50, null=True)),
                ('rangedirection', models.CharField(blank=True, db_column='RangeDirection', max_length=50, null=True)),
                ('section', models.CharField(blank=True, db_column='Section', max_length=50, null=True)),
                ('sectionpart', models.CharField(blank=True, db_column='SectionPart', max_length=50, null=True)),
                ('startdepth', models.DecimalField(blank=True, db_column='StartDepth', decimal_places=10, max_digits=22, null=True)),
                ('startdepthunit', models.CharField(blank=True, db_column='StartDepthUnit', max_length=23, null=True)),
                ('startdepthverbatim', models.CharField(blank=True, db_column='StartDepthVerbatim', max_length=32, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('township', models.CharField(blank=True, db_column='Township', max_length=50, null=True)),
                ('townshipdirection', models.CharField(blank=True, db_column='TownshipDirection', max_length=50, null=True)),
                ('utmdatum', models.CharField(blank=True, db_column='UtmDatum', max_length=32, null=True)),
                ('utmeasting', models.DecimalField(blank=True, db_column='UtmEasting', decimal_places=10, max_digits=22, null=True)),
                ('utmfalseeasting', models.IntegerField(blank=True, db_column='UtmFalseEasting', null=True)),
                ('utmfalsenorthing', models.IntegerField(blank=True, db_column='UtmFalseNorthing', null=True)),
                ('utmnorthing', models.DecimalField(blank=True, db_column='UtmNorthing', decimal_places=10, max_digits=22, null=True)),
                ('utmoriglatitude', models.DecimalField(blank=True, db_column='UtmOrigLatitude', decimal_places=10, max_digits=22, null=True)),
                ('utmoriglongitude', models.DecimalField(blank=True, db_column='UtmOrigLongitude', decimal_places=10, max_digits=22, null=True)),
                ('utmscale', models.DecimalField(blank=True, db_column='UtmScale', decimal_places=10, max_digits=22, null=True)),
                ('utmzone', models.SmallIntegerField(blank=True, db_column='UtmZone', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('waterbody', models.CharField(blank=True, db_column='WaterBody', max_length=64, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('locality', models.ForeignKey(db_column='LocalityID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='localitydetails', to='specify.locality')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'localitydetail',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Localitycitation',
            fields=[
                ('id', models.AutoField(db_column='localitycitationid', primary_key=True, serialize=False)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('locality', models.ForeignKey(db_column='LocalityID', on_delete=django.db.models.deletion.CASCADE, related_name='localitycitations', to='specify.locality')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='localitycitations', to='specify.referencework')),
            ],
            options={
                'db_table': 'localitycitation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Localityattachment',
            fields=[
                ('id', models.AutoField(db_column='localityattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='localityattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('locality', models.ForeignKey(db_column='LocalityID', on_delete=django.db.models.deletion.CASCADE, related_name='localityattachments', to='specify.locality')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'localityattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='locality',
            name='paleocontext',
            field=models.ForeignKey(db_column='PaleoContextID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='localities', to='specify.paleocontext'),
        ),
        migrations.AddField(
            model_name='locality',
            name='visibilitysetby',
            field=models.ForeignKey(db_column='VisibilitySetByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Loanreturnpreparation',
            fields=[
                ('id', models.AutoField(db_column='loanreturnpreparationid', primary_key=True, serialize=False)),
                ('quantityresolved', models.IntegerField(blank=True, db_column='QuantityResolved', null=True)),
                ('quantityreturned', models.IntegerField(blank=True, db_column='QuantityReturned', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('returneddate', models.DateTimeField(blank=True, db_column='ReturnedDate', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('loanpreparation', models.ForeignKey(db_column='LoanPreparationID', on_delete=django.db.models.deletion.CASCADE, related_name='loanreturnpreparations', to='specify.loanpreparation')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('receivedby', models.ForeignKey(db_column='ReceivedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'loanreturnpreparation',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='loanpreparation',
            name='preparation',
            field=models.ForeignKey(db_column='PreparationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='loanpreparations', to='specify.preparation'),
        ),
        migrations.CreateModel(
            name='Loanattachment',
            fields=[
                ('id', models.AutoField(db_column='loanattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='loanattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('loan', models.ForeignKey(db_column='LoanID', on_delete=django.db.models.deletion.CASCADE, related_name='loanattachments', to='specify.loan')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'loanattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Loanagent',
            fields=[
                ('id', models.AutoField(db_column='loanagentid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('loan', models.ForeignKey(db_column='LoanID', on_delete=django.db.models.deletion.CASCADE, related_name='loanagents', to='specify.loan')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'loanagent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Lithostrattreedefitem',
            fields=[
                ('id', models.AutoField(db_column='lithostrattreedefitemid', primary_key=True, serialize=False)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.BooleanField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.BooleanField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentItemID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.lithostrattreedefitem')),
                ('treedef', models.ForeignKey(db_column='LithoStratTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treedefitems', to='specify.lithostrattreedef')),
            ],
            options={
                'db_table': 'lithostrattreedefitem',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='lithostrat',
            name='definition',
            field=models.ForeignKey(db_column='LithoStratTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.lithostrattreedef'),
        ),
        migrations.AddField(
            model_name='lithostrat',
            name='definitionitem',
            field=models.ForeignKey(db_column='LithoStratTreeDefItemID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.lithostrattreedefitem'),
        ),
        migrations.AddField(
            model_name='lithostrat',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='lithostrat',
            name='parent',
            field=models.ForeignKey(db_column='ParentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.lithostrat'),
        ),
        migrations.CreateModel(
            name='Latlonpolygonpnt',
            fields=[
                ('id', models.AutoField(db_column='latlonpolygonpntid', primary_key=True, serialize=False)),
                ('elevation', models.IntegerField(blank=True, db_column='Elevation', null=True)),
                ('latitude', models.DecimalField(db_column='Latitude', decimal_places=10, max_digits=22)),
                ('longitude', models.DecimalField(db_column='Longitude', decimal_places=10, max_digits=22)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('latlonpolygon', models.ForeignKey(db_column='LatLonPolygonID', on_delete=django.db.models.deletion.CASCADE, related_name='points', to='specify.latlonpolygon')),
            ],
            options={
                'db_table': 'latlonpolygonpnt',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='latlonpolygon',
            name='locality',
            field=models.ForeignKey(db_column='LocalityID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='latlonpolygons', to='specify.locality'),
        ),
        migrations.AddField(
            model_name='latlonpolygon',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='latlonpolygon',
            name='visualquery',
            field=models.ForeignKey(db_column='SpVisualQueryID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='polygons', to='specify.spvisualquery'),
        ),
        migrations.CreateModel(
            name='Institutionnetwork',
            fields=[
                ('id', models.AutoField(db_column='institutionnetworkid', primary_key=True, serialize=False)),
                ('altname', models.CharField(blank=True, db_column='AltName', max_length=128, null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=64, null=True)),
                ('copyright', models.TextField(blank=True, db_column='Copyright', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('disclaimer', models.TextField(blank=True, db_column='Disclaimer', null=True)),
                ('iconuri', models.CharField(blank=True, db_column='IconURI', max_length=255, null=True)),
                ('ipr', models.TextField(blank=True, db_column='Ipr', null=True)),
                ('license', models.TextField(blank=True, db_column='License', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('termsofuse', models.TextField(blank=True, db_column='TermsOfUse', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('uri', models.CharField(blank=True, db_column='Uri', max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('address', models.ForeignKey(db_column='AddressID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.address')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'institutionnetwork',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='institution',
            name='storagetreedef',
            field=models.ForeignKey(db_column='StorageTreeDefID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='institutions', to='specify.storagetreedef'),
        ),
        migrations.CreateModel(
            name='Groupperson',
            fields=[
                ('id', models.AutoField(db_column='grouppersonid', primary_key=True, serialize=False)),
                ('ordernumber', models.SmallIntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('division', models.ForeignKey(db_column='DivisionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('group', models.ForeignKey(db_column='GroupID', on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='specify.agent')),
                ('member', models.ForeignKey(db_column='MemberID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='members', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'groupperson',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Giftpreparation',
            fields=[
                ('id', models.AutoField(db_column='giftpreparationid', primary_key=True, serialize=False)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=255, null=True)),
                ('incomments', models.TextField(blank=True, db_column='InComments', null=True)),
                ('outcomments', models.TextField(blank=True, db_column='OutComments', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('receivedcomments', models.TextField(blank=True, db_column='ReceivedComments', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('gift', models.ForeignKey(db_column='GiftID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='giftpreparations', to='specify.gift')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='giftpreparations', to='specify.preparation')),
            ],
            options={
                'db_table': 'giftpreparation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Giftattachment',
            fields=[
                ('id', models.AutoField(db_column='giftattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='giftattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('gift', models.ForeignKey(db_column='GiftID', on_delete=django.db.models.deletion.CASCADE, related_name='giftattachments', to='specify.gift')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'giftattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Giftagent',
            fields=[
                ('id', models.AutoField(db_column='giftagentid', primary_key=True, serialize=False)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('gift', models.ForeignKey(db_column='GiftID', on_delete=django.db.models.deletion.CASCADE, related_name='giftagents', to='specify.gift')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'giftagent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Geologictimeperiodtreedefitem',
            fields=[
                ('id', models.AutoField(db_column='geologictimeperiodtreedefitemid', primary_key=True, serialize=False)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.BooleanField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.BooleanField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentItemID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.geologictimeperiodtreedefitem')),
                ('treedef', models.ForeignKey(db_column='GeologicTimePeriodTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treedefitems', to='specify.geologictimeperiodtreedef')),
            ],
            options={
                'db_table': 'geologictimeperiodtreedefitem',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='geologictimeperiod',
            name='definition',
            field=models.ForeignKey(db_column='GeologicTimePeriodTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.geologictimeperiodtreedef'),
        ),
        migrations.AddField(
            model_name='geologictimeperiod',
            name='definitionitem',
            field=models.ForeignKey(db_column='GeologicTimePeriodTreeDefItemID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.geologictimeperiodtreedefitem'),
        ),
        migrations.AddField(
            model_name='geologictimeperiod',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='geologictimeperiod',
            name='parent',
            field=models.ForeignKey(db_column='ParentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.geologictimeperiod'),
        ),
        migrations.CreateModel(
            name='Geographytreedefitem',
            fields=[
                ('id', models.AutoField(db_column='geographytreedefitemid', primary_key=True, serialize=False)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=32, null=True)),
                ('isenforced', models.BooleanField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.BooleanField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=64, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentItemID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.geographytreedefitem')),
                ('treedef', models.ForeignKey(db_column='GeographyTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treedefitems', to='specify.geographytreedef')),
            ],
            options={
                'db_table': 'geographytreedefitem',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='geography',
            name='definition',
            field=models.ForeignKey(db_column='GeographyTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.geographytreedef'),
        ),
        migrations.AddField(
            model_name='geography',
            name='definitionitem',
            field=models.ForeignKey(db_column='GeographyTreeDefItemID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='treeentries', to='specify.geographytreedefitem'),
        ),
        migrations.AddField(
            model_name='geography',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='geography',
            name='parent',
            field=models.ForeignKey(db_column='ParentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.geography'),
        ),
        migrations.CreateModel(
            name='Geocoorddetail',
            fields=[
                ('id', models.AutoField(db_column='geocoorddetailid', primary_key=True, serialize=False)),
                ('errorpolygon', models.TextField(blank=True, db_column='ErrorPolygon', null=True)),
                ('georefaccuracy', models.DecimalField(blank=True, db_column='GeoRefAccuracy', decimal_places=10, max_digits=22, null=True)),
                ('georefaccuracyunits', models.CharField(blank=True, db_column='GeoRefAccuracyUnits', max_length=20, null=True)),
                ('georefcompileddate', models.DateTimeField(blank=True, db_column='GeoRefCompiledDate', null=True)),
                ('georefdetdate', models.DateTimeField(blank=True, db_column='GeoRefDetDate', null=True)),
                ('georefdetref', models.CharField(blank=True, db_column='GeoRefDetRef', max_length=100, null=True)),
                ('georefremarks', models.TextField(blank=True, db_column='GeoRefRemarks', null=True)),
                ('georefverificationstatus', models.CharField(blank=True, db_column='GeoRefVerificationStatus', max_length=50, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('maxuncertaintyest', models.DecimalField(blank=True, db_column='MaxUncertaintyEst', decimal_places=10, max_digits=22, null=True)),
                ('maxuncertaintyestunit', models.CharField(blank=True, db_column='MaxUncertaintyEstUnit', max_length=8, null=True)),
                ('namedplaceextent', models.DecimalField(blank=True, db_column='NamedPlaceExtent', decimal_places=10, max_digits=22, null=True)),
                ('nogeorefbecause', models.CharField(blank=True, db_column='NoGeoRefBecause', max_length=100, null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('originalcoordsystem', models.CharField(blank=True, db_column='OriginalCoordSystem', max_length=32, null=True)),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=64, null=True)),
                ('source', models.CharField(blank=True, db_column='Source', max_length=64, null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('uncertaintypolygon', models.TextField(blank=True, db_column='UncertaintyPolygon', null=True)),
                ('validation', models.CharField(blank=True, db_column='Validation', max_length=64, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('georefcompiledby', models.ForeignKey(db_column='CompiledByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('georefdetby', models.ForeignKey(db_column='AgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('locality', models.ForeignKey(db_column='LocalityID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='geocoorddetails', to='specify.locality')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'geocoorddetail',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Fundingagent',
            fields=[
                ('id', models.AutoField(db_column='fundingagentid', primary_key=True, serialize=False)),
                ('isprimary', models.BooleanField(db_column='IsPrimary', default=False)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=32, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('collectingtrip', models.ForeignKey(db_column='CollectingTripID', on_delete=django.db.models.deletion.CASCADE, related_name='fundingagents', to='specify.collectingtrip')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('division', models.ForeignKey(db_column='DivisionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'fundingagent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpagesetattachment',
            fields=[
                ('id', models.AutoField(db_column='fieldnotebookpagesetattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='fieldnotebookpagesetattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('fieldnotebookpageset', models.ForeignKey(db_column='FieldNotebookPageSetID', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='specify.fieldnotebookpageset')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'fieldnotebookpagesetattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Fieldnotebookpageattachment',
            fields=[
                ('id', models.AutoField(db_column='fieldnotebookpageattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='fieldnotebookpageattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('fieldnotebookpage', models.ForeignKey(db_column='FieldNotebookPageID', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='specify.fieldnotebookpage')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'fieldnotebookpageattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='fieldnotebookpage',
            name='pageset',
            field=models.ForeignKey(db_column='FieldNotebookPageSetID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='specify.fieldnotebookpageset'),
        ),
        migrations.CreateModel(
            name='Fieldnotebookattachment',
            fields=[
                ('id', models.AutoField(db_column='fieldnotebookattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='fieldnotebookattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('fieldnotebook', models.ForeignKey(db_column='FieldNotebookID', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='specify.fieldnotebook')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'fieldnotebookattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Extractor',
            fields=[
                ('id', models.AutoField(db_column='extractorid', primary_key=True, serialize=False)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('dnasequence', models.ForeignKey(db_column='DNASequenceID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='extractors', to='specify.dnasequence')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'extractor',
                'ordering': ('ordernumber',),
            },
        ),
        migrations.CreateModel(
            name='Exsiccataitem',
            fields=[
                ('id', models.AutoField(db_column='exsiccataitemid', primary_key=True, serialize=False)),
                ('fascicle', models.CharField(blank=True, db_column='Fascicle', max_length=16, null=True)),
                ('number', models.CharField(blank=True, db_column='Number', max_length=16, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='exsiccataitems', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('exsiccata', models.ForeignKey(db_column='ExsiccataID', on_delete=django.db.models.deletion.CASCADE, related_name='exsiccataitems', to='specify.exsiccata')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'exsiccataitem',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='exsiccata',
            name='referencework',
            field=models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exsiccatae', to='specify.referencework'),
        ),
        migrations.CreateModel(
            name='Exchangeoutprep',
            fields=[
                ('id', models.AutoField(db_column='exchangeoutprepid', primary_key=True, serialize=False)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=255, null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('exchangeout', models.ForeignKey(db_column='ExchangeOutID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exchangeoutpreps', to='specify.exchangeout')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exchangeoutpreps', to='specify.preparation')),
            ],
            options={
                'db_table': 'exchangeoutprep',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Exchangeoutattachment',
            fields=[
                ('id', models.AutoField(db_column='exchangeoutattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exchangeoutattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('exchangeout', models.ForeignKey(db_column='ExchangeOutID', on_delete=django.db.models.deletion.CASCADE, related_name='exchangeoutattachments', to='specify.exchangeout')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'exchangeoutattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Exchangeinprep',
            fields=[
                ('id', models.AutoField(db_column='exchangeinprepid', primary_key=True, serialize=False)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('descriptionofmaterial', models.CharField(blank=True, db_column='DescriptionOfMaterial', max_length=255, null=True)),
                ('number1', models.IntegerField(blank=True, db_column='Number1', null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('exchangein', models.ForeignKey(db_column='ExchangeInID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exchangeinpreps', to='specify.exchangein')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exchangeinpreps', to='specify.preparation')),
            ],
            options={
                'db_table': 'exchangeinprep',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Exchangeinattachment',
            fields=[
                ('id', models.AutoField(db_column='exchangeinattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='exchangeinattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('exchangein', models.ForeignKey(db_column='ExchangeInID', on_delete=django.db.models.deletion.CASCADE, related_name='exchangeinattachments', to='specify.exchangein')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'exchangeinattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Dnasequencingruncitation',
            fields=[
                ('id', models.AutoField(db_column='dnasequencingruncitationid', primary_key=True, serialize=False)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.referencework')),
                ('sequencingrun', models.ForeignKey(db_column='DNASequencingRunID', on_delete=django.db.models.deletion.CASCADE, related_name='citations', to='specify.dnasequencingrun')),
            ],
            options={
                'db_table': 'dnasequencingruncitation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Dnasequencingrunattachment',
            fields=[
                ('id', models.AutoField(db_column='dnasequencingrunattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='dnasequencingrunattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('dnasequencingrun', models.ForeignKey(db_column='DnaSequencingRunID', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='specify.dnasequencingrun')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'dnasequencerunattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Dnasequenceattachment',
            fields=[
                ('id', models.AutoField(db_column='dnasequenceattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='dnasequenceattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('dnasequence', models.ForeignKey(db_column='DnaSequenceID', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='specify.dnasequence')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'dnasequenceattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='dnasequence',
            name='materialsample',
            field=models.ForeignKey(db_column='MaterialSampleID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dnasequences', to='specify.materialsample'),
        ),
        migrations.AddField(
            model_name='dnasequence',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='dnasequence',
            name='sequencer',
            field=models.ForeignKey(db_column='AgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='division',
            name='institution',
            field=models.ForeignKey(db_column='InstitutionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='divisions', to='specify.institution'),
        ),
        migrations.AddField(
            model_name='division',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.CreateModel(
            name='Disposalpreparation',
            fields=[
                ('id', models.AutoField(db_column='disposalpreparationid', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('disposal', models.ForeignKey(db_column='DisposalID', on_delete=django.db.models.deletion.CASCADE, related_name='disposalpreparations', to='specify.disposal')),
                ('loanreturnpreparation', models.ForeignKey(db_column='LoanReturnPreparationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disposalpreparations', to='specify.loanreturnpreparation')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('preparation', models.ForeignKey(db_column='PreparationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disposalpreparations', to='specify.preparation')),
            ],
            options={
                'db_table': 'disposalpreparation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Disposalattachment',
            fields=[
                ('id', models.AutoField(db_column='disposalattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disposalattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('disposal', models.ForeignKey(db_column='DisposalID', on_delete=django.db.models.deletion.CASCADE, related_name='disposalattachments', to='specify.disposal')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'disposalattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Disposalagent',
            fields=[
                ('id', models.AutoField(db_column='disposalagentid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('disposal', models.ForeignKey(db_column='DisposalID', on_delete=django.db.models.deletion.CASCADE, related_name='disposalagents', to='specify.disposal')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'disposalagent',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='discipline',
            name='division',
            field=models.ForeignKey(db_column='DivisionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disciplines', to='specify.division'),
        ),
        migrations.AddField(
            model_name='discipline',
            name='geographytreedef',
            field=models.ForeignKey(db_column='GeographyTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disciplines', to='specify.geographytreedef'),
        ),
        migrations.AddField(
            model_name='discipline',
            name='geologictimeperiodtreedef',
            field=models.ForeignKey(db_column='GeologicTimePeriodTreeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disciplines', to='specify.geologictimeperiodtreedef'),
        ),
        migrations.AddField(
            model_name='discipline',
            name='lithostrattreedef',
            field=models.ForeignKey(db_column='LithoStratTreeDefID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='disciplines', to='specify.lithostrattreedef'),
        ),
        migrations.AddField(
            model_name='discipline',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='discipline',
            name='taxontreedef',
            field=models.OneToOneField(db_column='TaxonTreeDefID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='discipline', to='specify.taxontreedef'),
        ),
        migrations.CreateModel(
            name='Determiner',
            fields=[
                ('id', models.AutoField(db_column='determinerid', primary_key=True, serialize=False)),
                ('isprimary', models.BooleanField(db_column='IsPrimary', default=False)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('determination', models.ForeignKey(db_column='DeterminationID', on_delete=django.db.models.deletion.CASCADE, related_name='determiners', to='specify.determination')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'determiner',
                'ordering': ('ordernumber',),
            },
        ),
        migrations.CreateModel(
            name='Determinationcitation',
            fields=[
                ('id', models.AutoField(db_column='determinationcitationid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('determination', models.ForeignKey(db_column='DeterminationID', on_delete=django.db.models.deletion.CASCADE, related_name='determinationcitations', to='specify.determination')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='determinationcitations', to='specify.referencework')),
            ],
            options={
                'db_table': 'determinationcitation',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='determination',
            name='preferredtaxon',
            field=models.ForeignKey(db_column='PreferredTaxonID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.taxon'),
        ),
        migrations.AddField(
            model_name='determination',
            name='taxon',
            field=models.ForeignKey(db_column='TaxonID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='determinations', to='specify.taxon'),
        ),
        migrations.CreateModel(
            name='Deaccessionattachment',
            fields=[
                ('id', models.AutoField(db_column='deaccessionattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='deaccessionattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('deaccession', models.ForeignKey(db_column='DeaccessionID', on_delete=django.db.models.deletion.CASCADE, related_name='deaccessionattachments', to='specify.deaccession')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'deaccessionattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Deaccessionagent',
            fields=[
                ('id', models.AutoField(db_column='deaccessionagentid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('deaccession', models.ForeignKey(db_column='DeaccessionID', on_delete=django.db.models.deletion.CASCADE, related_name='deaccessionagents', to='specify.deaccession')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'deaccessionagent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(db_column='containerid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=1024, null=True)),
                ('number', models.IntegerField(blank=True, db_column='Number', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('type', models.SmallIntegerField(blank=True, db_column='Type', null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='children', to='specify.container')),
                ('storage', models.ForeignKey(db_column='StorageID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='containers', to='specify.storage')),
            ],
            options={
                'db_table': 'container',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Conserveventattachment',
            fields=[
                ('id', models.AutoField(db_column='conserveventattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='conserveventattachments', to='specify.attachment')),
                ('conservevent', models.ForeignKey(db_column='ConservEventID', on_delete=django.db.models.deletion.CASCADE, related_name='conserveventattachments', to='specify.conservevent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'conserveventattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Conservdescriptionattachment',
            fields=[
                ('id', models.AutoField(db_column='conservdescriptionattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='conservdescriptionattachments', to='specify.attachment')),
                ('conservdescription', models.ForeignKey(db_column='ConservDescriptionID', on_delete=django.db.models.deletion.CASCADE, related_name='conservdescriptionattachments', to='specify.conservdescription')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'conservdescriptionattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='conservdescription',
            name='division',
            field=models.ForeignKey(db_column='DivisionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division'),
        ),
        migrations.AddField(
            model_name='conservdescription',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='conservdescription',
            name='preparation',
            field=models.ForeignKey(db_column='PreparationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='conservdescriptions', to='specify.preparation'),
        ),
        migrations.CreateModel(
            name='Commonnametxcitation',
            fields=[
                ('id', models.AutoField(db_column='commonnametxcitationid', primary_key=True, serialize=False)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('commonnametx', models.ForeignKey(db_column='CommonNameTxID', on_delete=django.db.models.deletion.CASCADE, related_name='citations', to='specify.commonnametx')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.referencework')),
            ],
            options={
                'db_table': 'commonnametxcitation',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='commonnametx',
            name='taxon',
            field=models.ForeignKey(db_column='TaxonID', on_delete=django.db.models.deletion.CASCADE, related_name='commonnames', to='specify.taxon'),
        ),
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('id', models.AutoField(db_column='collectorid', primary_key=True, serialize=False)),
                ('isprimary', models.BooleanField(db_column='IsPrimary', default=False)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectors', to='specify.agent')),
                ('collectingevent', models.ForeignKey(db_column='CollectingEventID', on_delete=django.db.models.deletion.CASCADE, related_name='collectors', to='specify.collectingevent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('division', models.ForeignKey(db_column='DivisionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collector',
                'ordering': ('ordernumber',),
            },
        ),
        migrations.CreateModel(
            name='Collectionreltype',
            fields=[
                ('id', models.AutoField(db_column='collectionreltypeid', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32, null=True)),
                ('remarks', models.CharField(blank=True, db_column='Remarks', max_length=4096, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('leftsidecollection', models.ForeignKey(db_column='LeftSideCollectionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='leftsidereltypes', to='specify.collection')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('rightsidecollection', models.ForeignKey(db_column='RightSideCollectionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='rightsidereltypes', to='specify.collection')),
            ],
            options={
                'db_table': 'collectionreltype',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectionrelationship',
            fields=[
                ('id', models.AutoField(db_column='collectionrelationshipid', primary_key=True, serialize=False)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=32, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=32, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collectionreltype', models.ForeignKey(db_column='CollectionRelTypeID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.collectionreltype')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('leftside', models.ForeignKey(db_column='LeftSideCollectionID', on_delete=django.db.models.deletion.CASCADE, related_name='leftsiderels', to='specify.collectionobject')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('rightside', models.ForeignKey(db_column='RightSideCollectionID', on_delete=django.db.models.deletion.CASCADE, related_name='rightsiderels', to='specify.collectionobject')),
            ],
            options={
                'db_table': 'collectionrelationship',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectproperty',
            fields=[
                ('id', models.AutoField(db_column='collectionobjectpropertyid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date10', models.DateTimeField(blank=True, db_column='Date10', null=True)),
                ('date11', models.DateTimeField(blank=True, db_column='Date11', null=True)),
                ('date12', models.DateTimeField(blank=True, db_column='Date12', null=True)),
                ('date13', models.DateTimeField(blank=True, db_column='Date13', null=True)),
                ('date14', models.DateTimeField(blank=True, db_column='Date14', null=True)),
                ('date15', models.DateTimeField(blank=True, db_column='Date15', null=True)),
                ('date16', models.DateTimeField(blank=True, db_column='Date16', null=True)),
                ('date17', models.DateTimeField(blank=True, db_column='Date17', null=True)),
                ('date18', models.DateTimeField(blank=True, db_column='Date18', null=True)),
                ('date19', models.DateTimeField(blank=True, db_column='Date19', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date20', models.DateTimeField(blank=True, db_column='Date20', null=True)),
                ('date3', models.DateTimeField(blank=True, db_column='Date3', null=True)),
                ('date4', models.DateTimeField(blank=True, db_column='Date4', null=True)),
                ('date5', models.DateTimeField(blank=True, db_column='Date5', null=True)),
                ('date6', models.DateTimeField(blank=True, db_column='Date6', null=True)),
                ('date7', models.DateTimeField(blank=True, db_column='Date7', null=True)),
                ('date8', models.DateTimeField(blank=True, db_column='Date8', null=True)),
                ('date9', models.DateTimeField(blank=True, db_column='Date9', null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('integer1', models.SmallIntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.SmallIntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer11', models.SmallIntegerField(blank=True, db_column='Integer11', null=True)),
                ('integer12', models.SmallIntegerField(blank=True, db_column='Integer12', null=True)),
                ('integer13', models.SmallIntegerField(blank=True, db_column='Integer13', null=True)),
                ('integer14', models.SmallIntegerField(blank=True, db_column='Integer14', null=True)),
                ('integer15', models.SmallIntegerField(blank=True, db_column='Integer15', null=True)),
                ('integer16', models.SmallIntegerField(blank=True, db_column='Integer16', null=True)),
                ('integer17', models.SmallIntegerField(blank=True, db_column='Integer17', null=True)),
                ('integer18', models.SmallIntegerField(blank=True, db_column='Integer18', null=True)),
                ('integer19', models.SmallIntegerField(blank=True, db_column='Integer19', null=True)),
                ('integer2', models.SmallIntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer20', models.SmallIntegerField(blank=True, db_column='Integer20', null=True)),
                ('integer21', models.IntegerField(blank=True, db_column='Integer21', null=True)),
                ('integer22', models.IntegerField(blank=True, db_column='Integer22', null=True)),
                ('integer23', models.IntegerField(blank=True, db_column='Integer23', null=True)),
                ('integer24', models.IntegerField(blank=True, db_column='Integer24', null=True)),
                ('integer25', models.IntegerField(blank=True, db_column='Integer25', null=True)),
                ('integer26', models.IntegerField(blank=True, db_column='Integer26', null=True)),
                ('integer27', models.IntegerField(blank=True, db_column='Integer27', null=True)),
                ('integer28', models.IntegerField(blank=True, db_column='Integer28', null=True)),
                ('integer29', models.IntegerField(blank=True, db_column='Integer29', null=True)),
                ('integer3', models.SmallIntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer30', models.IntegerField(blank=True, db_column='Integer30', null=True)),
                ('integer4', models.SmallIntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.SmallIntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.SmallIntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.SmallIntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.SmallIntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.SmallIntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=22, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=22, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=22, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=22, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=22, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=22, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=22, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=22, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=22, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=22, null=True)),
                ('number21', models.DecimalField(blank=True, db_column='Number21', decimal_places=10, max_digits=22, null=True)),
                ('number22', models.DecimalField(blank=True, db_column='Number22', decimal_places=10, max_digits=22, null=True)),
                ('number23', models.DecimalField(blank=True, db_column='Number23', decimal_places=10, max_digits=22, null=True)),
                ('number24', models.DecimalField(blank=True, db_column='Number24', decimal_places=10, max_digits=22, null=True)),
                ('number25', models.DecimalField(blank=True, db_column='Number25', decimal_places=10, max_digits=22, null=True)),
                ('number26', models.DecimalField(blank=True, db_column='Number26', decimal_places=10, max_digits=22, null=True)),
                ('number27', models.DecimalField(blank=True, db_column='Number27', decimal_places=10, max_digits=22, null=True)),
                ('number28', models.DecimalField(blank=True, db_column='Number28', decimal_places=10, max_digits=22, null=True)),
                ('number29', models.DecimalField(blank=True, db_column='Number29', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number30', models.DecimalField(blank=True, db_column='Number30', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=22, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=22, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=22, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=50, null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=100, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=100, null=True)),
                ('text18', models.CharField(blank=True, db_column='Text18', max_length=100, null=True)),
                ('text19', models.CharField(blank=True, db_column='Text19', max_length=100, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=50, null=True)),
                ('text20', models.CharField(blank=True, db_column='Text20', max_length=100, null=True)),
                ('text21', models.CharField(blank=True, db_column='Text21', max_length=100, null=True)),
                ('text22', models.CharField(blank=True, db_column='Text22', max_length=100, null=True)),
                ('text23', models.CharField(blank=True, db_column='Text23', max_length=100, null=True)),
                ('text24', models.CharField(blank=True, db_column='Text24', max_length=100, null=True)),
                ('text25', models.CharField(blank=True, db_column='Text25', max_length=100, null=True)),
                ('text26', models.CharField(blank=True, db_column='Text26', max_length=100, null=True)),
                ('text27', models.CharField(blank=True, db_column='Text27', max_length=100, null=True)),
                ('text28', models.CharField(blank=True, db_column='Text28', max_length=100, null=True)),
                ('text29', models.CharField(blank=True, db_column='Text29', max_length=100, null=True)),
                ('text3', models.CharField(blank=True, db_column='Text3', max_length=50, null=True)),
                ('text30', models.CharField(blank=True, db_column='Text30', max_length=100, null=True)),
                ('text31', models.TextField(blank=True, db_column='Text31', null=True)),
                ('text32', models.TextField(blank=True, db_column='Text32', null=True)),
                ('text33', models.TextField(blank=True, db_column='Text33', null=True)),
                ('text34', models.TextField(blank=True, db_column='Text34', null=True)),
                ('text35', models.TextField(blank=True, db_column='Text35', null=True)),
                ('text36', models.TextField(blank=True, db_column='Text36', null=True)),
                ('text37', models.TextField(blank=True, db_column='Text37', null=True)),
                ('text38', models.TextField(blank=True, db_column='Text38', null=True)),
                ('text39', models.TextField(blank=True, db_column='Text39', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text40', models.TextField(blank=True, db_column='Text40', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.BooleanField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.BooleanField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.BooleanField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.BooleanField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.BooleanField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.BooleanField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.BooleanField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.BooleanField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.BooleanField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.BooleanField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno20', models.BooleanField(blank=True, db_column='YesNo20', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.BooleanField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.BooleanField(blank=True, db_column='YesNo7', null=True)),
                ('yesno8', models.BooleanField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.BooleanField(blank=True, db_column='YesNo9', null=True)),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent10', models.ForeignKey(db_column='Agent10ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent11', models.ForeignKey(db_column='Agent11ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent12', models.ForeignKey(db_column='Agent12ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent13', models.ForeignKey(db_column='Agent13ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent14', models.ForeignKey(db_column='Agent14ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent15', models.ForeignKey(db_column='Agent15ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent16', models.ForeignKey(db_column='Agent16ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent17', models.ForeignKey(db_column='Agent17ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent18', models.ForeignKey(db_column='Agent18ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent19', models.ForeignKey(db_column='Agent19ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent2', models.ForeignKey(db_column='Agent2ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent20', models.ForeignKey(db_column='Agent20ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent3', models.ForeignKey(db_column='Agent3ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent4', models.ForeignKey(db_column='Agent4ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent5', models.ForeignKey(db_column='Agent5ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent6', models.ForeignKey(db_column='Agent6ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent7', models.ForeignKey(db_column='Agent7ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent8', models.ForeignKey(db_column='Agent8D', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('agent9', models.ForeignKey(db_column='Agent9ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='collectionobjectproperties', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectionobjectproperty',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectcitation',
            fields=[
                ('id', models.AutoField(db_column='collectionobjectcitationid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='collectionobjectcitations', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjectcitations', to='specify.referencework')),
            ],
            options={
                'db_table': 'collectionobjectcitation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectattribute',
            fields=[
                ('id', models.AutoField(db_column='collectionobjectattributeid', primary_key=True, serialize=False)),
                ('bottomdistance', models.DecimalField(blank=True, db_column='BottomDistance', decimal_places=10, max_digits=22, null=True)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('direction', models.CharField(blank=True, db_column='Direction', max_length=32, null=True)),
                ('distanceunits', models.CharField(blank=True, db_column='DistanceUnits', max_length=16, null=True)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.IntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.IntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.IntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.IntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.IntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=22, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=22, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=22, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=22, null=True)),
                ('number14', models.DecimalField(blank=True, db_column='Number14', decimal_places=10, max_digits=22, null=True)),
                ('number15', models.DecimalField(blank=True, db_column='Number15', decimal_places=10, max_digits=22, null=True)),
                ('number16', models.DecimalField(blank=True, db_column='Number16', decimal_places=10, max_digits=22, null=True)),
                ('number17', models.DecimalField(blank=True, db_column='Number17', decimal_places=10, max_digits=22, null=True)),
                ('number18', models.DecimalField(blank=True, db_column='Number18', decimal_places=10, max_digits=22, null=True)),
                ('number19', models.DecimalField(blank=True, db_column='Number19', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number20', models.DecimalField(blank=True, db_column='Number20', decimal_places=10, max_digits=22, null=True)),
                ('number21', models.DecimalField(blank=True, db_column='Number21', decimal_places=10, max_digits=22, null=True)),
                ('number22', models.DecimalField(blank=True, db_column='Number22', decimal_places=10, max_digits=22, null=True)),
                ('number23', models.DecimalField(blank=True, db_column='Number23', decimal_places=10, max_digits=22, null=True)),
                ('number24', models.DecimalField(blank=True, db_column='Number24', decimal_places=10, max_digits=22, null=True)),
                ('number25', models.DecimalField(blank=True, db_column='Number25', decimal_places=10, max_digits=22, null=True)),
                ('number26', models.DecimalField(blank=True, db_column='Number26', decimal_places=10, max_digits=22, null=True)),
                ('number27', models.DecimalField(blank=True, db_column='Number27', decimal_places=10, max_digits=22, null=True)),
                ('number28', models.DecimalField(blank=True, db_column='Number28', decimal_places=10, max_digits=22, null=True)),
                ('number29', models.DecimalField(blank=True, db_column='Number29', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number30', models.IntegerField(blank=True, db_column='Number30', null=True)),
                ('number31', models.DecimalField(blank=True, db_column='Number31', decimal_places=10, max_digits=22, null=True)),
                ('number32', models.DecimalField(blank=True, db_column='Number32', decimal_places=10, max_digits=22, null=True)),
                ('number33', models.DecimalField(blank=True, db_column='Number33', decimal_places=10, max_digits=22, null=True)),
                ('number34', models.DecimalField(blank=True, db_column='Number34', decimal_places=10, max_digits=22, null=True)),
                ('number35', models.DecimalField(blank=True, db_column='Number35', decimal_places=10, max_digits=22, null=True)),
                ('number36', models.DecimalField(blank=True, db_column='Number36', decimal_places=10, max_digits=22, null=True)),
                ('number37', models.DecimalField(blank=True, db_column='Number37', decimal_places=10, max_digits=22, null=True)),
                ('number38', models.DecimalField(blank=True, db_column='Number38', decimal_places=10, max_digits=22, null=True)),
                ('number39', models.DecimalField(blank=True, db_column='Number39', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number40', models.DecimalField(blank=True, db_column='Number40', decimal_places=10, max_digits=22, null=True)),
                ('number41', models.DecimalField(blank=True, db_column='Number41', decimal_places=10, max_digits=22, null=True)),
                ('number42', models.DecimalField(blank=True, db_column='Number42', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=22, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=22, null=True)),
                ('number8', models.IntegerField(blank=True, db_column='Number8', null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=22, null=True)),
                ('positionstate', models.CharField(blank=True, db_column='PositionState', max_length=32, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=64, null=True)),
                ('text16', models.TextField(blank=True, db_column='Text16', null=True)),
                ('text17', models.TextField(blank=True, db_column='Text17', null=True)),
                ('text18', models.TextField(blank=True, db_column='Text18', null=True)),
                ('text19', models.TextField(blank=True, db_column='Text19', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text20', models.TextField(blank=True, db_column='Text20', null=True)),
                ('text21', models.TextField(blank=True, db_column='Text21', null=True)),
                ('text22', models.TextField(blank=True, db_column='Text22', null=True)),
                ('text23', models.TextField(blank=True, db_column='Text23', null=True)),
                ('text24', models.TextField(blank=True, db_column='Text24', null=True)),
                ('text25', models.TextField(blank=True, db_column='Text25', null=True)),
                ('text26', models.TextField(blank=True, db_column='Text26', null=True)),
                ('text27', models.TextField(blank=True, db_column='Text27', null=True)),
                ('text28', models.TextField(blank=True, db_column='Text28', null=True)),
                ('text29', models.TextField(blank=True, db_column='Text29', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text30', models.TextField(blank=True, db_column='Text30', null=True)),
                ('text31', models.TextField(blank=True, db_column='Text31', null=True)),
                ('text32', models.TextField(blank=True, db_column='Text32', null=True)),
                ('text33', models.TextField(blank=True, db_column='Text33', null=True)),
                ('text34', models.TextField(blank=True, db_column='Text34', null=True)),
                ('text35', models.TextField(blank=True, db_column='Text35', null=True)),
                ('text36', models.TextField(blank=True, db_column='Text36', null=True)),
                ('text37', models.TextField(blank=True, db_column='Text37', null=True)),
                ('text38', models.TextField(blank=True, db_column='Text38', null=True)),
                ('text39', models.TextField(blank=True, db_column='Text39', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=50, null=True)),
                ('text40', models.TextField(blank=True, db_column='Text40', null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=50, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=100, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=100, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('topdistance', models.DecimalField(blank=True, db_column='TopDistance', decimal_places=10, max_digits=22, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno10', models.BooleanField(blank=True, db_column='YesNo10', null=True)),
                ('yesno11', models.BooleanField(blank=True, db_column='YesNo11', null=True)),
                ('yesno12', models.BooleanField(blank=True, db_column='YesNo12', null=True)),
                ('yesno13', models.BooleanField(blank=True, db_column='YesNo13', null=True)),
                ('yesno14', models.BooleanField(blank=True, db_column='YesNo14', null=True)),
                ('yesno15', models.BooleanField(blank=True, db_column='YesNo15', null=True)),
                ('yesno16', models.BooleanField(blank=True, db_column='YesNo16', null=True)),
                ('yesno17', models.BooleanField(blank=True, db_column='YesNo17', null=True)),
                ('yesno18', models.BooleanField(blank=True, db_column='YesNo18', null=True)),
                ('yesno19', models.BooleanField(blank=True, db_column='YesNo19', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno20', models.BooleanField(blank=True, db_column='YesNo20', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('yesno6', models.BooleanField(blank=True, db_column='YesNo6', null=True)),
                ('yesno7', models.BooleanField(blank=True, db_column='YesNo7', null=True)),
                ('yesno8', models.BooleanField(blank=True, db_column='YesNo8', null=True)),
                ('yesno9', models.BooleanField(blank=True, db_column='YesNo9', null=True)),
                ('agent1', models.ForeignKey(db_column='Agent1ID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectionobjectattribute',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectattr',
            fields=[
                ('id', models.AutoField(db_column='attrid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('dblvalue', models.FloatField(blank=True, db_column='DoubleValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='collectionobjectattrs', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('definition', models.ForeignKey(db_column='AttributeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjectattrs', to='specify.attributedef')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectionobjectattr',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectionobjectattachment',
            fields=[
                ('id', models.AutoField(db_column='collectionobjectattachmentid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjectattachments', to='specify.attachment')),
                ('collectionobject', models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='collectionobjectattachments', to='specify.collectionobject')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectionobjectattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='collectionobjectattribute',
            field=models.ForeignKey(db_column='CollectionObjectAttributeID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjects', to='specify.collectionobjectattribute'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='container',
            field=models.ForeignKey(db_column='ContainerID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjects', to='specify.container'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='containerowner',
            field=models.ForeignKey(db_column='ContainerOwnerID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjectkids', to='specify.container'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='embargoauthority',
            field=models.ForeignKey(db_column='EmbargoAuthorityID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='fieldnotebookpage',
            field=models.ForeignKey(db_column='FieldNotebookPageID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjects', to='specify.fieldnotebookpage'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='inventorizedby',
            field=models.ForeignKey(db_column='InventorizedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='paleocontext',
            field=models.ForeignKey(db_column='PaleoContextID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectionobjects', to='specify.paleocontext'),
        ),
        migrations.AddField(
            model_name='collectionobject',
            name='visibilitysetby',
            field=models.ForeignKey(db_column='VisibilitySetByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='discipline',
            field=models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collections', to='specify.discipline'),
        ),
        migrations.AddField(
            model_name='collection',
            name='institutionnetwork',
            field=models.ForeignKey(db_column='InstitutionNetworkID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.institution'),
        ),
        migrations.AddField(
            model_name='collection',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.CreateModel(
            name='Collectingtripauthorization',
            fields=[
                ('id', models.AutoField(db_column='collectingtripauthorizationid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collectingtrip', models.ForeignKey(db_column='CollectingTripID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collectingtripauthorizations', to='specify.collectingtrip')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('permit', models.ForeignKey(db_column='PermitID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingtripauthorizations', to='specify.permit')),
            ],
            options={
                'db_table': 'collectingtripauthorization',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectingtripattribute',
            fields=[
                ('id', models.AutoField(db_column='collectingtripattributeid', primary_key=True, serialize=False)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.IntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.IntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.IntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.IntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.IntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=22, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=22, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=22, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=22, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=22, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=22, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.CharField(blank=True, db_column='Text10', max_length=50, null=True)),
                ('text11', models.CharField(blank=True, db_column='Text11', max_length=50, null=True)),
                ('text12', models.CharField(blank=True, db_column='Text12', max_length=50, null=True)),
                ('text13', models.CharField(blank=True, db_column='Text13', max_length=50, null=True)),
                ('text14', models.CharField(blank=True, db_column='Text14', max_length=50, null=True)),
                ('text15', models.CharField(blank=True, db_column='Text15', max_length=50, null=True)),
                ('text16', models.CharField(blank=True, db_column='Text16', max_length=50, null=True)),
                ('text17', models.CharField(blank=True, db_column='Text17', max_length=50, null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=100, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=100, null=True)),
                ('text6', models.CharField(blank=True, db_column='Text6', max_length=50, null=True)),
                ('text7', models.CharField(blank=True, db_column='Text7', max_length=50, null=True)),
                ('text8', models.CharField(blank=True, db_column='Text8', max_length=50, null=True)),
                ('text9', models.CharField(blank=True, db_column='Text9', max_length=50, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectingtripattribute',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectingtripattachment',
            fields=[
                ('id', models.AutoField(db_column='collectingtripattachmentid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingtripattachments', to='specify.attachment')),
                ('collectingtrip', models.ForeignKey(db_column='CollectingTripID', on_delete=django.db.models.deletion.CASCADE, related_name='collectingtripattachments', to='specify.collectingtrip')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectingtripattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='collectingtrip',
            name='collectingtripattribute',
            field=models.ForeignKey(db_column='CollectingTripAttributeID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingtrips', to='specify.collectingtripattribute'),
        ),
        migrations.AddField(
            model_name='collectingtrip',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='collectingtrip',
            name='discipline',
            field=models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline'),
        ),
        migrations.AddField(
            model_name='collectingtrip',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.CreateModel(
            name='Collectingeventauthorization',
            fields=[
                ('id', models.AutoField(db_column='collectingeventauthorizationid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collectingevent', models.ForeignKey(db_column='CollectingEventID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collectingeventauthorizations', to='specify.collectingevent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('permit', models.ForeignKey(db_column='PermitID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingeventauthorizations', to='specify.permit')),
            ],
            options={
                'db_table': 'collectingeventauthorization',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectingeventattribute',
            fields=[
                ('id', models.AutoField(db_column='collectingeventattributeid', primary_key=True, serialize=False)),
                ('integer1', models.IntegerField(blank=True, db_column='Integer1', null=True)),
                ('integer10', models.IntegerField(blank=True, db_column='Integer10', null=True)),
                ('integer2', models.IntegerField(blank=True, db_column='Integer2', null=True)),
                ('integer3', models.IntegerField(blank=True, db_column='Integer3', null=True)),
                ('integer4', models.IntegerField(blank=True, db_column='Integer4', null=True)),
                ('integer5', models.IntegerField(blank=True, db_column='Integer5', null=True)),
                ('integer6', models.IntegerField(blank=True, db_column='Integer6', null=True)),
                ('integer7', models.IntegerField(blank=True, db_column='Integer7', null=True)),
                ('integer8', models.IntegerField(blank=True, db_column='Integer8', null=True)),
                ('integer9', models.IntegerField(blank=True, db_column='Integer9', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number10', models.DecimalField(blank=True, db_column='Number10', decimal_places=10, max_digits=22, null=True)),
                ('number11', models.DecimalField(blank=True, db_column='Number11', decimal_places=10, max_digits=22, null=True)),
                ('number12', models.DecimalField(blank=True, db_column='Number12', decimal_places=10, max_digits=22, null=True)),
                ('number13', models.DecimalField(blank=True, db_column='Number13', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('number3', models.DecimalField(blank=True, db_column='Number3', decimal_places=10, max_digits=22, null=True)),
                ('number4', models.DecimalField(blank=True, db_column='Number4', decimal_places=10, max_digits=22, null=True)),
                ('number5', models.DecimalField(blank=True, db_column='Number5', decimal_places=10, max_digits=22, null=True)),
                ('number6', models.DecimalField(blank=True, db_column='Number6', decimal_places=10, max_digits=22, null=True)),
                ('number7', models.DecimalField(blank=True, db_column='Number7', decimal_places=10, max_digits=22, null=True)),
                ('number8', models.DecimalField(blank=True, db_column='Number8', decimal_places=10, max_digits=22, null=True)),
                ('number9', models.DecimalField(blank=True, db_column='Number9', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text10', models.TextField(blank=True, db_column='Text10', null=True)),
                ('text11', models.TextField(blank=True, db_column='Text11', null=True)),
                ('text12', models.TextField(blank=True, db_column='Text12', null=True)),
                ('text13', models.TextField(blank=True, db_column='Text13', null=True)),
                ('text14', models.TextField(blank=True, db_column='Text14', null=True)),
                ('text15', models.TextField(blank=True, db_column='Text15', null=True)),
                ('text16', models.TextField(blank=True, db_column='Text16', null=True)),
                ('text17', models.TextField(blank=True, db_column='Text17', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.CharField(blank=True, db_column='Text4', max_length=100, null=True)),
                ('text5', models.CharField(blank=True, db_column='Text5', max_length=100, null=True)),
                ('text6', models.TextField(blank=True, db_column='Text6', null=True)),
                ('text7', models.TextField(blank=True, db_column='Text7', null=True)),
                ('text8', models.TextField(blank=True, db_column='Text8', null=True)),
                ('text9', models.TextField(blank=True, db_column='Text9', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline')),
                ('hosttaxon', models.ForeignKey(db_column='HostTaxonID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingeventattributes', to='specify.taxon')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectingeventattribute',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectingeventattr',
            fields=[
                ('id', models.AutoField(db_column='attrid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('dblvalue', models.FloatField(blank=True, db_column='DoubleValue', null=True)),
                ('strvalue', models.CharField(blank=True, db_column='StrValue', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('collectingevent', models.ForeignKey(db_column='CollectingEventID', on_delete=django.db.models.deletion.CASCADE, related_name='collectingeventattrs', to='specify.collectingevent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('definition', models.ForeignKey(db_column='AttributeDefID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingeventattrs', to='specify.attributedef')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectingeventattr',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Collectingeventattachment',
            fields=[
                ('id', models.AutoField(db_column='collectingeventattachmentid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingeventattachments', to='specify.attachment')),
                ('collectingevent', models.ForeignKey(db_column='CollectingEventID', on_delete=django.db.models.deletion.CASCADE, related_name='collectingeventattachments', to='specify.collectingevent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'collectingeventattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='collectingeventattribute',
            field=models.ForeignKey(db_column='CollectingEventAttributeID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingevents', to='specify.collectingeventattribute'),
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='collectingtrip',
            field=models.ForeignKey(db_column='CollectingTripID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingevents', to='specify.collectingtrip'),
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='discipline',
            field=models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.discipline'),
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='locality',
            field=models.ForeignKey(db_column='LocalityID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingevents', to='specify.locality'),
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='paleocontext',
            field=models.ForeignKey(db_column='PaleoContextID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='collectingevents', to='specify.paleocontext'),
        ),
        migrations.AddField(
            model_name='collectingevent',
            name='visibilitysetby',
            field=models.ForeignKey(db_column='VisibilitySetByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Borrowreturnmaterial',
            fields=[
                ('id', models.AutoField(db_column='borrowreturnmaterialid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('quantity', models.SmallIntegerField(blank=True, db_column='Quantity', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('returneddate', models.DateTimeField(blank=True, db_column='ReturnedDate', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='ReturnedByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('borrowmaterial', models.ForeignKey(db_column='BorrowMaterialID', on_delete=django.db.models.deletion.CASCADE, related_name='borrowreturnmaterials', to='specify.borrowmaterial')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'borrowreturnmaterial',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Borrowattachment',
            fields=[
                ('id', models.AutoField(db_column='borrowattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='borrowattachments', to='specify.attachment')),
                ('borrow', models.ForeignKey(db_column='BorrowID', on_delete=django.db.models.deletion.CASCADE, related_name='borrowattachments', to='specify.borrow')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'borrowattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Borrowagent',
            fields=[
                ('id', models.AutoField(db_column='borrowagentid', primary_key=True, serialize=False)),
                ('collectionmemberid', models.IntegerField(db_column='CollectionMemberID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=32)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('borrow', models.ForeignKey(db_column='BorrowID', on_delete=django.db.models.deletion.CASCADE, related_name='borrowagents', to='specify.borrow')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'borrowagent',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Autonumberingscheme',
            fields=[
                ('id', models.AutoField(db_column='autonumberingschemeid', primary_key=True, serialize=False)),
                ('formatname', models.CharField(blank=True, db_column='FormatName', max_length=64, null=True)),
                ('isnumericonly', models.BooleanField(db_column='IsNumericOnly', default=False)),
                ('schemeclassname', models.CharField(blank=True, db_column='SchemeClassName', max_length=64, null=True)),
                ('schemename', models.CharField(blank=True, db_column='SchemeName', max_length=64, null=True)),
                ('tablenumber', models.IntegerField(db_column='TableNumber')),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'autonumberingscheme',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(db_column='authorid', primary_key=True, serialize=False)),
                ('ordernumber', models.SmallIntegerField(db_column='OrderNumber')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='specify.referencework')),
            ],
            options={
                'db_table': 'author',
                'ordering': ('ordernumber',),
            },
        ),
        migrations.AddField(
            model_name='attributedef',
            name='discipline',
            field=models.ForeignKey(db_column='DisciplineID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='attributedefs', to='specify.discipline'),
        ),
        migrations.AddField(
            model_name='attributedef',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='attributedef',
            name='preptype',
            field=models.ForeignKey(db_column='PrepTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributedefs', to='specify.preptype'),
        ),
        migrations.CreateModel(
            name='Attachmenttag',
            fields=[
                ('id', models.AutoField(db_column='attachmenttagid', primary_key=True, serialize=False)),
                ('tag', models.CharField(db_column='Tag', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='tags', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'attachmenttag',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Attachmentmetadata',
            fields=[
                ('id', models.AutoField(db_column='attachmentmetadataid', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('value', models.CharField(db_column='Value', max_length=128)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('attachment', models.ForeignKey(db_column='AttachmentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='metadata', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'attachmentmetadata',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Attachmentimageattribute',
            fields=[
                ('id', models.AutoField(db_column='attachmentimageattributeid', primary_key=True, serialize=False)),
                ('creativecommons', models.CharField(blank=True, db_column='CreativeCommons', max_length=500, null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('imagetype', models.CharField(blank=True, db_column='ImageType', max_length=80, null=True)),
                ('magnification', models.FloatField(blank=True, db_column='Magnification', null=True)),
                ('mbimageid', models.IntegerField(blank=True, db_column='MBImageID', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('resolution', models.FloatField(blank=True, db_column='Resolution', null=True)),
                ('text1', models.CharField(blank=True, db_column='Text1', max_length=200, null=True)),
                ('text2', models.CharField(blank=True, db_column='Text2', max_length=200, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestamplastsend', models.DateTimeField(blank=True, db_column='TimestampLastSend', null=True)),
                ('timestamplastupdatecheck', models.DateTimeField(blank=True, db_column='TimestampLastUpdateCheck', null=True)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('viewdescription', models.CharField(blank=True, db_column='ViewDescription', max_length=80, null=True)),
                ('width', models.IntegerField(blank=True, db_column='Width', null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('morphbankview', models.ForeignKey(db_column='MorphBankViewID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='attachmentimageattributes', to='specify.morphbankview')),
            ],
            options={
                'db_table': 'attachmentimageattribute',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='attachment',
            name='attachmentimageattribute',
            field=models.ForeignKey(db_column='AttachmentImageAttributeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='specify.attachmentimageattribute'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='creator',
            field=models.ForeignKey(db_column='CreatorID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='visibilitysetby',
            field=models.ForeignKey(db_column='VisibilitySetByID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Agentvariant',
            fields=[
                ('id', models.AutoField(db_column='agentvariantid', primary_key=True, serialize=False)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=2, null=True)),
                ('language', models.CharField(blank=True, db_column='Language', max_length=2, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('vartype', models.SmallIntegerField(db_column='VarType')),
                ('variant', models.CharField(blank=True, db_column='Variant', max_length=2, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'agentvariant',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Agentspecialty',
            fields=[
                ('id', models.AutoField(db_column='agentspecialtyid', primary_key=True, serialize=False)),
                ('ordernumber', models.IntegerField(db_column='OrderNumber')),
                ('specialtyname', models.CharField(db_column='SpecialtyName', max_length=64)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=django.db.models.deletion.CASCADE, related_name='agentspecialties', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'agentspecialty',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Agentidentifier',
            fields=[
                ('id', models.AutoField(db_column='agentidentifierid', primary_key=True, serialize=False)),
                ('date1', models.DateTimeField(blank=True, db_column='Date1', null=True)),
                ('date1precision', models.SmallIntegerField(blank=True, db_column='Date1Precision', null=True)),
                ('date2', models.DateTimeField(blank=True, db_column='Date2', null=True)),
                ('date2precision', models.SmallIntegerField(blank=True, db_column='Date2Precision', null=True)),
                ('identifier', models.CharField(db_column='Identifier', max_length=2048)),
                ('identifiertype', models.CharField(blank=True, db_column='IdentifierType', max_length=256, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('text3', models.TextField(blank=True, db_column='Text3', null=True)),
                ('text4', models.TextField(blank=True, db_column='Text4', null=True)),
                ('text5', models.TextField(blank=True, db_column='Text5', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                ('yesno3', models.BooleanField(blank=True, db_column='YesNo3', null=True)),
                ('yesno4', models.BooleanField(blank=True, db_column='YesNo4', null=True)),
                ('yesno5', models.BooleanField(blank=True, db_column='YesNo5', null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'agentidentifier',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Agentgeography',
            fields=[
                ('id', models.AutoField(db_column='agentgeographyid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(blank=True, db_column='Role', max_length=64, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=django.db.models.deletion.CASCADE, related_name='agentgeographies', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('geography', models.ForeignKey(db_column='GeographyID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.geography')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'agentgeography',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Agentattachment',
            fields=[
                ('id', models.AutoField(db_column='agentattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=django.db.models.deletion.CASCADE, related_name='agentattachments', to='specify.agent')),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='agentattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'agentattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='collcontentcontact',
            field=models.ForeignKey(db_column='CollectionCCID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='contentcontacts', to='specify.collection'),
        ),
        migrations.AddField(
            model_name='agent',
            name='colltechcontact',
            field=models.ForeignKey(db_column='CollectionTCID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='technicalcontacts', to='specify.collection'),
        ),
        migrations.AddField(
            model_name='agent',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='agent',
            name='division',
            field=models.ForeignKey(db_column='DivisionID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='members', to='specify.division'),
        ),
        migrations.AddField(
            model_name='agent',
            name='instcontentcontact',
            field=models.ForeignKey(db_column='InstitutionCCID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='contentcontacts', to='specify.institution'),
        ),
        migrations.AddField(
            model_name='agent',
            name='insttechcontact',
            field=models.ForeignKey(db_column='InstitutionTCID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='technicalcontacts', to='specify.institution'),
        ),
        migrations.AddField(
            model_name='agent',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='agent',
            name='organization',
            field=models.ForeignKey(db_column='ParentOrganizationID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='orgmembers', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='agent',
            name='specifyuser',
            field=models.ForeignKey(db_column='SpecifyUserID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='addressofrecord',
            name='agent',
            field=models.ForeignKey(db_column='AgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='addressofrecord',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='addressofrecord',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='address',
            name='agent',
            field=models.ForeignKey(db_column='AgentID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='address',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='address',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.CreateModel(
            name='Accessioncitation',
            fields=[
                ('id', models.AutoField(db_column='accessioncitationid', primary_key=True, serialize=False)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('accession', models.ForeignKey(db_column='AccessionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='accessioncitations', to='specify.accession')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.referencework')),
            ],
            options={
                'db_table': 'accessioncitation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Accessionauthorization',
            fields=[
                ('id', models.AutoField(db_column='accessionauthorizationid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('accession', models.ForeignKey(db_column='AccessionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accessionauthorizations', to='specify.accession')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('permit', models.ForeignKey(db_column='PermitID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='accessionauthorizations', to='specify.permit')),
                ('repositoryagreement', models.ForeignKey(db_column='RepositoryAgreementID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repositoryagreementauthorizations', to='specify.repositoryagreement')),
            ],
            options={
                'db_table': 'accessionauthorization',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Accessionattachment',
            fields=[
                ('id', models.AutoField(db_column='accessionattachmentid', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(db_column='Ordinal')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('accession', models.ForeignKey(db_column='AccessionID', on_delete=django.db.models.deletion.CASCADE, related_name='accessionattachments', to='specify.accession')),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='accessionattachments', to='specify.attachment')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'accessionattachment',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='Accessionagent',
            fields=[
                ('id', models.AutoField(db_column='accessionagentid', primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('role', models.CharField(db_column='Role', max_length=50)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('accession', models.ForeignKey(db_column='AccessionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accessionagents', to='specify.accession')),
                ('agent', models.ForeignKey(db_column='AgentID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent')),
                ('repositoryagreement', models.ForeignKey(db_column='RepositoryAgreementID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repositoryagreementagents', to='specify.repositoryagreement')),
            ],
            options={
                'db_table': 'accessionagent',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='accession',
            name='addressofrecord',
            field=models.ForeignKey(db_column='AddressOfRecordID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='accessions', to='specify.addressofrecord'),
        ),
        migrations.AddField(
            model_name='accession',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='accession',
            name='division',
            field=models.ForeignKey(db_column='DivisionID', on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.division'),
        ),
        migrations.AddField(
            model_name='accession',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='accession',
            name='repositoryagreement',
            field=models.ForeignKey(db_column='RepositoryAgreementID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='accessions', to='specify.repositoryagreement'),
        ),
        migrations.AddField(
            model_name='specifyuser',
            name='createdbyagent',
            field=models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='specifyuser',
            name='modifiedbyagent',
            field=models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=specifyweb.specify.models.protect_with_blockers, related_name='+', to='specify.agent'),
        ),
    ]
