# Generated by Django 4.2.18 on 2025-06-12 23:10

from django.db import migrations, models

# Import your field update utilities
from specifyweb.specify.migration_utils.update_schema_config import (
    revert_table_field_schema_config,
    update_table_field_schema_config_with_defaults,
)
from specifyweb.specify.migration_utils.sp7_schemaconfig import (
    MIGRATION_0034_FIELDS as SCHEMA_CONFIG_RAW_FIELDS,
    MIGRATION_0034_UPDATE_FIELDS as SCHEMA_CONFIG_FIELD_DESC,
)

def update_0034_fields(apps):
    """
    Update table-field schema entries for plain field names
    (e.g., MIGRATION_0034_FIELDS).
    """
    Discipline = apps.get_model('specify', 'Discipline')
    for discipline in Discipline.objects.all():
        for table, fields in SCHEMA_CONFIG_RAW_FIELDS.items():
            for field_name in fields:
                update_table_field_schema_config_with_defaults(table, discipline.id, field_name, apps)

def revert_0034_fields(apps):
    """
    Revert table-field entries for plain field names.
    """
    for table, fields in SCHEMA_CONFIG_RAW_FIELDS.items():
        for field_name in fields:
            revert_table_field_schema_config(table, field_name, apps)

def update_0034_schema_config_field_desc(apps, schema_editor):
    """
    Update field descriptions and display names using MIGRATION_0034_UPDATE_FIELDS
    (tuple: (fieldName, newLabel, newDesc)).
    """
    Splocalecontainer = apps.get_model('specify', 'Splocalecontainer')
    Splocalecontaineritem = apps.get_model('specify', 'Splocalecontaineritem')
    Splocaleitemstr = apps.get_model('specify', 'Splocaleitemstr')

    for table, fields in SCHEMA_CONFIG_FIELD_DESC.items():
        containers = Splocalecontainer.objects.filter(name=table.lower())
        for container in containers:
            for (field_name, new_name, new_desc) in fields:
                items = Splocalecontaineritem.objects.filter(
                    container=container,
                    name=field_name.lower()
                )
                for item in items:
                    item.ishidden = True
                    item.save()
                    desc_str = Splocaleitemstr.objects.filter(itemdesc_id=item.id).first()
                    name_str = Splocaleitemstr.objects.filter(itemname_id=item.id).first()
                    if not desc_str or not name_str:
                        continue
                    desc_str.text = new_desc
                    desc_str.save()
                    name_str.text = new_name
                    name_str.save()

def revert_0034_schema_config_field_desc(apps, schema_editor):
    """
    Revert the field name/description updates.
    """
    Splocalecontainer = apps.get_model('specify', 'Splocalecontainer')
    Splocalecontaineritem = apps.get_model('specify', 'Splocalecontaineritem')

    for table, fields in SCHEMA_CONFIG_FIELD_DESC.items():
        containers = Splocalecontainer.objects.filter(name=table.lower())
        for container in containers:
            for (field_name, _, _) in fields:
                items = Splocalecontaineritem.objects.filter(
                    container=container,
                    name=field_name.lower()
                )
                for item in items:
                    # If needed, reset ishidden or revert text
                    pass

def consolidated_0034_forward(apps, schema_editor):
    update_0034_fields(apps)
    update_0034_schema_config_field_desc(apps, schema_editor)

def consolidated_0034_backward(apps, schema_editor):
    revert_0034_schema_config_field_desc(apps, schema_editor)
    revert_0034_fields(apps)

class Migration(migrations.Migration):

    dependencies = [
        ('specify', '0033_update_paleo_desc'),
    ]

    operations = [
        migrations.AddField(
            model_name='accession',
            name='date1',
            field=models.DateTimeField(blank=True, null=True, db_column='Date1'),
        ),
        migrations.AddField(
            model_name='accession',
            name='date1precision',
            field=models.SmallIntegerField(default=1, blank=True, null=True, db_column='Date1Precision'),
        ),
        migrations.AddField(
            model_name='accession',
            name='date2',
            field=models.DateTimeField(blank=True, null=True, db_column='Date2'),
        ),
        migrations.AddField(
            model_name='accession',
            name='date2precision',
            field=models.SmallIntegerField(default=1, blank=True, null=True, db_column='Date2Precision'),
        ),
        migrations.AddField(
            model_name='accession',
            name='dateaccessionedprecision',
            field=models.SmallIntegerField(default=1, blank=True, null=True, db_column='DateAccessionedPrecision'),
        ),
        migrations.AddField(
            model_name='accession',
            name='dateacknowledgedprecision',
            field=models.SmallIntegerField(default=1, blank=True, null=True, db_column='DateAcknowledgedPrecision'),
        ),
        migrations.AddField(
            model_name='accession',
            name='datereceivedprecision',
            field=models.SmallIntegerField(default=1, blank=True, null=True, db_column='DateReceivedPrecision'),
        ),
        migrations.RunPython(
            consolidated_0034_forward,
            consolidated_0034_backward,
            atomic=True,
        ),
    ]