# Generated by Django 3.2.15 on 2024-08-02 06:04

from django.apps import apps as specify_apps
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from specifyweb.specify.models import protect_with_blockers
from specifyweb.specify.update_schema_config import revert_table_field_schema_config, revert_table_schema_config, update_table_field_schema_config_with_defaults, update_table_schema_config_with_defaults

SCHEMA_CONFIG_TABLES = [
    ('AbsoluteAge', None),
    ('RelativeAge', None),
    ('TectonicUnitTreeDef', None),
    ('TectonicUnitTreeDefItem', None),
    ('TectonicUnit', None),
    ('RelativeAgeCitation', None),
    ('RelativeAgeAttachment', None),
    ('AbsoluteAgeCitation', None),
    ('AbsoluteAgeAttachment', None),
]
SCHEMA_CONFIG_MOD_TABLE_FIELDS = { # TODO: make schema config corrections in new migration
    'Collectionobject': ['relativeAges', 'absoluteAges', 'collectionObjectType'],
    'Collection': ['collectionObjectType'],
    'Geographytreedef': ['discipline'],
    'Geologictimeperiodtreedef': ['discipline'],
    'Lithostrattreedef': ['discipline'],
}
PICKLIST_NAME = 'AgeType'
DEFAULT_AGE_TYPES = [
    'Sedimentation', 
    'Metamorphism', 
    'Erosion', 
    'Diagenetic', 
]

def create_agetype_picklist(apps):
    Collection = apps.get_model('specify', 'Collection')
    Picklist = apps.get_model('specify', 'Picklist')
    PicklistItem = apps.get_model('specify', 'Picklistitem')
    # Create a AgeType picklist for each collection
    for collection in Collection.objects.all():
        age_type_picklist, _ = Picklist.objects.get_or_create(
            name=PICKLIST_NAME,
            issystem=False,
            readonly=False,
            sizelimit=-1,
            sorttype=1,
            type=0,
            collection=collection,
            formatter=PICKLIST_NAME
        )
        for age_type in DEFAULT_AGE_TYPES:
            PicklistItem.objects.create(
                title=age_type,
                value=age_type,
                picklist=age_type_picklist
            )

def revert_agetype_picklist(apps, schema_editor):
    Collection = apps.get_model('specify', 'Collection')
    Picklist = apps.get_model('specify', 'Picklist')
    PicklistItem = apps.get_model('specify', 'Picklistitem')

    for collection in Collection.objects.all():
        age_type_pick_lists = Picklist.objects.filter(name=PICKLIST_NAME, collection=collection)

        for age_type_pick_list in age_type_pick_lists:
            PicklistItem.objects.filter(picklist=age_type_pick_list).delete()
            age_type_pick_list.delete()

def create_table_schema_config_with_defaults(apps):
    Discipline = specify_apps.get_model('specify', 'Discipline')
    for discipline in Discipline.objects.all():
        for table, desc in SCHEMA_CONFIG_TABLES:
            update_table_schema_config_with_defaults(table, discipline.id, discipline, desc)

        for table, fields in SCHEMA_CONFIG_MOD_TABLE_FIELDS.items():
            for field in fields:
                update_table_field_schema_config_with_defaults(table, discipline.id, discipline, field)

def revert_table_schema_config_with_defaults():
    for table, _ in SCHEMA_CONFIG_TABLES:
        revert_table_schema_config(table)
    for table, fields in SCHEMA_CONFIG_MOD_TABLE_FIELDS.items():
        for field in fields:
            revert_table_field_schema_config(table, field)

class Migration(migrations.Migration):

    dependencies = [
        ('specify', '0003_cotype_picklist'),
    ]

    def consolidated_python_django_migration_operations(apps, schema_editor):
        create_table_schema_config_with_defaults(apps)
        create_agetype_picklist(apps)

    def revert_cosolidated_python_django_migration_operations(apps, schema_editor):
        revert_table_schema_config_with_defaults()
        revert_agetype_picklist(apps, schema_editor)

    operations = [
        migrations.CreateModel(
            name='AbsoluteAge',
            fields=[
                ('id', models.AutoField(db_column='AbsoluteAgeID', primary_key=True, serialize=False)),
                ('absoluteage', models.DecimalField(blank=True, db_column='AbsoluteAge', decimal_places=10, max_digits=22, null=True)),
                ('agetype', models.CharField(blank=True, db_column='AgeType', max_length=64, null=True)),
                ('ageuncertainty', models.DecimalField(blank=True, db_column='AgeUncertainty', decimal_places=10, max_digits=22, null=True)),
                ('collectiondate', models.DateField(blank=True, db_column='CollectionDate', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('datingmethod', models.CharField(blank=True, db_column='DatingMethod', max_length=64, null=True)),
                ('datingmethodremarks', models.TextField(blank=True, db_column='DatingMethodRemarks', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                #relationships
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'absoluteage',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='RelativeAge',
            fields=[
                ('id', models.AutoField(db_column='RelativeAgeID', primary_key=True, serialize=False)),
                ('agetype', models.CharField(blank=True, db_column='AgeType', max_length=64, null=True)),
                ('ageuncertainty', models.DecimalField(blank=True, db_column='AgeUncertainty', decimal_places=10, max_digits=22, null=True)),
                ('collectiondate', models.DateField(blank=True, db_column='CollectionDate', null=True)),
                ('date1', models.DateField(blank=True, db_column='Date1', null=True)),
                ('date2', models.DateField(blank=True, db_column='Date2', null=True)),
                ('datingmethod', models.CharField(blank=True, db_column='DatingMethod', max_length=64, null=True)),
                ('datingmethodremarks', models.TextField(blank=True, db_column='DatingMethodRemarks', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=22, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=22, null=True)),
                ('relativeageperiod', models.DecimalField(blank=True, db_column='RelativeAgePeriod', decimal_places=10, max_digits=22, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('verbatimname', models.TextField(blank=True, db_column='VerbatimName', null=True)),
                ('verbatimperiod', models.TextField(blank=True, db_column='VerbatimPeriod', null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                #relationships
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'relativeage',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='TectonicUnitTreeDef',
            fields=[
                ('id', models.AutoField(db_column='TectonicUnitTreeDefID', primary_key=True, serialize=False)),
                ('fullnamedirection', models.IntegerField(blank=True, db_column='FullNameDirection', null=True)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                #relationships
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('discipline', models.ForeignKey(db_column='DisciplineID', on_delete=protect_with_blockers, related_name='TectonicUnitTreeDef', to='specify.discipline')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'tectonicunittreedef',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='discipline',
            name='tectonicunittreedef',
            field=models.ForeignKey(db_column='TectonicUnitTreeDefID', default=None, null=True, on_delete=protect_with_blockers, related_name='disciplines', to='specify.tectonicunittreedef'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='TectonicUnitTreeDefItem',
            fields=[
                ('id', models.AutoField(db_column='TectonicUnitTreeDefItemID', primary_key=True, serialize=False)),
                ('fullnameseparator', models.CharField(blank=True, db_column='FullNameSeparator', max_length=255, null=True)),
                ('isenforced', models.BooleanField(blank=True, db_column='IsEnforced', null=True)),
                ('isinfullname', models.BooleanField(blank=True, db_column='IsInFullName', null=True)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('rankid', models.IntegerField(blank=True, db_column='RankID', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('textafter', models.CharField(blank=True, db_column='TextAfter', max_length=255, null=True)),
                ('textbefore', models.CharField(blank=True, db_column='TextBefore', max_length=255, null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=255, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                #relationships
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('parentitem', models.ForeignKey(db_column='ParentItemID', null=True, on_delete=protect_with_blockers, related_name='children', to='specify.tectonicunittreedefitem')),
                ('tectonicunittreedef', models.ForeignKey(db_column='TectonicUnitTreeDefID', on_delete=protect_with_blockers, related_name='tectonicunittreedefitems', to='specify.tectonicunittreedef')),
            ],
            options={
                'db_table': 'tectonicunittreedefitem',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='TectonicUnit',
            fields=[
                ('id', models.AutoField(db_column='TectonicUnitID', primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, db_column='FullName', max_length=255, null=True)),
                ('guid', models.CharField(blank=True, db_column='GUID', max_length=128, null=True)),
                ('highestchildnodenumber', models.IntegerField(blank=True, db_column='HighestChildNodeNumber', null=True)),
                ('isaccepted', models.BooleanField(db_column='IsAccepted', default=False)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('nodenumber', models.IntegerField(blank=True, db_column='NodeNumber', null=True)),
                ('number1', models.DecimalField(blank=True, db_column='Number1', decimal_places=10, max_digits=20, null=True)),
                ('number2', models.DecimalField(blank=True, db_column='Number2', decimal_places=10, max_digits=20, null=True)),
                ('rankid', models.IntegerField(db_column='RankID')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('text1', models.TextField(blank=True, db_column='Text1', null=True)),
                ('text2', models.TextField(blank=True, db_column='Text2', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                ('yesno1', models.BooleanField(blank=True, db_column='YesNo1', null=True)),
                ('yesno2', models.BooleanField(blank=True, db_column='YesNo2', null=True)),
                #relationships
                ('acceptedtectonicunit', models.ForeignKey(db_column='AcceptedID', null=True, on_delete=models.CASCADE, related_name='acceptedchildren', to='specify.tectonicunit')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('parent', models.ForeignKey(db_column='ParentID', null=True, on_delete=protect_with_blockers, related_name='children', to='specify.tectonicunit')),
                ('tectonicunittreedef', models.ForeignKey(db_column='TectonicUnitTreeDefID', on_delete=protect_with_blockers, related_name='tectonics', to='specify.tectonicunittreedef')),
                ('tectonicunittreedefitem', models.ForeignKey(db_column='TectonicUnitTreeDefItemID', on_delete=protect_with_blockers, related_name='tectonics', to='specify.tectonicunittreedefitem')),
            ],
            options={
                'db_table': 'tectonicunit',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='RelativeAgeCitation',
            fields=[
                ('id', models.AutoField(db_column='RelativeAgeCitationID', primary_key=True, serialize=False)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                #relationships
                ('collectionmember', models.ForeignKey(db_column='CollectionMemberID', on_delete=protect_with_blockers, related_name='relativeagecitations', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=protect_with_blockers, related_name='relativeagecitations', to='specify.referencework')),
                ('relativeage', models.ForeignKey(db_column='RelativeAgeID', on_delete=protect_with_blockers, related_name='relativeagecitations', to='specify.relativeage')),
            ],
            options={
                'db_table': 'relativeagecitation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='RelativeAgeAttachment',
            fields=[
                ('id', models.AutoField(db_column='RelativeAgeAttachmentID', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                #relationships
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=protect_with_blockers, related_name='relativeageattachments', to='specify.attachment')),
                ('collectionmember', models.ForeignKey(db_column='CollectionMemberID', on_delete=protect_with_blockers, related_name='relativegeattachments', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('relativeage', models.ForeignKey(db_column='RelativeAgeID', on_delete=protect_with_blockers, related_name='relativeageattachments', to='specify.relativeage')),
            ],
            options={
                'db_table': 'relativeageattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='relativeage',
            name='relativeageattachment',
            field=models.ForeignKey(db_column='RelativeAgeAttachmentID', null=True, on_delete=protect_with_blockers, related_name='relativeages', to='specify.relativeageattachment'),
        ),
        migrations.AddField(
            model_name='relativeage',
            name='agename',
            field=models.ForeignKey(db_column='AgeNameID', null=True, on_delete=protect_with_blockers, related_name='relativeages', to='specify.geologictimeperiod'),
        ),
        migrations.AddField(
            model_name='relativeage',
            name='agenameend',
            field=models.ForeignKey(db_column='AgeNameEndID', null=True, on_delete=protect_with_blockers, related_name='relativeages', to='specify.geologictimeperiod'),
        ),
        migrations.AddField(
            model_name='relativeage',
            name='agent1',
            field=models.ForeignKey(db_column='Agent1ID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='relativeage',
            name='agent2',
            field=models.ForeignKey(db_column='Agent2ID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='relativeage',
            name='collectionobject',
            field=models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='relativeages', to='specify.collectionobject'),
        ),
        migrations.CreateModel(
            name='AbsoluteAgeCitation',
            fields=[
                ('id', models.AutoField(db_column='AbsoluteAgeCitationID', primary_key=True, serialize=False)),
                ('figurenumber', models.CharField(blank=True, db_column='FigureNumber', max_length=50, null=True)),
                ('isfigured', models.BooleanField(blank=True, db_column='IsFigured', null=True)),
                ('pagenumber', models.CharField(blank=True, db_column='PageNumber', max_length=50, null=True)),
                ('platenumber', models.CharField(blank=True, db_column='PlateNumber', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                #relationships
                ('absoluteage', models.ForeignKey(db_column='AbsoluteAgeID', on_delete=protect_with_blockers, related_name='absoluteagecitations', to='specify.absoluteage')),
                ('collectionmember', models.ForeignKey(db_column='CollectionMemberID', on_delete=protect_with_blockers, related_name='absoluteagecitations', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('referencework', models.ForeignKey(db_column='ReferenceWorkID', on_delete=protect_with_blockers, related_name='absoluteagecitations', to='specify.referencework')),
            ],
            options={
                'db_table': 'absoluteagecitation',
                'ordering': (),
            },
        ),
        migrations.CreateModel(
            name='AbsoluteAgeAttachment',
            fields=[
                ('id', models.AutoField(db_column='AbsoluteAgeAttachmentID', primary_key=True, serialize=False)),
                ('ordinal', models.IntegerField(blank=True, db_column='Ordinal', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('timestampcreated', models.DateTimeField(db_column='TimestampCreated', default=django.utils.timezone.now)),
                ('timestampmodified', models.DateTimeField(blank=True, db_column='TimestampModified', default=django.utils.timezone.now, null=True)),
                ('version', models.IntegerField(blank=True, db_column='Version', default=0, null=True)),
                #relationships
                ('absoluteage', models.ForeignKey(db_column='AbsoluteAgeID', on_delete=protect_with_blockers, related_name='absoluteageattachments', to='specify.absoluteage')),
                ('attachment', models.ForeignKey(db_column='AttachmentID', on_delete=protect_with_blockers, related_name='absoluteageattachments', to='specify.attachment')),
                ('collectionmember', models.ForeignKey(db_column='CollectionMemberID', on_delete=protect_with_blockers, related_name='absoluteageattachments', to='specify.collection')),
                ('createdbyagent', models.ForeignKey(db_column='CreatedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
                ('modifiedbyagent', models.ForeignKey(db_column='ModifiedByAgentID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent')),
            ],
            options={
                'db_table': 'absoluteageattachment',
                'ordering': (),
            },
        ),
        migrations.AddField(
            model_name='absoluteage',
            name='absoluteageattachment',
            field=models.ForeignKey(db_column='AbsoluteAgeAttachmentID', null=True, on_delete=protect_with_blockers, related_name='absoluteages', to='specify.absoluteageattachment'),
        ),
        migrations.AddField(
            model_name='absoluteage',
            name='agent1',
            field=models.ForeignKey(db_column='Agent1ID', null=True, on_delete=protect_with_blockers, related_name='+', to='specify.agent'),
        ),
        migrations.AddField(
            model_name='absoluteage',
            name='collectionobject',
            field=models.ForeignKey(db_column='CollectionObjectID', on_delete=django.db.models.deletion.CASCADE, related_name='absoluteages', to='specify.collectionobject'),
        ),
        migrations.AddField(
            model_name='paleocontext',
            name='tectonicunit',
            field=models.ForeignKey(db_column='TectonicUnitID', null=True, on_delete=protect_with_blockers, related_name='paleocontexts', to='specify.tectonicunit'),
        ),
        migrations.RunPython(consolidated_python_django_migration_operations, revert_cosolidated_python_django_migration_operations, atomic=True),
    ]
