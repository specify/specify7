# This is a Development Docker Composition of Specify 7
# It has nice features like hot reloading and debugging support
# However, it is not suited for production use due to memory leaks and security
# issues
# Though, you can use it for evaluation of Specify 7
#
# Full Documentation for the Development Docker Composition:
# https://github.com/specify/specify7/wiki/Docker-Workflow-for-Development
#
# Members of Specify Collections Consortium get access to production-ready
# Docker compositions. Please contact us at support@specifysoftware.org
# if you would like to get access
#
version: "3.7"

services:
  mariadb:
    image: mariadb:10.11
    volumes:
      - "database:/var/lib/mysql" # the data directory for mariadb
      - "./seed-database:/docker-entrypoint-initdb.d"
      - "./mariadb.cnf:/etc/mysql/mariadb.cnf"
    ports:
      - "127.0.0.1:3306:3306" # map host port 3306 to container port 3306
    command: --max_allowed_packet=1073741824
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${MASTER_NAME}
      - MYSQL_PASSWORD=${MASTER_PASSWORD}

  specify7:
    build:
      context: ./.
      target: run-development
    ports:
      # - "80:80"
      - "8000:8000"
      - "3000:3000" # Django Debug
      - "8888:8888" # Debugging service (ptvsd)
    command: ve/bin/python manage.py runserver 0.0.0.0:8000
    init: true
    restart: unless-stopped
    depends_on:
      # It seems like there was a race condition on the the
      # webpack-output volume. I suspect if this container mounts it
      # first, the mount point ends up owned by root instead of the
      # node user in the webpack container. Adding webpack to the
      # depends_on will hopefully stop that.
      - webpack
      - mariadb
    volumes:
      - "./config:/opt/specify7/config" # provides Specify 6 files to Specify 7 and the web server
      - "static-files:/volumes/static-files" # provides Specify 7 static files to the web server
      - "./specifyweb:/opt/specify7/specifyweb"
      - "webpack-output:/opt/specify7/specifyweb/frontend/static/js:ro" # mount webpack output as read-only
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file: .env

  webpack:
    build:
      context: ./.
      target: build-frontend
    command: npx webpack -w --mode development --color
    restart: unless-stopped
    volumes:
      - "webpack-output:/home/node/dist"
      - "./specifyweb/frontend/js_src/lib:/home/node/lib:ro"
      - "./specifyweb/frontend/js_src/css:/home/node/css:ro"

  specify7-worker:
    build:
      context: ./.
      target: run-development
    command: bash -c "ve/bin/celery -A specifyweb worker -l INFO --concurrency=1 -Q $DATABASE_NAME"
    init: true
    volumes:
      - "./config:/opt/specify7/config"
      - "static-files:/volumes/static-files"
      - "./specifyweb:/opt/specify7/specifyweb"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file: .env

  redis:
    image: redis

  asset-server:
    image: specifyconsortium/specify-asset-service
    init: true
    volumes:
      - "attachments:/home/specify/attachments"
    environment:
      - SERVER_NAME=host.docker.internal
      - SERVER_PORT=80
      - ATTACHMENT_KEY=${ASSET_SERVER_KEY}
      - DEBUG_MODE=false

  # specify6:
  #   image: specifyconsortium/specify6-service:6.8.03
  #   # build:
  #   #   context: ../specify6
  #   #   target: run-specify6
  #   volumes:
  #     - "specify6:/volumes/Specify"

  nginx:
    image: arm64v8/nginx:alpine
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - "static-files:/volumes/static-files:ro"
      - "./config:/volumes/specify-config:ro"
      - "webpack-output:/volumes/webpack-output:ro"
      - "./nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      # - "./sp7cert.pem:/etc/nginx/certs/cert.pem:ro"
      # - "./sp7key.pem:/etc/nginx/certs/key.pem:ro"

  report-runner:
    image: specifyconsortium/report-runner
    # build:
    #   context: ../report-runner-service
    #   target: run-report-runner

  flower:
    image: mher/flower
    # container_name: specify7-flower
    command: celery flower
    environment:
      # - SERVER_NAME=host.docker.internal
      # - SERVER_PORT=80
      # - ATTACHMENT_KEY=${ASSET_SERVER_KEY}
      # - DEBUG_MODE=false
      - CELERY_BROKER_URL=redis://redis/0
      - CELERY_RESULT_BACKEND=redis://redis/1
      - FLOWER_PORT=5555
    ports:
      - 5555:5555

  # apache:
  #   image: arm64v8/httpd:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - "static-files:/volumes/static-files:ro"
  #     - "specify6:/volumes/specify6:ro"
  #     - "webpack-output:/volumes/webpack-output:ro"

  #     # - "./specifyweb_apache.conf:/etc/apache2/sites-enabled/000-default.conf:ro"
  #     - "./specifyweb_apache.conf:/etc/confd/default.conf:ro"
  #     - "./specifyweb_apache.conf:/usr/local/apache2/conf/httpd/conf:ro"

volumes:
  attachments: # the asset-servers attachment files
  database: # the data directory for mariadb
  static-files: # provides Specify 7 static files to the web server
  webpack-output:
